<!DOCTYPE html>
<html class="staticrypt-html">
    <head>
        <meta charset="utf-8" />
        <title>Protected Page</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <!-- do not cache this page -->
        <meta http-equiv="cache-control" content="max-age=0" />
        <meta http-equiv="cache-control" content="no-cache" />
        <meta http-equiv="expires" content="0" />
        <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
        <meta http-equiv="pragma" content="no-cache" />

        <style>
            .staticrypt-hr {
                margin-top: 20px;
                margin-bottom: 20px;
                border: 0;
                border-top: 1px solid #eee;
            }

            .staticrypt-page {
                width: 360px;
                padding: 8% 0 0;
                margin: auto;
                box-sizing: border-box;
            }

            .staticrypt-form {
                position: relative;
                z-index: 1;
                background: #ffffff;
                max-width: 360px;
                margin: 0 auto 100px;
                padding: 45px;
                text-align: center;
                box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
            }

            .staticrypt-form input[type="password"] {
                outline: 0;
                background: #f2f2f2;
                width: 100%;
                border: 0;
                margin: 0 0 15px;
                padding: 15px;
                box-sizing: border-box;
                font-size: 14px;
            }

            .staticrypt-form .staticrypt-decrypt-button {
                text-transform: uppercase;
                outline: 0;
                background: #4CAF50;
                width: 100%;
                border: 0;
                padding: 15px;
                color: #ffffff;
                font-size: 14px;
                cursor: pointer;
            }

            .staticrypt-form .staticrypt-decrypt-button:hover,
            .staticrypt-form .staticrypt-decrypt-button:active,
            .staticrypt-form .staticrypt-decrypt-button:focus {
                background: #4CAF50;
                filter: brightness(92%);
            }

            .staticrypt-html {
                height: 100%;
            }

            .staticrypt-body {
                height: 100%;
                margin: 0;
            }

            .staticrypt-content {
                height: 100%;
                margin-bottom: 1em;
                background: #76B852;
                font-family: "Arial", sans-serif;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
            }

            .staticrypt-instructions {
                margin-top: -1em;
                margin-bottom: 1em;
            }

            .staticrypt-title {
                font-size: 1.5em;
            }

            label.staticrypt-remember {
                display: flex;
                align-items: center;
                margin-bottom: 1em;
            }

            .staticrypt-remember input[type="checkbox"] {
                transform: scale(1.5);
                margin-right: 1em;
            }

            .hidden {
                display: none !important;
            }

            .staticrypt-spinner-container {
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .staticrypt-spinner {
                display: inline-block;
                width: 2rem;
                height: 2rem;
                vertical-align: text-bottom;
                border: 0.25em solid gray;
                border-right-color: transparent;
                border-radius: 50%;
                -webkit-animation: spinner-border 0.75s linear infinite;
                animation: spinner-border 0.75s linear infinite;
                animation-duration: 0.75s;
                animation-timing-function: linear;
                animation-delay: 0s;
                animation-iteration-count: infinite;
                animation-direction: normal;
                animation-fill-mode: none;
                animation-play-state: running;
                animation-name: spinner-border;
            }

            @keyframes spinner-border {
                100% {
                    transform: rotate(360deg);
                }
            }
        </style>
    </head>

    <body class="staticrypt-body">
        <div id="staticrypt_loading" class="staticrypt-spinner-container">
            <div class="staticrypt-spinner"></div>
        </div>

        <div id="staticrypt_content" class="staticrypt-content hidden">
            <div class="staticrypt-page">
                <div class="staticrypt-form">
                    <div class="staticrypt-instructions">
                        <p class="staticrypt-title">Protected Page</p>
                        <p></p>
                    </div>

                    <hr class="staticrypt-hr" />

                    <form id="staticrypt-form" action="#" method="post">
                        <input
                            id="staticrypt-password"
                            type="password"
                            name="password"
                            placeholder="Password"
                            autofocus
                        />

                        <label id="staticrypt-remember-label" class="staticrypt-remember hidden">
                            <input id="staticrypt-remember" type="checkbox" name="remember" />
                            Remember me
                        </label>

                        <input type="submit" class="staticrypt-decrypt-button" value="DECRYPT" />
                    </form>
                </div>
            </div>
        </div>

        <script>
            // these variables will be filled when generating the file - the template format is 'variable_name'
            const staticryptInitiator = ((function(){
  const exports = {};
  const cryptoEngine = ((function(){
  const exports = {};
  const { subtle } = crypto;

const IV_BITS = 16 * 8;
const HEX_BITS = 4;
const ENCRYPTION_ALGO = "AES-CBC";

/**
 * Translates between utf8 encoded hexadecimal strings
 * and Uint8Array bytes.
 */
const HexEncoder = {
    /**
     * hex string -> bytes
     * @param {string} hexString
     * @returns {Uint8Array}
     */
    parse: function (hexString) {
        if (hexString.length % 2 !== 0) throw "Invalid hexString";
        const arrayBuffer = new Uint8Array(hexString.length / 2);

        for (let i = 0; i < hexString.length; i += 2) {
            const byteValue = parseInt(hexString.substring(i, i + 2), 16);
            if (isNaN(byteValue)) {
                throw "Invalid hexString";
            }
            arrayBuffer[i / 2] = byteValue;
        }
        return arrayBuffer;
    },

    /**
     * bytes -> hex string
     * @param {Uint8Array} bytes
     * @returns {string}
     */
    stringify: function (bytes) {
        const hexBytes = [];

        for (let i = 0; i < bytes.length; ++i) {
            let byteString = bytes[i].toString(16);
            if (byteString.length < 2) {
                byteString = "0" + byteString;
            }
            hexBytes.push(byteString);
        }
        return hexBytes.join("");
    },
};

/**
 * Translates between utf8 strings and Uint8Array bytes.
 */
const UTF8Encoder = {
    parse: function (str) {
        return new TextEncoder().encode(str);
    },

    stringify: function (bytes) {
        return new TextDecoder().decode(bytes);
    },
};

/**
 * Salt and encrypt a msg with a password.
 */
async function encrypt(msg, hashedPassword) {
    // Must be 16 bytes, unpredictable, and preferably cryptographically random. However, it need not be secret.
    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters
    const iv = crypto.getRandomValues(new Uint8Array(IV_BITS / 8));

    const key = await subtle.importKey("raw", HexEncoder.parse(hashedPassword), ENCRYPTION_ALGO, false, ["encrypt"]);

    const encrypted = await subtle.encrypt(
        {
            name: ENCRYPTION_ALGO,
            iv: iv,
        },
        key,
        UTF8Encoder.parse(msg)
    );

    // iv will be 32 hex characters, we prepend it to the ciphertext for use in decryption
    return HexEncoder.stringify(iv) + HexEncoder.stringify(new Uint8Array(encrypted));
}
exports.encrypt = encrypt;

/**
 * Decrypt a salted msg using a password.
 *
 * @param {string} encryptedMsg
 * @param {string} hashedPassword
 * @returns {Promise<string>}
 */
async function decrypt(encryptedMsg, hashedPassword) {
    const ivLength = IV_BITS / HEX_BITS;
    const iv = HexEncoder.parse(encryptedMsg.substring(0, ivLength));
    const encrypted = encryptedMsg.substring(ivLength);

    const key = await subtle.importKey("raw", HexEncoder.parse(hashedPassword), ENCRYPTION_ALGO, false, ["decrypt"]);

    const outBuffer = await subtle.decrypt(
        {
            name: ENCRYPTION_ALGO,
            iv: iv,
        },
        key,
        HexEncoder.parse(encrypted)
    );

    return UTF8Encoder.stringify(new Uint8Array(outBuffer));
}
exports.decrypt = decrypt;

/**
 * Salt and hash the password so it can be stored in localStorage without opening a password reuse vulnerability.
 *
 * @param {string} password
 * @param {string} salt
 * @returns {Promise<string>}
 */
async function hashPassword(password, salt) {
    // we hash the password in multiple steps, each adding more iterations. This is because we used to allow less
    // iterations, so for backward compatibility reasons, we need to support going from that to more iterations.
    let hashedPassword = await hashLegacyRound(password, salt);

    hashedPassword = await hashSecondRound(hashedPassword, salt);

    return hashThirdRound(hashedPassword, salt);
}
exports.hashPassword = hashPassword;

/**
 * This hashes the password with 1k iterations. This is a low number, we need this function to support backwards
 * compatibility.
 *
 * @param {string} password
 * @param {string} salt
 * @returns {Promise<string>}
 */
function hashLegacyRound(password, salt) {
    return pbkdf2(password, salt, 1000, "SHA-1");
}
exports.hashLegacyRound = hashLegacyRound;

/**
 * Add a second round of iterations. This is because we used to use 1k, so for backwards compatibility with
 * remember-me/autodecrypt links, we need to support going from that to more iterations.
 *
 * @param hashedPassword
 * @param salt
 * @returns {Promise<string>}
 */
function hashSecondRound(hashedPassword, salt) {
    return pbkdf2(hashedPassword, salt, 14000, "SHA-256");
}
exports.hashSecondRound = hashSecondRound;

/**
 * Add a third round of iterations to bring total number to 600k. This is because we used to use 1k, then 15k, so for
 * backwards compatibility with remember-me/autodecrypt links, we need to support going from that to more iterations.
 *
 * @param hashedPassword
 * @param salt
 * @returns {Promise<string>}
 */
function hashThirdRound(hashedPassword, salt) {
    return pbkdf2(hashedPassword, salt, 585000, "SHA-256");
}
exports.hashThirdRound = hashThirdRound;

/**
 * Salt and hash the password so it can be stored in localStorage without opening a password reuse vulnerability.
 *
 * @param {string} password
 * @param {string} salt
 * @param {int} iterations
 * @param {string} hashAlgorithm
 * @returns {Promise<string>}
 */
async function pbkdf2(password, salt, iterations, hashAlgorithm) {
    const key = await subtle.importKey("raw", UTF8Encoder.parse(password), "PBKDF2", false, ["deriveBits"]);

    const keyBytes = await subtle.deriveBits(
        {
            name: "PBKDF2",
            hash: hashAlgorithm,
            iterations,
            salt: UTF8Encoder.parse(salt),
        },
        key,
        256
    );

    return HexEncoder.stringify(new Uint8Array(keyBytes));
}

function generateRandomSalt() {
    const bytes = crypto.getRandomValues(new Uint8Array(128 / 8));

    return HexEncoder.stringify(new Uint8Array(bytes));
}
exports.generateRandomSalt = generateRandomSalt;

async function signMessage(hashedPassword, message) {
    const key = await subtle.importKey(
        "raw",
        HexEncoder.parse(hashedPassword),
        {
            name: "HMAC",
            hash: "SHA-256",
        },
        false,
        ["sign"]
    );
    const signature = await subtle.sign("HMAC", key, UTF8Encoder.parse(message));

    return HexEncoder.stringify(new Uint8Array(signature));
}
exports.signMessage = signMessage;

function getRandomAlphanum() {
    const possibleCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

    let byteArray;
    let parsedInt;

    // Keep generating new random bytes until we get a value that falls
    // within a range that can be evenly divided by possibleCharacters.length
    do {
        byteArray = crypto.getRandomValues(new Uint8Array(1));
        // extract the lowest byte to get an int from 0 to 255 (probably unnecessary, since we're only generating 1 byte)
        parsedInt = byteArray[0] & 0xff;
    } while (parsedInt >= 256 - (256 % possibleCharacters.length));

    // Take the modulo of the parsed integer to get a random number between 0 and totalLength - 1
    const randomIndex = parsedInt % possibleCharacters.length;

    return possibleCharacters[randomIndex];
}

/**
 * Generate a random string of a given length.
 *
 * @param {int} length
 * @returns {string}
 */
function generateRandomString(length) {
    let randomString = "";

    for (let i = 0; i < length; i++) {
        randomString += getRandomAlphanum();
    }

    return randomString;
}
exports.generateRandomString = generateRandomString;

  return exports;
})());
const codec = ((function(){
  const exports = {};
  /**
 * Initialize the codec with the provided cryptoEngine - this return functions to encode and decode messages.
 *
 * @param cryptoEngine - the engine to use for encryption / decryption
 */
function init(cryptoEngine) {
    const exports = {};

    /**
     * Top-level function for encoding a message.
     * Includes password hashing, encryption, and signing.
     *
     * @param {string} msg
     * @param {string} password
     * @param {string} salt
     *
     * @returns {string} The encoded text
     */
    async function encode(msg, password, salt) {
        const hashedPassword = await cryptoEngine.hashPassword(password, salt);

        const encrypted = await cryptoEngine.encrypt(msg, hashedPassword);

        // we use the hashed password in the HMAC because this is effectively what will be used a password (so we can store
        // it in localStorage safely, we don't use the clear text password)
        const hmac = await cryptoEngine.signMessage(hashedPassword, encrypted);

        return hmac + encrypted;
    }
    exports.encode = encode;

    /**
     * Encode using a password that has already been hashed. This is useful to encode multiple messages in a row, that way
     * we don't need to hash the password multiple times.
     *
     * @param {string} msg
     * @param {string} hashedPassword
     *
     * @returns {string} The encoded text
     */
    async function encodeWithHashedPassword(msg, hashedPassword) {
        const encrypted = await cryptoEngine.encrypt(msg, hashedPassword);

        // we use the hashed password in the HMAC because this is effectively what will be used a password (so we can store
        // it in localStorage safely, we don't use the clear text password)
        const hmac = await cryptoEngine.signMessage(hashedPassword, encrypted);

        return hmac + encrypted;
    }
    exports.encodeWithHashedPassword = encodeWithHashedPassword;

    /**
     * Top-level function for decoding a message.
     * Includes signature check and decryption.
     *
     * @param {string} signedMsg
     * @param {string} hashedPassword
     * @param {string} salt
     * @param {int} backwardCompatibleAttempt
     * @param {string} originalPassword
     *
     * @returns {Object} {success: true, decoded: string} | {success: false, message: string}
     */
    async function decode(signedMsg, hashedPassword, salt, backwardCompatibleAttempt = 0, originalPassword = "") {
        const encryptedHMAC = signedMsg.substring(0, 64);
        const encryptedMsg = signedMsg.substring(64);
        const decryptedHMAC = await cryptoEngine.signMessage(hashedPassword, encryptedMsg);

        if (decryptedHMAC !== encryptedHMAC) {
            // we have been raising the number of iterations in the hashing algorithm multiple times, so to support the old
            // remember-me/autodecrypt links we need to try bringing the old hashes up to speed.
            originalPassword = originalPassword || hashedPassword;
            if (backwardCompatibleAttempt === 0) {
                const updatedHashedPassword = await cryptoEngine.hashThirdRound(originalPassword, salt);

                return decode(signedMsg, updatedHashedPassword, salt, backwardCompatibleAttempt + 1, originalPassword);
            }
            if (backwardCompatibleAttempt === 1) {
                let updatedHashedPassword = await cryptoEngine.hashSecondRound(originalPassword, salt);
                updatedHashedPassword = await cryptoEngine.hashThirdRound(updatedHashedPassword, salt);

                return decode(signedMsg, updatedHashedPassword, salt, backwardCompatibleAttempt + 1, originalPassword);
            }

            return { success: false, message: "Signature mismatch" };
        }

        return {
            success: true,
            decoded: await cryptoEngine.decrypt(encryptedMsg, hashedPassword),
        };
    }
    exports.decode = decode;

    return exports;
}
exports.init = init;

  return exports;
})());
const decode = codec.init(cryptoEngine).decode;

/**
 * Initialize the staticrypt module, that exposes functions callbable by the password_template.
 *
 * @param {{
 *  staticryptEncryptedMsgUniqueVariableName: string,
 *  isRememberEnabled: boolean,
 *  rememberDurationInDays: number,
 *  staticryptSaltUniqueVariableName: string,
 * }} staticryptConfig - object of data that is stored on the password_template at encryption time.
 *
 * @param {{
 *  rememberExpirationKey: string,
 *  rememberPassphraseKey: string,
 *  replaceHtmlCallback: function,
 *  clearLocalStorageCallback: function,
 * }} templateConfig - object of data that can be configured by a custom password_template.
 */
function init(staticryptConfig, templateConfig) {
    const exports = {};

    /**
     * Decrypt our encrypted page, replace the whole HTML.
     *
     * @param {string} hashedPassword
     * @returns {Promise<boolean>}
     */
    async function decryptAndReplaceHtml(hashedPassword) {
        const { staticryptEncryptedMsgUniqueVariableName, staticryptSaltUniqueVariableName } = staticryptConfig;
        const { replaceHtmlCallback } = templateConfig;

        const result = await decode(
            staticryptEncryptedMsgUniqueVariableName,
            hashedPassword,
            staticryptSaltUniqueVariableName
        );
        if (!result.success) {
            return false;
        }
        const plainHTML = result.decoded;

        // if the user configured a callback call it, otherwise just replace the whole HTML
        if (typeof replaceHtmlCallback === "function") {
            replaceHtmlCallback(plainHTML);
        } else {
            document.write(plainHTML);
            document.close();
        }

        return true;
    }

    /**
     * Attempt to decrypt the page and replace the whole HTML.
     *
     * @param {string} password
     * @param {boolean} isRememberChecked
     *
     * @returns {Promise<{isSuccessful: boolean, hashedPassword?: string}>} - we return an object, so that if we want to
     *   expose more information in the future we can do it without breaking the password_template
     */
    async function handleDecryptionOfPage(password, isRememberChecked) {
        const { isRememberEnabled, rememberDurationInDays, staticryptSaltUniqueVariableName } = staticryptConfig;
        const { rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        // decrypt and replace the whole page
        const hashedPassword = await cryptoEngine.hashPassword(password, staticryptSaltUniqueVariableName);

        const isDecryptionSuccessful = await decryptAndReplaceHtml(hashedPassword);

        if (!isDecryptionSuccessful) {
            return {
                isSuccessful: false,
                hashedPassword,
            };
        }

        // remember the hashedPassword and set its expiration if necessary
        if (isRememberEnabled && isRememberChecked) {
            window.localStorage.setItem(rememberPassphraseKey, hashedPassword);

            // set the expiration if the duration isn't 0 (meaning no expiration)
            if (rememberDurationInDays > 0) {
                window.localStorage.setItem(
                    rememberExpirationKey,
                    (new Date().getTime() + rememberDurationInDays * 24 * 60 * 60 * 1000).toString()
                );
            }
        }

        return {
            isSuccessful: true,
            hashedPassword,
        };
    }
    exports.handleDecryptionOfPage = handleDecryptionOfPage;

    /**
     * Clear localstorage from staticrypt related values
     */
    function clearLocalStorage() {
        const { clearLocalStorageCallback, rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        if (typeof clearLocalStorageCallback === "function") {
            clearLocalStorageCallback();
        } else {
            localStorage.removeItem(rememberPassphraseKey);
            localStorage.removeItem(rememberExpirationKey);
        }
    }

    async function handleDecryptOnLoad() {
        let isSuccessful = await decryptOnLoadFromUrl();

        if (!isSuccessful) {
            isSuccessful = await decryptOnLoadFromRememberMe();
        }

        return { isSuccessful };
    }
    exports.handleDecryptOnLoad = handleDecryptOnLoad;

    /**
     * Clear storage if we are logging out
     *
     * @returns {boolean} - whether we logged out
     */
    function logoutIfNeeded() {
        const logoutKey = "staticrypt_logout";

        // handle logout through query param
        const queryParams = new URLSearchParams(window.location.search);
        if (queryParams.has(logoutKey)) {
            clearLocalStorage();
            return true;
        }

        // handle logout through URL fragment
        const hash = window.location.hash.substring(1);
        if (hash.includes(logoutKey)) {
            clearLocalStorage();
            return true;
        }

        return false;
    }

    /**
     * To be called on load: check if we want to try to decrypt and replace the HTML with the decrypted content, and
     * try to do it if needed.
     *
     * @returns {Promise<boolean>} true if we derypted and replaced the whole page, false otherwise
     */
    async function decryptOnLoadFromRememberMe() {
        const { rememberDurationInDays } = staticryptConfig;
        const { rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        // if we are login out, terminate
        if (logoutIfNeeded()) {
            return false;
        }

        // if there is expiration configured, check if we're not beyond the expiration
        if (rememberDurationInDays && rememberDurationInDays > 0) {
            const expiration = localStorage.getItem(rememberExpirationKey),
                isExpired = expiration && new Date().getTime() > parseInt(expiration);

            if (isExpired) {
                clearLocalStorage();
                return false;
            }
        }

        const hashedPassword = localStorage.getItem(rememberPassphraseKey);

        if (hashedPassword) {
            // try to decrypt
            const isDecryptionSuccessful = await decryptAndReplaceHtml(hashedPassword);

            // if the decryption is unsuccessful the password might be wrong - silently clear the saved data and let
            // the user fill the password form again
            if (!isDecryptionSuccessful) {
                clearLocalStorage();
                return false;
            }

            return true;
        }

        return false;
    }

    function decryptOnLoadFromUrl() {
        const passwordKey = "staticrypt_pwd";

        // get the password from the query param
        const queryParams = new URLSearchParams(window.location.search);
        const hashedPasswordQuery = queryParams.get(passwordKey);

        // get the password from the url fragment
        const hashRegexMatch = window.location.hash.substring(1).match(new RegExp(passwordKey + "=(.*)"));
        const hashedPasswordFragment = hashRegexMatch ? hashRegexMatch[1] : null;

        const hashedPassword = hashedPasswordFragment || hashedPasswordQuery;

        if (hashedPassword) {
            return decryptAndReplaceHtml(hashedPassword);
        }

        return false;
    }

    return exports;
}
exports.init = init;

  return exports;
})());
            const templateError = "Bad password!",
                isRememberEnabled = true,
                staticryptConfig = {"staticryptEncryptedMsgUniqueVariableName":"6f6f04dd263dade7c0e36977d82d472cc2589aa1c56c8ed5da5112b046c6c47c00918aa1412eb1543725b890b8a0953d6f3045db92601a332c4b2b178d929cdfb6154bd00713d534d782c3ae3f021e6fd36f8ac3163c4331e3456190777b899bb08f97e1cf197fbcfcdb6a8dd1ac4a0bffa361463831729e8542b34eb35d08f146b29b8cfa1ffefe28a77dd60e450e24fcfccb0782841d41c3a23e227d66418f74a588ae4ee57575b536b157e312ad3671d3f2533dd6f3834567ab1faf83b0f3d8c0cae6b20a8815025be0416e0fbcd34762623c46d139bf680ea3ef19075cafb604173d19bfe33ab31271c9b8f07ce7266fbdb20eb6e09ad0ae77d8b1226b0b36e152c5df7cbed400ecb0810bd649e85e67a2551da8d5b8d86d6e9b555ee26d315cf32d60dfaed807873d06a5b03719219045a18eacf79a8c9e56a08afbfeb03385660a3981b240916392cece84732483e16c2684c41b4fcdbcc55a897407d68f19c74ee6ede5a3c4bd68995ec454442c67279c96f8e7b26a93beab489a0ee15ab2263b95db5d17e80d7a05ca99fa39b9bf764b2cd4e380dece5b48c62b0d0d5dc5e5c3a30c9a9eca7a533cd6ede29aaf03215056123edb06ea0c038c1f71db2355efd01668498ff466bb7d82f40d56923e77632cfe821e23f9df4b491afc87b6e449914301a1dd2dcc34b12a2e0f8a6e0f983ca264eabd20c72ddb80d2ca3ab4ce4b6b94393f79034c9e7ced2860dd80a97e25fee18a5eb7cced365c2fa97ad62e197fa890ffb4c1a532aba26a7516eb7c937b7d2c119fa58a1835496ba7438d3004c23a6e7bfd363704b278fad60be0e01fa99bd8f2019936d3a224bd0f088592874228c188befd3767558872dc6b81a5d30fdb4ed7442bc1127b43419c6ff8d47ff7dd2ba6b92f20ae2d5b39e9338d42c7944d36ecd193d9c0f39ff02ea21cde069cc569e4788f1ec0f83ca565ee65ae597f461c0891ee4749da169013e342174546b9db4ff122770316b7fb9a76b2d06862b79a35fe3bd6f4ee1e15e00200147e3814e1b3ccfeb5521fe5a537ef1026e037d360f79bc9be3aa25e31a0808aff9d7c158322673dceaab7b7bfed189a91d2b6d6037977ee460a1cea8efc06b63d5740a387b4821cdad40cb3d1790908bde702d473c814ce46cdb8a6ec1d58f55fbfab0d9a0fcba80c062241bc2d2ddb022f1222d2cb194c84b94e7dec96961b27d66897f6506c5812150e3ee8590a97d1e7dfcf76192c00a4511da35fe22c31e21258b17b1d27391b04927d8d9a81d9226df2a7768dadf7bc94c3cdd4013f50ac1b43da35a9732daeba03700d19192b8fa00d08f39f8bdf7293932600cc2dcca97c25227130d34a3381190d5defa061dd7bef9a4ed30fb7d0151dc1d559a024532b89377ccb8a0e57cd1cd524724bfea58335031f703f1b39038079a1caa8cd78af6a103acd5b358e0fafcc14856b0bdb22df4f638a2891006dcd57bf0e8d9ff21425d1ea8db651b1ba0eb26e727a1b81c2f17cdb2849affe9728addb389dceee00a6f47bdd2e9758e2fb3b416f05d86c27d2ee96db61dfeb507a8592c38538afcd813a122b3778a408e2da2786fb90bca6b656d4db069a05ed008861ea2fcb425d0e4018aa11ddffafa79c4065d2bde4454204c0c9048362faafa834084a24f891bd821c5c43fa9180d36fa128a09b7a4638e5de44211d0ae98ef4cd302610796d238501b29b788bed05ccb091f6620c45fc5fed6768d9ec45f16cf987cc1da71bb1bd7b57a384f4a4e0793cd276a83c25d7c9fd384bb26d021dfc354bd2869b994f960e25c012f2123305177f191096c2ddbeddda123574c9191d2d9cab9506ac1b39dcaa801d30bfc8b13516dd320a5e6d99e81bdcabc3a55407250ddbc9478db25f9b41c3bc3140639f48191bb42ce45f00c5e959ebd0443ccd31abcd75347d77fd24784e01fbaceffb5c08671736bb6dae88ba3da4a97faef894151ccbb868de1c6added25c6892a941cf59e6b0b68723f2f6d364cb3fe9d3416adf99f341f18df72729a9f6858fb2c90a1d15cb65a0989b73485c9e8a4a05b38e793c41412587cd1267e432ed3a7887de66e6ff83db1a758fd6c08ac9901d644118aecf45ddff62f20b631e2665e1277b3c5666711afae295b489b53d2988c1dc85a4ff7121e2120399d661d75c4f8ad69603bbd974d2f050626c00eb7aac71e5cf6fd8ca1042de4439447abc29efb119cd24d4c39aa1c4a11d1ddf15cd1f193a104a2377bd26208ea55da06cd2a761a76ab4387e27a78ef23acf0bafaa1fabfc1b30a5a4b975ea0b7c44f36986aa5d8b0aa2045fd6b0f78a3c9235e31444d56c27288f0517140cda2a994ce30df8cc097f723dc6b1984f82bd8dc04de17a7d34ba147210128d9a34207cc2682fa4734002dbaf6308f25875eb5cf6e524e30c0e9bc465da96e66ee99b0ced068382c22a8e39a6b1bf9fbbfbd2fd52a47dde9dc321a293342c53a58434ddaeb7e25c4c26b924f21bea2bd6d1b4b6e1df62b928e0516bd1de95220096d3f1a45d2f709d6fc0560f9ac263a844429a18819ce2cad5c37e54d9dbc3cc1d5d78db1d1d1e8d40190545a6ba613e7c58d3c92ae80b5ab86884dad137cf4d5d6c98d88649366c3632021f9ab9cadbd5e2c1d95362fe424b7fea8fd730d249763d22a450a26ff6e0fb3c727a4657926f69f6e7ba8f719a9c1b73303ac90c5143d65b044342d4281c5b7e73916b96dc3665122db528e3ce8d4d2394c22f3c08c763d3a50c967b17e24dc1ce4a3358063ca51ba13893342afaec721c931f894d9cccfce780a21e90b7cbfa456ce04c41a24ebc68c50d134609baddce59a435fc6bb1f677067390b407df7e2fd10b5aa5c0995d898392017a11d8c8d3de837a523fc91ca2a0a123520105ca8026962c6baff33f7a282a4fbcf3a90ccfbebfe1f0d15111da104f487cd05ab9996372b443e17a84af9a12d59710f01a09166e07edcbd17170e75cc5baf2a36880eb51a847ba63a521341f49c6812ec727f02954205818fbb5e14bb7339f57c29dd3b155c6541b4fafeeadd44f81e73eb68db286348bf5ddd193a32026fc5b81138f13c53a0d365f636ba52a4df440d6c729f1f2c23fd980b16ff84898666746e105ad7b5d95f8fb8d246b50584f344c4a8549a7fce2fb6b20471b0db0f6d86a77aaab83ed651577aef41036557fa948cb223b5270957ea61e2785f5874edfbeda13a452a78c0b3b75421051ac164e4b677b637e3b5450ddc51fe91d46f812a3a8379b92b0180200e13a73dc6b52361772317500350d94269c031d2c5d420a76687c903fc76529a3216c26d94ab40559e42ac509f73036ba7ca58049d5c7e81dd2eba4f8576f0622bb36682618d95857b2ce3fcdd6a02f97cc6270ff353aab8e21a8eee19bfcebbc2f2f4a7a8f263f36317f1d4911f48ad65907519dd921fc179db86466f8179e30274937e6d2cb9ec6855bcaabb788e30eba6bfbd8b62f2855380d02d17b027a32f5579471c2d4e046ba0202c7c165b70140b1b70fdc0f9112da8ed910ad9cdb37db4e81fc0884cf4dcf5a2837fd78975406ae33abeca8ae00fe3640b369e93d45b5177c56a8e5028cfca2ce5527f053cea39a89c27b938102c9903e74c7b96e733b6033779120b962b9ff5ea2a95bcfc6b682d71808c04f4c9a18a462f3cc29019a314c3f9eba8d7dddd59c2a2655e1c4bbe7216e1c0e81fea9bee76b93d3f91ccaff4cc3e206217611dc53916ec88b74f2f2290810fbed5b24d5cbd71af40daae2fa729a81433aece7e75170d4ae7c4cbbb1c82145a9121c9388392d9ec9d0d973554781e1ec3ca4245909eeb8d236a4b03f918d4c401e335fd7129f99a2d7b853b4d7fb6dc63f2182c37e48af9a4d56f13a1aefca5a5b4240253f60f93e9ba83d15f84d87d0c85f65b5d83f1685416cc8e253e753e3de80492097f1e69788d16e2585676fdbd2f418c287ed0b825cb74e7842c63cf4dbe08abc0ff4469fa9ae0639700adf353fea7b2a272266937fbf644a942f0c85681c443b3da2614208f8fb0375761d2a0393c97d85770b57a065c14a3e12ae1020c7f480a1de336d6880cd83e9f572fd2ee53fc6ec27e0cdfbbffe8ae3caf71b154569ace8d130ccc0351a8e654f63f3c8dbad521b0d552a82b53457fa5bc08386bf65d9e9e2227bdc9b21f6c965ae546fd1b23be116759f216e52a133acabbd438693114daf03d47ab4f15d69635dd9d5479f61077924477a780a21bf8d8e8e85db9873988d163763e64ff77293766fdd2688e4386cb935021ee5ffcf32714dc8e07da68d3ff9e853a06f852404a73c963b6e2fc58a7a6e58369a59322ca4e7651dd6b8379f865d96d46a3caaa55edd5cac566897fd22d467af4070d01be967a69f49694307ddaf64e432137665042bec45647889773a882f5dada9dd0d0bf7481b2441dfb515a376967d3f8c06f3dcfdfcc072f66996206cf081a0e3ac92ff3d05017c162758a0948499bc4165d8f7b80f36228c3362588a17d69f347d278487b48d6dff465b30414b946cd61c9bae3b3c89b2581020cf427d5c14eb89885ba9e85d2439d4326c2c38494679f608d26f01c120893904a3fae43c0232a11e6e47da5da29d970620d00d26b5fd1b4abfb3c5e846410f7df30cdfe8e3d5ded7fc4cc14be8cff7c910fbb1f13f2b13ff1ea04a94133a89d52f463ad9f727cf7a0d360d430203e2f4a543693ddee305d0a1753e3ca48feab10887b45e925accf2c8f0ed9d5faa64a54a59c8b1d8e4ceb2803807081235bca22e6e698c5541b77c6c7cffd4d18fde1eef90d1fa9aa6090e45f4b44578e3897e5a5c55b9e4b2abf553618e7c7883d1a95e5e365bc2d2fae64fd7f47d6378b345b417b29ed48e72f980ca65c00a99301cd41ae0e415a8ac7333054bbe9bb39af4ba3d1aa5cb03302874b4d65836877d435f49f93ccd5c04b86f9deb22ae7512cf893df23a0927e16e522e9352c33406d45fb774cb106c49a8a2241950a095ecb8855aa13481e759c697fd75e3b8c733ba27f98d10d2a9c1bf9ddd1b565ffd3501ed709f297545af9b86b5ba3f2c4671925ec9568699e288483f61978afb6c606ff397c716577570316e25690d9efa67b188d8d3736d11521fc5b8889cb273da3f3639a38d59e6ecc5e3d40984c29afaac35fac17dd915044d4355faea1e03a3425590d839b37b9e1a03ecb34f5594abc4f76c3b4eee7ef699f786d64aa47f6569ee5754361df9086ac82258c66cb3e73bc2cf783ee635bad0018a172bc76c90fe747b0f46cb303c0531528031261d8cd6ff55cc6977cc3a8619d41781745e8144f3487cff2df8ed814b8ebd513819dc64ab65e02ca4cb64a356c5f9f42f0e80f56705d3c94cabf2a4f1ff505df6d887a3202d6d7174bdadd704e623241461b9a2c70820f688404df9323590ec5f5956b518d1e9c4c0cdf5a706f034dd6439187dbf29084e9dabe6d71d9935f936e483cfe6f74058eaaddfd3709ed4632005cfa8e83731c68e683eb0e6c50187f86d87f0896841b664cc22e79b2da128cd08b463d42b3419412decaf36909049c8b0308d489bfe2b78df66cd8a7e87dd1d1913bf551d3b98657c580e4bcde8caa29a49c630a0e8104ba788934553ea6ab024b99c20ed60e7d8db924509fcf259658c96972b4be26340a043c7f9a78af61ea3f184db04f531899acc62c10cae99e3e5a0ac0f0df8246127190dd84bd9876bccada2410cce40f950303d681a61ca6d74f018f56361eaa106b7affbd6f73fbe14fc73917e5494a8ebd30a65be8cbe7791ca3a7b9f02dac6beb0d824623eff9b9acaffd9019b73228e19ff77ef17fc4deb8eab11b3d51596b207311272d56fbb29801af6b48f99ef3721b76ca206d39794a1233eee1c76dd02f4da54db47a15892014edb9bb9fdd861cbb033bf3c217c7edfcb1f517212d55277a61c8df9e1d22c41f7ff3d4637831a24943b204ee95a294fd876d277f797899767e9a40aad330d6d3e581246dbe59e030f5e9952f20b63ad8de14a38816f95e5a75ca7a52864e265554812b918a05b265285cf210e5690c4cc25b742e76211bd8400d80310cf29e06ee85cedb1d53797e28b875f405e4099ccef10312afff9174654e71634a45c9442165424365024e34667ff2fa7ae80e36bd364d0e228d8ca92aca7b212b622751034c1babcc0b27956b0c548d7b4fb840e6a1b2368e1a6814b0825aeb1b850b5891986a4141fee60516088431af6fd3b379442a25c47fa48ed55ec92febe47bb34b533a70a78cddfc84d4ccd28d2943c6d01fd06a3926c8160c93cb446fc56f5526955e30e2a64ee5621f6d2c70ae328203e6efbd5aed79ff48dbb8316160d60af0e867582b8442ba5538e2985fe512bb6d4283e703d8f9ac59d27cd3102849f6ee8b7178703780cfafe4a32c14bef372d421d34d0aa2bb9820bbb58a6afe651763e9da74b97a841a77f3bc73d8ef563bcc0079ca117f113c6a92dcd95e33a2debe8c7fd228eed7e14b132a6ca5367f70191b34594f7fbff9b524888d0baaa6e27ece5c84a19e22eba19c6d753775428086e11c47ee80e6bd82c592be32d944f01ffdb7c5b2f30e39119a1fc293d0b5c7cda01445023d01a9eac860a92b0fc85dbe51dbc1492303b47620715be8c73257622026798046e5954b0e1ab3e04b5a687a1bd8005aa2ab1c77e816d5d44635ac23b0e2ceb73cde306b9132c32dcd97808c737019d117d2c8cd8f7d770c88c419b8d70c178fa48a2611dffd8483ce053da1328ff6461804da63bc8a0f41cf979eb1220ff29127abbce2fe3d4c2af2e7a73b780a0db9c0ca0ca9ccfbeff531ab3fc16a3f7216ddab6fa940092f122860e328b40a1e68925ef59253d8da052eeb4fbe27289d0e8852c6b1cc4a6c02657d15b9260c8703b9b3ee320b7df048e89584522222f72ad9a33bda34934cebe494556585b568ff321ac1ea311c0b5e54dd7f98e7363157d2300af0a131e97d600b91179879034fe804ac9bcf756f40b5e1fca90c4be8115e29458f6ef50aa8e908d6cb8c3716a56011d7b7e1ca7dbba1a8f04317b4e301d2e81c1f04afc306f90514fa0d3a6fb7ece16dbde81b8cea540cdbcdacd0d6f5e290bc5c93e42befb4f4aa7d68a9343e280993219bea4675ef3342be70c6587025b06b31f35cb59c388954bfe4c7932fe84b25894df834b288a212434a033139510c804865b22bc4f254ffca1a2cf7b1c778641b4d109c5754212cd87cc0fd7111e688e00c91ce6d01ec66df18487119dbc141896b52f206769828dbc3e12985e2c5b2546d84c9ba0a250b8e710fab424d201ebadd8a8199ab327f2065162bc7eb0a728f59ee320be09cb348188475ac51b0ebb444c5723868141e9de07b9d9d603c6f6023f9e249e65a5c8ee0a5769fad5b1c954633935135fc3d6d7416e7d0a4e3cf58fa2ab2ab22b70fe2f4222378049a27eecbddca70c882b51919ea6fa76517410a6fc1f0f256672d91d23c3e63bc36a144414539e1d5013501bd4a408799f6f6cf0f3c8c88e972fbb5f82bad4d04f07aeb50bc331b7f52af53441985212449a4f1c6cb8cef5911ca24e3d52549cfb4a14ed00b80c2a95badec024a7cd3492f1d1bbed8ae20be8084ee4abf63038ee77240ece2af7e4e2d2ba5deb41620294a0aeb2bdeafda6852e035ad173c040fbc911adb53db09143d71cdca5ada0a71ca26ea8660c7de02072e7b40b180ef51dcfd490e0505881e2266c868e9bd61a34d075e49ada61b3219d40c722451b42b25e5f4402cb15c127807ce5bfad81f3084f951a991376944a94ff507d9bfd0b6094187408102762aea379026730af1c59e5047d27b97ef4fee221c29fbe3e4fa4bedd11385288ce9dfad20fb57a1062dcc120dd9373a30278ec0f9232cbe07f81d42dcd0eb199f836831a7f972b23d221d7dac5a94fa2476aa8b387dbf8ae2356ed2fe1842ddbe685b7a376fc355d2501d8a2028923846ad21c2c238f04ea7b056f4b136acd5a1fbda86993c184c467f37925e23aed019303b1fb81e6b93084192fc15fea0d5239a31d1532b75e7fa452386baa66ad361458f5f7d0b7a5f36d2b3ccb2f0bfd615ed7f41ae1c01f3ab5fd9e41297fa2fe5bb251ed13075ae57bec78a14d214417fcb8f29253ea458030156977a1eaa3772587c23c5f5b975d531fabe97c55501d401b6b8f442a40b5dd03fb0a22f6d503d1dbe08dd24f64b1146ee35e375c7d4fa32d96a7156305c4407b2756e8d1974b9f613d1545776b81f7b3e4cdeba72d8fe4034172149263344158a2650bd811613ba6a2a3455e834e43026b9de89207f65d790aa58f33dc6584bda8f7ebcad481e6d15058db4d315098f25a44dac1f32ec4f4c679fd217922aee38bcde1dbce1747135e2094cb75e58ea94545fd5c8ba42dec854e396dafab49783a0991100689e21933b2dac91839607c73f4e852b9aec2a869e94027573a1aa7d6f2003dbaf8b98e419618e1957bf2704b3144fb2d669a53406a0cb20c4b77b37d0bb9fd03559fecca5758f098c3748db432f679bbb18212422bac7eb4277c5647d6c823e42668f5e5c9aad6132d81da8dc4267636e1d859242bd33a0ec818f3fe94024a82d922649c23d38cad2ce25f9af3cce9257b0e16c49ca354080ed728fd52d146e16c66b6731227303973dcebf4711d403cd91c109424f27a2e27f50ec65e61f1d97e04014bd6eae4cf9d8d107c36da98ca7a55afb041c786ecb09f706259d07ad1fb0cfb4f40114beba2fba80e31b828b13f904a1ee6fdf1d4b1abc07ecb00cbf9a928691885cd0c25e290a046f3da6cf29bad88e51d5a81ea9879c6049e3e27778d6e41f3c1db06b9aa39acac8bc2001f8ad0671aeb63285e62a490965b831eb0988c22d504a64567cb3436a8fda1553e08f108befc086d8b8fecc08c0862e572d991f2a3a0b2208acbdd2cbd8fe813f9e94a203276d1a5a8adf0beb13e7c515c3f560669357efa715365ee8655420600e58ce875d1b8899c203be5223d5decc85e0d0a76d9f2ace4077cf2bdd912fa220df8bbf1e2a8a8185827904df0f1d0533a78641ac1f2937f1cbf74c891e7fe56fd87d0f91f2c8732bf51fd57ab4a2c6a3d19fc57602df367e419b04d936c7cddecfe84f0ef76db195cabe7d31edfce73d5bab41a15f38f72329c437f34057a29d7f57c2066372216e7f782113074cd43629acf1479c57cfb24db6922f96461b003ac121a8a33087699d8cae4acc1a5794e2291854dd75430205c63ee9c8838a9c8d7a0d9af9db385b8281f35d81ccc12ddf5d0437db563e2604b96ec2903ba9c108584bbaf18f69735afd859e10ed8ae426bb6dc8eb2fd43f37f044d51e1b3f35949c6ce9dd88959260e28a13290938f64d922b13a64e6df6594b1ba0cf5b44dd847d87851124a69c6e9509be850d9443e9a11c055f2f64fe97756814bcff62f143741ecc3d305d8a41026fde42252cd2ef7b3ff64c73d1fa5b3c20c8b7bd9a09eb87f4b9a3dc43215bb29f86661bb922f720cc06431fa4142f24ad8d7a6425f67a629515eab240ff24a474bac33472dc93c27ae31246e45c194cc1134a22d0347bf4732205205c2bc454e5f215a41af2c193cce343491d78f5fb68ef1dfd597d0e28abdcf1c4918ebdbfeda37707cc56b818f911f0bc4a589f0c731962414a07629c75a141acc2458bead80504e5b0d1c9d4b68e2bb23945c103592881c8c970c1f76e9b77e7118e9bd3b9d0dd3883a1010af0ad4a8d39f88f730ef0b7cbc28ad909c21ff947f32e6d694963354cc4b06f41b7348caa8bdbbb9f61bfd29c97487a8ae6e1bd2c6112939fd571d4e21052146982691e4a46541553f1fd582aa81e04949703d12ce1a4fc93f9d178d491d93cc98f846bd3f9deb70ae3853c4f7780c9bab754a81bffc9422919d9f450d6c19c3edac8dc10e3a4991cb188f00f98ba0306de6a4c7ddabf93e52484ab1886256a040bb0de98d12b496c08d17cf4ef85054a1245a84aaaf169596873ea694004003259834a12660ccf9b9fa229f084b0818f2f20bce64113447837dab90b117e4fa2c5d34ec87bd52d7082397aa357944ac390e712adaaf0d793c2cb961532dcc6ca0e73188969850835c178fcd498ae780ae7329d4dd994a7a48cbfdb613c2ad8adeec217780393601921b74d582ed7e5ed5291573b4fbc66365bfc8b989b9c79d80f9cd89e8681c6e7d6b4d37e404be06ee3e63c90f8edb485a89215f971f165657f201278ee192a072e2dc9852dd3b52a64374ac5eddd7f45cc108f46bb08733e04bcb655e3e85d08e9cc96083ffe7e39551871c609e86f492b5e6ed0f1a62c59c42b562525c23755c4ba7347948a5e0733a72bcf4d1768f759232348dfefa5c70c31b21cfe87577c5bbcb27d6e6cc9a6e9358e0675384ea81e5c8feae997ded73cfe5df74447ccdeb29303b3b8640009c18954e199870ffc12a3610080884e1920013ed8b644b2346f52faf7857ce24538d92771c76019a0d530e09e7871db942b6612050f5690df15f8df1cc46d9cd7f692e7fd6f8e32f881cf39784d2430f58b2b51b02cb8264f536b7e756987c3f8e08279352202ddeee36056926f2d98f88d16f00c6920c278985dd657d9b42aa7a34be01e41d5ea0094b71029393899567388d092bb850ecbcfff51aa9c2772177c4fe18fd9fdcccf214343ea4befcbe1cb313276e46f3c557ca85f3bfa8bc1ec1b1d4c5793b2868b9d0bbb967dabaefbeee6ab2680cdda6e490c106c151ae00f8fdc8ec9dad6801aaf5af46dcf40fed7e9b2481319d15153ad0f8cd3ae88f07ffad244fbebc297dba84ef58de2edcfc54b3138f6c67f0837b4237b77a2e857962557f15aa2feb723297cf65481efbb37508de3640c1c7a0754e6c91aa614779f30637aae6c6c6c31d4902f45181e201403f094c5de0c6ae70e5c4698b1b52874de1c8619afac5c0bac9df962cfdaca42f2321aed7366979d471c7b75d4ea34041994a0da659cb7a4a7c85bc36423cb7ea1e5fcb83acf982a41f8f1c1119abb66629428b28a37cfabfa87c0373adf030506f3778927de63fc9180a296bd3739526f14bad18138199467fbe91f3b6eabac9048a4febd745fb81461db8f5bf0f0192ee885dfa07f7bba91f3cf928fb4579eb79d748507ca625e7b25d96fdfdfa19aa0bef0b9847babdfaf2677fd45bdd278e4eff52c1e09713ef5c6fa097238b84b4cc85d33fbbaa0e518351d5ceb33358ca8073144c14d068c6c489807c7a51ea1c1b8ec9eaa62a95bddffab6980c1d96dcf1f117b3256f13a4f61942049f520d30b2e247c738127745e7caca938dd05bbf0c1866434117eabe27bdd6eedbeb3f6e1dc11a643dde385796aa42a5e4e20e382464cb20803908981f540b3b5d223d0f65d3d9b5871e7bc3db67aec281908c7158763a119fb3926de2fae896a8306ee18f1be5ee76fb43b63a8d2e35d6c777291c5ad40e2d9d11a82c63e52ab6de7250237cc2a737e66c25033a7f918b86bae2261190c482cc2320cd237e68228499adf49a6383e380ea9eddb61ca11867f75f85b2519ef77ebfecc9a382767528a75658237b39edb7ff9a8fedbd101ce9db1d361c025a7967c9225b35493ef76f0152b92275e2f59e3e3690eed0973e65f79f832af5166e81f33f0e6e1e10b1f7b82aa7d5ed5a2ab41a11b80a80246cd05e08492db16f80028f53e29f112e362f2b5fbe342da7cb083dbfdea6d64ef1762ce64482dd3703b09a2fd3934ff0e769adca0c1aeed1425e3d2e5a4f0042d1ecc20f423d00c21ebfd2d5f8304895cf4fcd603372c0a836f9ec7f0bf60d27ae47295472a1bdd43c7b44e67a55fea00bb8dcd749735260c6bf69e4cb1bf3406f75c1dd78d7b08c11102a744d5df9678a5812347cbfe440b11ed00c37d10eaf4eb2fe1608f0718476e5f90c91984ffddfe4953e2f8ca652bb274049cbfd0a94e8271007a6341c5d57ac89229fcba21e13d4a478c1cbe049df8cd24a2d093f912a16873db6364c85c0f87c9a282add535b920251dbf4a968b15dbd0a002a87c791b16677d53b28c67eff8d1089419ef5e758036edb02df92c0db58c3e0c947f3c10ddb601fa575bc15447a813ad8b151b2a1eb3e76c3617d4b572e746b1785c797e455039d3327f2bec49df27a1f10bbbf7896acce2d57b23530e4d02f3c55559572fa687e2ce8751f8bdc55902ced3fd9fcebf57e1489bd876e4168dca74afba2ad90b85f37e5a862e7f6249f8646bfa412641369246ab9d202116c37346dec7c2bd87620031f4370d31d796673d94762760c5af1b5e6fa208837123c195b99f39948b0c6d212e308279cff28a3211cf41f4448eff58796da24de4851b2781de215b2fe0ee76e044204f22a67ba8474c0f5c054983f8b62fe3a851652f670c18ee370176926d6d9193ad181880501c4795e258f73e48eb2263fa427ab4e3b1de32da86ec2e23733339da74d5431394186eaaf5dbd0f6f7717475613d90d3d62e4398dc159cd6610769134f7b91ee05d2ea784f439223fdd7e650bc747e74a836807fe16345f4ad599df23dba1ba5ed5d3482c028669db0fbcd46b6d777d1ca55fb2ce5b2072504f08ba934ff5b83ae002e9a32252e6f7096d570737eb218a3bf63c89965d0d9cd7513ad1fc637ca3b42c9194c360a34f4046db8402a8299d6748a42e629a10820d2573459f548f002a329a35765364595bbd0ffc03da29b476db9a26400dde81a08782d658ec73e0c732fdf7a02a1bb5bb3d173cee119663e2678f384c1ff7de2c85ab48b79a8b84013fdde93733146d8f159198bd13eb8bde8e903d310730bbfd58bc02cf903f939391a75fdf471954f2ea6c584c6792225d50e754b05c698a6bad3ff16c8db2641bea46027b2f9b73e203457d3f231c677b294fc0b26d856a1900cf23eebfa2e6a982f37b747549aa104670627ec55887681ca1f0f31facaa551fbe26d76281d69854ddb97830b37b908783c47f980d0fe8ab26cff59043edb750870e2b6a0da2cb84c6c00761c08995e8290ea094a0ec0cf09457c061d5d4e84b6f0fcc973553e03a7f57b20ef123b7ef2a12d1ceaa0a8b080b8d71ad58669c05f90676c04969f7d0414f4be796b37f3df0d96de311c0992e837a10703126aff241e90428ecefd95d02703984b4c15ec6095a4697b0795a3714b692acd99bb85e9f715c897f4a6cdeb67e2286d2444920d2967be6fc161c918c2c2b8a9c4b1c8ad78b77093841e029ac5786d82b6cfb572aca0e5554762f0efd0550022428c1736780ac6317d6e9ebfe2f20063ad96321f8d07b28360f71ca7230253d765bb30aadc9f3a59e2d3d55998ca3da10bab4a7e53d98c6f690829ee182cc108aacaad417f08a8bed4768a077107f273ee5c8c916bc30d7de0701f170176f0a06ac412f2620069e0de18753abdf2296c43209706b5d486a956b45d0b5337453402cc643e1dc2e4f5d12f6344cc5f01f13c6ceb631cfb30721cd693554af90a48aea6125fdc2cbed2c33bfc847207bc90742ba17a7857babd9c0fd770d5e09f5cc293600bc06b2f14bd9e7f7fe8efd371cb2181a6460d063ea3fe6405c33c39f71dea817b9b2553cfe3c9b604945c687397cd146368320a20d04a93d8fba30944e5f34dc8d91e91898ffc5632f6597857616e1d5953994b226005df464edc8edf5b18ec9ae2395a2b64a89d14df7ab4c136b19d6e4eb31e62b20e5596fae04855e4a30ec0e2dfc3cc2a1d078267932c181e32eaa2561de4d019eaba9853aa6d40d70fafe1b37cec721849b12ffb9d90a0b4bda5e94ca0753a3329fe31e2e44d3bc3883654f52432643d700fb16992c7920713b261543be0f7f13a4b65b153c2981e995220c8174770cd99dd676791e8d3c3a80f33a0a78fc75aacd1f8cef59ddf7d535218ecb1bad157246fb62c64c0dd89c779cc42bb8701180af13a7cdbe077484d84f5ec04c435d5557cd7b476735227e3f22ef5252e2c07030c13862a0d66e45fc5e519967205fa346684dc40cc4865cbc2da3bdd685c6fb4ccd06c25ec6bae4974f36f05d36db86436a49b3401471de15e327c03132827483379e4d97f2d43af37195c4f1310f4b07da9144ef3a312ed87b5317bb1cb2d8b7217a40b1f9ab3cbec624244f1bbaa7299a5930e9688e00e800cdef57bfb51411a847582f42b02a3ef697dc675f543a5e1a2d202e8c783b9470671e2d98dc0796c28c7221467ad6fb0b7e000e296d4a6d1e6b182031686ade7145453763f69e1c329f373fe68473d96b97258a925f6e2e0f87296276b58a2370b90fc8cbc3fa1dde7410ed7a1aecdd8e15b3288be19bbeaeae346339fbb608c863f1387efd2a20e5ed7384dfb31ddfb879b0934c81b45edf87d90e02de00b2a5037b45673876399cd5313fa2934a55a0a94463d8a0d8e55a678214d38d3dc9e9c51bf881f388ac541173b4b194ea4d1b6bd1b4cae1a1415566eea83a7c8999f1ddbf0ac5f6023652d1fef7cb82fc522cf0869831263390470a8885b1d4f906d4a03a27d798a9cd45df19a30d24587b3aae78f209ded24b1226c4099681962671ac8157114db495f845eb4956fd6e079871d91c92f6b45ca6e9843a1dbff363b8917fee9c01b68ac2b206418b097f757615d96f8eb65ad1d1e2534a0f1a59d1dda16626aadbdf9eb79a6de08c8243c8023ade8e5350ed1962d8b434601a0191e7cc56df4fb1bc649ac1b82c4d306a5d4175097846a3bed66a20e27f2c24d381786e221420f1908d190b47e9c720d83acdc2e053966481cfd787e5d923ebf1ecd7d4483e9214c5fa346d0ce6903aefe5029f23ad7c7116fd0eb87372e1308c04606fe50d34bbd366571287d0fd88ceda61a50b568cb8cd2c3c231d867af0e30473f2fdc1ef418b42929016daf550b558de02357c50d2be7c48edbaa7217a62e08829fa6e3d91be955fb403413e73a813af80b38c9fcb7d37910b36f61a79f3b7f09a84148e2645aca5edc824b988b1194a5ca6728296b1bbcf149cf0b28976fab9204ddc1c2133f68a954ce8ff22c3a3663ca8680c46f540580685785d561dbb9c688c6baecbb1bd3ce86b058a6c46e213c5af78a947e270aa4abfbd6a6a9e7d5d2f617150a556b650a90be22db5fb459cb75267276ab81dd659307878677fb9d6f3d4653550103f82705ba0913ad6b9bb43cd8b22d934643846517f297cebdddac70d5283869bfb8291231ddcb63f5ebcfc523364d71e8ff8aba010ec308dac2732f0b68e153df8e88bacce9176a1b5523969c2be70ac555aa9a023dbb7b061d0d2ef467b09677632417d97bd3f8ad137a45aa02fc77694c77044b0c9d9bbf95d33ca8474a2308d1719c016b3c35bf9304519ac165188a4c09a99cad81bf64ae99eaad5c2de6c249f5d4c4509f0b3a5118d55937e91d0529e89242d0d9e632828aa3b0f5cc845df0bd982166a8f03725e2708a59a9c509131a10d312d0243e378c3910f81d2af60c631c8ef18d584004af8a9fee2c778d1b9ad3e1f68dac4234e72028689581608db64f2cbdea025a61e6bf554c33851c2845fa6a73acecf55791c78554880bdbfc3943bb451c7d8f7930a07f3bc62641fede040240297c739bf8aec4f497fac655094e9f2e9b0e2181e7c92340ab925a6588a2e7e0c4433d0f6da9399384cddbbb7a93741eedaa66c9670e105836ed8b547e7589c31111ed9305f0488f1300fcde300c612a9d584ebb87fdf1b4f572b840c42a91e2beac9ead273a801ea0669dd17ef957280560ed9e659c1e2e30abe6e7f9b0ceca7b97e0e2939a0f20e5c733a16fd925c3585212de0185286ae8a9e1deee1fafc4f32eb9334d3fae972fdbbd865fdd25d6fe2a0e60fd9f21a041153108efd0a0f1d1a077eedc439c679a41dfde220d851a866e8f695ace6789d67d57ae2af20193031e8f18d01e826399fd3d0e698477c73ec18a62680431774e177ea63015c863c9e1e966ca7b2d13e2fd04e3d99686553ea2694e2833b2fbf46096e0616d7a64dad284e0a45a6bba1474453c8b16cac59cdaeccc2498638165bbfc6b3bad966ea71e6e902fc8030f8fc0740591697b9b918aa5b1b1a4636ffd0785b184f072b571ec70c23bb4f2569ad1c10901b97b848bed4e8ddc25fc2b48ee8790bfccecac40765bbc2c32b687b24fc5090236ef713519176f8a631df4061241b2c71d9add37e9bdba9c5836664f71de6f68f51cf6b2e6620d8666472c9b52d8a8228417f714df226a1f7d7adf9938caf95b5bd59349e31e0d7cdb730dc3e564c681d689859d9497f9c3099890d46482fa306e3001b3e4856044a07b854366ce9e393472f5d21a0b9ebca0801129662c8d5c2246cd3d27f8d7f8512b6eba7403b760b1cf5d7ae16dbf3398d4bce2b486abaf84424e8e2f3dbc0a5c33b9b43bfb092de362565a9adc86b46de597b02fc0946e31748cb979111feb343e500915c1a8c3c2d4254bee5c93c56b33ed032f1e1596cb7079590e5f945894e3292aeadbee44318e56043c9c7438c89adcdff7fd52ee692d2257fdb22f784ff5181e7d6aa1309d5cf85adbb311a2c6e76a934f085b678620121a9b430eaffa36b5c2dd8fe8cfc5d1fb9b952746ac61365c0a1223576cda2ba779b7ee3331ac35d455455527c9af18ab9378550a17b395cd4c5a50ca95648ab1222fbfd7078b5b7a4c13231eb12608a7bfe3706573332bc3605681008ab0a4137e435ebcfdee5f42de92f241a8f25537b2b8f961b8a15e1e0ae75057985c65315d800f3a0fb6ad01c254520438399580f88249206ec0c05a0259cff5b84f919fa5ede18f9f7b33db01020623fab7c4f4a6ce3059bcfb45af9af8dfce8d2e2fd15a119df8403ba85bfc7d2c80b502e4d22e3c91a9803895b51a05b2423db1b3c3fe421d14b7fea9ffda371f6337cf5d4526bd7c2337b13f2fff082ed616bdc8685cce464ce15a6cc25a497c16c9ccd56ca68f131763fc705e353df6922f3331e4808c83b3a2687bec66425c0679509277fda87ce6e11576a3afa52d012fdbb35a8602f1c5600c77982f41a157660e436b452c63119dbdeb7078f2aa612ae9a1c9258edb817caaa3c3f81b85e4b7ee489084fcecca6d2583f6d132d9b9f596a04dad1f2cf9a69331b8ebf6721e6141092fb6d0f5ab390c4138b161eabcb3c321729fdc1cab30c8cf5b2d96c7e1de5c2decf3e2ba865f85fb9d0a2fbb6ccbfe1fb8877245e9a62ee52547c67a0d6d449fd7787e7ddd086bd371394dbd8a9b734216304a2230225df5dbcf07730d4bfd9fef7e7ccf9c23d297dc8eef23004f7d01c14311ddd0c2b8994f4741b678c0056c75f801595d5b70f19ba036a367bf8e4b4fdcc16cc860694c75fb7035437d3bb51d20bf466ec8218962f94ec2e03234ab4de757e297a7763ef873791c18e0967a77f837d61e2fce0124ff74ab21c8a3d94028c43a4a7747eff83730ea7be77826bad428b6690089a765ac07ebf7fc06ce3f7202089e7a83184362e4e4a597be1c7324179821f9a71ef2df9e1b682a7dec1fdc91528007fa876d978d8a2b0c8ea0fbcf19bc1200240d233df4ffa974a218dd335f67ab945be47fe49a7eb054f7085ff7ef9a5484bc3499bbc37c5baf24a1664109ccac4bf520c69dc15105d743db4ec7beb49fabfdb874399c164951aa22420ced48ab29205ccf481da9a3337b12a39e9571fdf853f9a366861bc30ea628286dad2d8ebcd22f1b4399999b15119f3c86b7ba345734ab0b69c748e22faa346d06260490decea5acf1b4a7ad6d82569afa6114a2c8fd9f2dcdc827ae849f61644b6f2ae7947f57a61220c3458a9a22852dbaeea7f085defaaca1a132f3405846b7ff7d35394951318de6961b309c06443a8fb6ed42e0cdd1bb1bd161d7279b59defbcabae2c28336e44703ea1d6d112b1d8f1c1ad7d710fe2e57dd0ab6ca5fa78a6c27c3a482bb572a7172b22042c3317a657207fea8ee0d8090ed5cada64a29172fce05198b5bf424068ff5dba218b4ad747c2085f18cb78f0b1046bb51beb799588d2e507cf534dea71d658f3b3924e7da86f0e05e1d9e8b06daac0bcdee0de460988dba17df4f0da05121c4116dea8233898763de50c3361a927895c5da77ece01cbf22088aa62fd23625510102ba05771a0b14c91d9de2410e007a47fe2c0ce1e70d15d6aef7eac3724e9d8c0f804945f07a082ed7cff8f16f7d68551a98e5b68d7e6b1c4cfc7d6bca4165d99fe7d2ca8f527829f2ccb6ab6224dbfbd8590395a0633053e56bdc7b166c865f79b5701d878406c4af48d8e853d79fce0180080b045583b0cb1be6415dca23933d00f2a1e836bc57f48fb7810ed2cc5cbb9ebf93dcaeac9654c54e026ce385c8f81062709144bacf15a0802d667d810e75e6220ca03a83c5723a51b14dfd405b343d6bbe402fd3b58e5c4d91eb5d9b4ac910ab8ef9f636366ca3b2d07b522b7637581d834ddafdb77ce1eea0d9f6672628dc3b7f9d79d16a4306667bc3350ff9731db84ff17c3389d499f205c4b2fc68888bcba91e994905196c427def9eba52813638e1052fc650a2acf67bab3d1daf21f36bbf69254ab2d08d026b6c8048d5c0da2c242d78b2c239acbda8204a3af376636ae2dffa3d05b625931eda6bd872fa5ddf777ff0aba8ea08886a15ae2516b8a57cb981230e1f08a6c1c529990aaed703b02a7808b35423cf5a566c9ddf2455a8e8a9eac75bcca7192dc9060d1b66949529776e0d2c0897cc8523dc7ab5ad8b7e6e458259d48b4c25e22455729ddf3088307ac8bd6bf076d09cf0b573825b0fa58dd913a7c604711b6c9768b751131c1a11a92795525376c141ec4c3b4c97fa20495e4810005a4741208c6744d2200cd85ac52289b3b95accc308dc8f764b9e64cd2a990a865e2a8ab37479c3064b3c8512370f398cb19c3ac821ae07f33fbc37ce75f1aa0eb9793c48ed888616ac3308f860388cc65deb8803bea3d676add3584e86f32baad4d7cc577c8760d4f5a13ba4453fceca504e101e8e813fc8b4da1abc4d97b6bc5cc1f36d898e5d1d9ec9d0dc2374bba6ee06df20245efa8a1be44a0ac56667538c7af5e414c2a1758cbd3edbcce1bef1f8f7548b55c0b3bc32f7cfbab3a69d2447f0d5e0c0b9ef264d8f9497f7d6fe58cf580e1fbed42fad2df3af0e99e4024df387ed39df8aa924f130d066ceb8016d5a8999b660ef6507a84c41be2bc3eef6cc77912e00fef31cf75d5dfc1bd1710a3f516d6ae1c872d0f31e8aa25570bd3c855944e7807996a0da8e8d83045fc04a9ad9d544ccb7a252407a2cc979707266da4a5ccd7c270bd531763015011981924cf1ea99977b70d2524147186b6280320ad01f18accd70f9ee82d507fe40bdc1398e09987b0d48b32a47b1c300c4c59f0a0632ac40baeba3fad7839195db36b287668a29aa9a8957c2b48c14ea5344fc59831efdbd6dad6c3f50b54c38b12e1914e0455b310ec7190f85a85a5cf2f4d3ce9a8fdc2965b87ebad34db92b390f8f438daede9564246b22e7027a538d96253269a4d6a7de013eed1be36a8e6f9ba1783ba0c785f6a272c45f73418ef87db872ac321e3817a318d52bbcbd0fd95a39401a75946609c923aab54b6492839194c8ea49c093b6bcedad46ef3924b19dbe80d9d8790224f91009e184497f0c2dbb35fbf60a411912f4df250e99186ab28b0da1f2baebcc8b81e8d10c73a6e763e5160e6c72dee82f6c7ab1b24e7fa51b0df03b4299a982cfd0dc95c06ab75b113cd12fdc5325d9b43c3342a8e5a426354445d6940e1c5fba3597e304a7d991d1c2c0aff509feace5dd8555f80338de4de0ad0b3ef685b0865d99d1eedb17bfeb0e75d7e98c736a2df433ceb9720e58d744536083a26acdd4a008a8537d8d58f832550f51ca40f0c47e2c064f99f1fae9aa22e465cda0e8e5adc7171936e2550f704ffb3d5b41d3b9ad0adb5ea6a08ef8b6bf7c145d45ba84725429351d239ca02775a7e1c43381b4189ad99d1d73df8c145b409aca7525c2137428a71b9214853aea36b93865f1513f005fc6bd60092c954fc60bebffb22e8eaad3541f6beeb14d5149c95919ff4a147c38ea2e194c289dde7361494f37055498086023afe5de48131e2b0f24830955baed41628895f00a380492ffd1870b9bfd826099080e2e598f010edfee51eb794382a663b693028cdd67e2e0d1f2f2b5e0643927f520c39f9818fd2c8cf5212f00bb44300a401279420732b705666cecbbfef4f5958cb753be7959420a379b44851374c8bc4132cc97fd6d5962907790a7c228032b3965220f5997a440ee48af837246e28625c562d933395c47ebbf3ac22a83aa4773432d75d8a71a3ac4f16b212de2481005733a741d863579a8f1551f41570bf3ecf1a93138a246db7a365dcaede9316be4ae213792f7739d0cce5473b958311b19f60a5707386154d00e8965cb2182180c1d1ac2dae196591da766d1304e8d9549004b38770e42090be8ba31db18d0bdfe79edf4c37e210bebefa950215afdaee9408a57e76dc813173938604a2c165685a4e3e05538d602bca523172a11866cd0ff0082cc22e186e89aa2a0382c8ca94a455deec7459bfe983cca19db1f3af982af53f873bd454a2fe2527540fcdcabb52e9dddfff0a60c180c464f18fa47d0cc8d90f45a7db76d0f3b5670f3b2c07edc4454a2eea8fdf95a32e78e2e9a9df278a8ae192f75740e6d64a7aa271283dd4f94821521629f5b01a46a28d07f9ddbe85036e8899a7f8b52244c96dad3bfb9c60a6c98f04a6a0e04872ac925eb74eb8e1eda36ff14501d7b8d4670fcc235fab284a6cd770becf93defe792848b276b14325018dec6a05eb07cba61c09dbfcbfbd2b569079a4f8275c6f4688faa895ef99cc178648d853116161a623b3baa045c614f5f68fc2ff9d3a037513dae33daee97fde70b7050cbcc4ccdd180cf21b747ed283a41cb63a9aa98f6ee9a1b304c88979e8b319684e4dbbe23dcf1dbcf09e4db8ab9dae98ba89ea657e334e4a6e2e27d7e9b719116382d0cbc07290275f8b63b8e8e04308f938df952757a9300cc743e02e505ea5f50884d8fac072003c72576da6c1f60a4ddf0667f61957f680e5b96a0868ccf516a7129d76ae48874a79b5b6311364917aa2bd457e2fbd9f10d143fcdd855887d65e4095795049a63290cf397bea5e4de9d46991474e0eec9084b7e30caa9cbf84073d252c83db426c6a4fd02ec1e04e73054ba889bf2e2a8a3ce283aeb893ab450c9e0d18f2817228a7cc7f2ec6b840ed7e9d13ca2071739195852e13051ede6e9755c1cb70131a32d217a6786e775e4ce5d8497c1b138b0d878ca49d79ec16e8676b151d829d9e0bb7e11fd763e1b7f9c21ea7e1007e930a8d26ba6e4e7f965b14e877cb2b83cb82e07474ddfa27957116e062aa9c0ee6fd72aab9d4d656b2ce0d7b9385a91c889d2842e4e41657cccf67a9b79f2217c3d0e85f37c814f61f93f6a74f04ae6a3570911da0edaba72b698bfb6ca9c7114de75c20d477f7faab94db91807dcef9d141f5a6a91839503457e4823df73eaa967437bf53fb788be5256b1edbae4bc345485b2cc67355b544220b2c3fc7a85f601abe22ed25b1acb41d610b131a978dc4391bcf76f57ff4705887078fa282f02bdfeb1bfe450934a4782aad3c55bb1fcae9de8b20c4f2d7b13e23c37af77a91ce6f338cecd9b8a85f531b597193ef9ddd023dfcf7dd39567e23a7439bcc607d2629d06ebec1d5496dce247146fd2edb1ae9a514d3c66e8fe54c754127d832b276e32c0c02e6d5deca42dc220816995ca1135c778db73334927ce2dc05c256df53da8412943c6c5e94f1f7b4c167b186c80d27513136b10dbd4ce0437a278e9a2019f75fc2c0ba5d48cfb3a7c831658fd59a397204b6278b6fd76607e05980d1b4139a3e1a6a00f860c926a0bbfab70e73185cf5cb2b8e051b1aff36ab0178d074c19d47b4109d98f79886104441cbc4202ef72b98c72c01fb5065a0b52e1c1371bf130bec3ab014647b09cec58ddb84826276b751cf956a740c83e25c2e57b9eaea797cf6b3f683326f32e40e7a500afe2e0f716cea4f597fbb7c81e8749eaf6b4b887189c63ac16b2223b3525e3309b905b24ac74503f1a7a3cf012f9f7e9b544c9ef39e66ecf466d94be21dfa4174aa903063ab93ed281468e1a1eec12130f137722176e72c60cc00738e7bd4a29ebbbd0a0de659d8e324f1b8e11cc2a023a85d6c7b28bd2407cd4a18d1402c8f287631d4b7407a00d91942c1d8695975a97529b71f14dce909450f13dc2e6a4e810b4a599806f62321c3f2d744ccae14e6b5efb289ae7d2d9dad3cda32163742f9bb36b292487a867e0d66b04c5de6dec1b2aab3d1198097b2b056a456ae93a1cfc906f9f4b08d76fea79d9b2ea9d44f4013f3c2fe8febfcd649b190aa2781b73c0663039979152cff862c1de91b082011bcf1bee15bfb14f215a01d54055b6635e738755a02f5809fae813df49ec553259f9882cdf783886b9cb65bb95cc2e4cc226acc344f58c72951ecfc3310a823626d3079d5789f540448aec81e8a0b884c11b092b24a2ef9528088e9a6522a8ae4e6e18c04fe49a10d21b4f4cfa2ba3e073c333df702ea97d84a7a1c8a7e4cd323377a23adb367d4c6a292d10f0c7bcecf39ad242695dcc52320aa2329e90034110dab3094ed985f249b918a480e818ae9b174f58f8a79605a7ee298f0f56e2e6b2e664acc985dfdceff9b505d21e693727abfc6fad85afb87fbcefa9431254c87c2edadc82f14ad934c3dd974adbb0d8bb7c2183a05a297b6cbe05ddc2b67b75d9c61015dd38addae2792f9c2ff381a88d406ce553c70b85dbc41db1bb312e836706672aae88c51cac8d08cb0155ea7f273120e9a0f8940b87004aa9cb8d51a7b4aef32a98020396fae43707f1fd0d33d002dadbcff62a7c51eb56ea27af416a7ac6e0bc8807edbfa3dfb744d8fdb9385ec394a5f47ee1e4a96914fd3fc006132da49f0b51aa94b1e8a7662dbed42b33f4d4e1f4616164cf86a25e0011184c09caf44e7f0f0603c9fd434970096b41b58f551b0687dbf7394b604912a48d08c957088006d4ad9c75c110e932e79c3ca51bf4ba0510dde2f0e0ef0e89adfa7b2230f80dba5777d0413b8b187874742b322618dacbedf688b9f8daf50eb869583ac0b056ebef13b2235a6e28e654dfb1f2da4242f9aeab548588832128f70124557aa7e63e2c67b6c50b758ba63f57b3a107ec0754461b592f5f64dacfdefd93caa2fb9119fc8c04c48e0bbccd5548c3550ea1c5bd9fefc4c5af0ee3e3d930641bf4cf578c40a619ea780eb82edc9a1b97c86e1b675225b6a25aae599ede766b415788ff305823969337f5978e6330d17dd6139d1e8abd8fcd5e8b0a35c0b8dc27e445dc9dca19f5288a51019fdb50afaca2dd4f63cf5d981341bfc141c2d0c8a6158943f6ee36552f506f457da5dffa44dde77be4a8897af644e6c7774eccfb0f05ecc3332230c2c7b2d4ce308dff5e04dc5c13ff7cd497c1b4c4139976dcc7672b46b99a2d4b2c87ad233fd67759928975d14196b7e45fa05c0a88418fe0ebef6fe03495fd591280809e2f3f5a0db054fedd1adf5a97ea5159c2ed29eaddd5e197be16a8ba8620f752895b81693596e13b5195c7ed224587ce4964576c5fa3de1e677132523696a197c46da3433ad71e10b8296670cc2eccab377a3ec9b75dd01b412576f13c5724444e8b5d654fef2f9fd5dc225ddd551667fbe3a6cc7122bccad5ae58ee5ef237f2ce805ba8ed20bbc95d674fc6d12f0cad5ebe23a2da94be739237db3927ebf1f908034865e6554598988e577717747076c78b8581aadf4a6e2af551752cb87ae83c7243e2d0ff63bc8b226d92d4bcbb86ac0e884e68c9a0f71352989e2f803d88cbe9ca6b9d79c94f006c6b29574d3dfa08537bc23a47cb4e22c8521aed1b5e06263cf41ce797bf47f89b55a5a7d4aa72a5e0ae91e408d4db4950387cdffd538df380121e10094bdabe3ccfb4e7bf1eac7d2eb8dc3a817c67a0153c225d1d3daddce657c82c9afa4f6c86c0ede787850a358c5498be9f818387880acb7c088adc8e01fcb425673ea0eb87cb3946fc2b9cd9dc85f9e81a5772acc3998ba110b66df4eae80a7da052dfdc7313764d97ac32663289fb1645423987c2603921e59debe3294cd0bae88cc54031d642dac4ff702dac85804c574d446e52dd97c5c1502a23fcc6982d7dbac7f2927df0103b56f74ecc7f06e498d25e563de5d1e0ab61fa6d8144a7adc21b4c133f5f261768d4b9263b26ff8733d41da33a3a65772fe0dfbc16cfdc03179b1399d9d5ea3fad9f3ceb110eb307b796be3f2afe46d884505416055f17e7c7371e03870750f12741add62f95000aa994a48b2b9153bce01d6998bba7ac2d00b0d16d19f0adb8e8eb1b73ac3b4652534d635d1b295bf6fafb557ce84787471e08f1376aa30f7b3556d275fecf243e3c88a7672ac9a7b68b91ac652b5607a124092971071cc6290b436c60b5b4b1848423341c06b8d7cd5e004220ea98e2fb9b1d5fd9d47e84d8f517c626cff1394fd3271b64a1683f864db22da05e1e93e2d8a01d4ef85a233e3063fb6f8df9351d4a1a13c5043351ac008250c6db3f3011fddfe84b9fa0c34d2e0a4d8cdb6271ee7c04c561b0591b213d1cfadd99416c64b38c329287f51ad1548a2b0ba6a65fb780787aef7ca39315099d6ba0b0b04021a1bf931aa038cf1182c96683bada57a6b808b9ae53163592462af437c3eb98dd661a519812ed50dc89a8a6f7f946a9c57ab629125ad9c8b8b7c1a19c96e918ed6584a7868f376f9baedf58bdbe87b45ad6d3342f3427bea0694ed1ec1bd162376b2eb43b4b54880db223bd8a33c8245a52a94bb9171b4e0b7c0aef0e3fcad7b3558399cc6f24a052849a81997515304a151d4e2191d56d972ab865d321b1b64b607af980d22371d09f55b299dca45d805638694bb54b2d1baeb0c186b087b1f07a7c6a2960ab9d4e2cf696e24530b7ff1e8c8cb0aca1b7ef4433ac9a1e642648f04b005a6f1ec366a201f365fd3897fdc3d2e579ae938d040ea5b3a6f211558279292263887a064436e4b8c03ef65a7dbd4ff9a04a33e9fc3d3b10d0ff895c06a8eea2f196b17ec43ad9e3ab62cdb93c63259dfe6be7ae7499b394af6fc1ad1aa8fcc393adc40d0be26b4a7ef67aedba137be067905307e5c04fcb4147d695a6f21d91b74ea4d39581fa014239df21828f0ec3bf03f70a9d34c83fb4e728735f2d0d75d26c6dc96a753ff31e6d0969eda9bad2ea347080a868bc0660f8a34e664a4699cae985441f6d0fb43bb718c8130d10fccb29a269edbf7c63de0ed2b1cbbe7f93efaaf56ad77486fd46a7ffda571b356364fc90cb8d3bb513c73841cef61786da3f26c9a438fec34ddf119d5e203ca419bf0226898475701b927c166b3c790ad039dce1b4492fec6e1c295d66c1b1445de176da4ee7ba7d7aafd50b79e504e85612087c5e3274477fde2aee7ff1405031c7cbdb9de58e9b3c2f12ce6b276d01190b4c24cec7090a5dc2af7e414a81cafeb6a29a7eca79afa48d8136b68b5bca6fc37d723848f2a21d070d52e44829ce44d55f7e6d2192e94d7fd6efad38737f2e2f8ff0dfa8ccf23c0433da45332f212d7fb8996e9eb7725bcd922d4f0a3a5bd75a82f050eea470997451ae0fe24a42b9b5e048554027d530ef4199d6f4db7cac0e4e6ea355869026947816ffe07f44807aa26f0a1a3fd363c12a98ac0b44012ba8a72b45e5dd2ed8afaa0520e8f3570715651d0f434d0cff12e3d9bf234916c6868bf3e745a4e06570db8da300109a40f868a5cd1174a790d9ea4eec1ac7504622e5911a32912b62be64200018d02bf48da0fb186c368e81afa2b4436d16658d17c754b92f6b2bc52e145a84aeb9fbf5f668270b80d365299da8b7e0348fd36715e378daaa1012e9d6f4a726af019d4a67ba880e96c1f87606d540b063d613972876b07ff9ca3a4a405784427075b76f3020327856335e9e010eff9b53026d14d5867ad5d69b91ff78d0786cb91c4e3d7c638394f7acc241fc90305bb0fe6b8e92b1f2c7349d9b6ca1e8b9522495d9d8be2632f839a3c97e11d936f90c29717eeb406904e5be44ce160f62d78ec84952a2181ede936902fb95989f54eacbeba4c4e198bdb79d342936a9638886146ee3c2daf5fa62da103df1c21a63b839e855ec00822f3e91551febffa9fadf30d8716284cff83f1ae5a584e296aef2c856de554dfa49535cd6c7c9d6446168c8b74691c097fe04ed4af6e36cc154be6957936355c29fca2d4886c03ff05e4b62c706cb35547bf2de2383fb0f1096def8101c43dd5bd3a5b6f86c55999a5fe55c3393297bb78588afcfb4d71e2191d4fbb483c212231822b177284ea4cb4ad71726586a441473fb7f855453f468852ba8d3e2bfced2d8922b03a1bb150631ac49d0913573a37fd8496ea4d3243e59dddc0c20641031bac1a391e35501bccaf1d585b0271cbe2930bca26c6294637188e456ad7d0cbd91e0f436a4eb7b9d9625d823837d21fffb5dad2173034eaed443de392f159a8efb2ceadef9e0dd507dbf166da7c6dd54c621b8a6bf6a6c00034da6087129b3be200eee0ff39303537fc09b52fdcd2c3340fe9dacb6cc298cf51b95085fa0b70794a7157338aaf57d792eecff0f22e16824575914f2c730fe405e069fbd97568175f1a416e06ee9ada6bafafb7a6d142512d0c05a2b6de893ddc16206ba4b8685023c1fdb09b0e4c26e8a57554a0c514221e0854942e8a79ce2a61acdd62191c3a943b63ea18ad82e8163dbc10d9aa17b4104c9b0af346c55402a18b45bd3cac532f5eca70fa118bf98026bb2b459c0a435505c7a824a61fb242b667f757da7d16bfff811e6e48a32031ee3508a4f8197cb0d818e965ec8cb921974f82ad0fa8d84c2874a7f9d113b9c9590b7ce5c26a6ae77e4008e14a4800dd0cb7e6c0b7a46b8195e7498db75f1eaa66c5d4712ca00fb323430cbe67fa51a5627f534daf301b68bc388125e7331f61fc2805b9b7eaf5f7818d85cd2ba1aeb31ade0bfccb1bb8ca323dfa5e285d7d26d3ad9116a25a8238dc6112b0a8f631e04f96ae9e0999ac50bd51053f1cdf02749ce415eabd7ec299459ce3f2d4d373e236d7ec3d41153b389cfec8dd7cec5add17025a2b7cc92f8af58f9864ad96303dadbc8de53f056bd4808068cee5a352bb7eede36eb40ea0074e03da808976bd64d7370ad44dddce9a3d05e63c602285e3f63b6a7219dcdae8ad67645ab25539f3b99daf8e072a668c26e207739878a1eb3c9e27ae2fdaab4cfca8e935ce98b9b19417b0d949b1268ee41652e227cfdf7d56b2df56256d379f7a093d9a095790f41158ec16296a3a7b3d969b0cac5fabbf96c50bb1412959a71c564063f5b180d468c0e81f89ff8349a0bc1f620ceb0f74a0793eb2aff2e7d10f7a344fe4909e4c34fd17de43359bc052d1a19f88a86cada79a271d196b78642652f6f114547e43716d227558a97b654ffb627b49ead03df76ebbe663784056511aee2ffea7ee89fb5480fb485febaf3c3e48fb37cd077c30c4dbfddd2007c357fe967f92a8e2c3317a555a640d2476a86287dcae6b68cdb4c4b37c0c357884c7f8df895fff92438d96002804dd8d9d0d83a6ed9f3f4d3fc5b3f3904a8a90d22acbfa365733baad783b143d1ee177abccd4709db9511f7574b265c5278362f315505dde6af9fbdc08f20a02d04911e8888ee9d5e58a6a7805e297c36a8a4999fa4cae17cf4f95f08b202fbe2bbbcb3930ccc47522f22f0b76b18339395c5f5fbc35ba97024d9ff49eeb5e6c82f87fcd03c144a989da5e3b6bbefe0c76473cd4bf80fb8b533dbb15f56031603935a7521ca2f9e369e6547b7fb6685eb7d42052f2f57cb68917888f74dfae0fd1f2489f1ea532308ebfb1349109a2f5a6493171e7437c61814f7fb4bf9ef82a7166c09f74b917146a6a241a477e81f4207e6873a1d75c6c0b021088507f5b49fe2e338a4535bfd1bed778ec438f1f51fc2dba5f3e931dfdc79148578c2e026b9c15f4268f19baf9781efe7a0133d74460d35a948b57521f166f5ec24ca8cf440d02c037a5a968d4cb64aeb982d03bafad0e6e55c8605696a07eb168f8c5bdb7143e6c21d5d539fcfdaf8732582260c1cc1d0e82865007d665a1570ebd26613380c29e1b94244f46ff77e65557c59c962852e0856337e10a4fd2dd71ea004778ea82168bff6e45a20b3066837ae25290219d801793e07bca4f6ce52d320cc84e8e16b696d30a33c10a7ad37ca8297f9e039cdff8ee890668c52eb8efb1cb1c57ba63d0e029151925799370f6eb6aec0bca575d665462e84e943cbd83caad6b3babd16d865fe119c2acf3ee9c530aa9ea7c84fc70c3c4e8156fa213fce2b97b74bd82f22611dc92bce46fd636dbe19cc7c9a5ebf33e2af35596c161c35517667716fd57aab55c85fb971d5edeed95fa7fb76778c76b11f0550acaf8af990dc20729b9bc3cec7aef3e3f3f37a7a03725ab3056fc6876a0eb2ae18f5732f62941aac8df830c6ac1f4862d2e0122381c815c1f52ed99b698f6ee56b06c74fd3b5a4536646a8c927b63258131afb451b249d4580aa571e6a99349f9288cb089975bb6b19130881ebc73b322ed462481acde05ee7a9eb188166a24178548647ceff040257ee4856ae7bfba1560eb1d8489bcd058555d9dabb902c6388c32f10e6c9c73ba284a1a3fa3befeebfd875404e42347f63ab8c3b5ad866405ae0c2951f39e61db243743d6710e58a9e399d1a78bbf4074de3dbe135af72c9e7b3779dfeccb276b24830e09ea67a9b9243e9ad927659f79eb2fc59193762a43e0b715dc1d980afcf8c431a49081c21822296d74fac973925267f0dcf869f56f82df6596a9cc0ea1626a37bb5eef01908b54db5d1c62723deb4d219159875b0dd69f38af8faa6f62e6a65e69973dc1b7d4e973b2aeba887af2ce6ed5bde0871c6f580f3936de635e037df3ddf4f90b019f567657471aa3ae2777222e977460f9dd2cffb9ba4a6ec1e4d31c3040631541f469d2a7671dd523c950fb66d4ed26a5bae409f66abbeea14d05fca4f3577fe291048ee1d047e473c6697e26b6ec569c0c9913fc497caf6d2e439ac4fe16fdcd1b2ccb0be5fbfc570627ec9cdfcc6f5dac6d8aa4b234636aae01df35c81bf17facd574971c17753d3961a092ebe2bb83701b85c6efcdd2da662a143301beecb44b550f5f433d0ce1f10107b1edc9461174ed419f39aa59036311c7c469792b5f9d3cde16379187da71cac6b39fd16c003481845e02430c09051bb68ce4857eea587c8522be44b5243c6e7b26eee9a6e6db8616d7a66858221f7b661e899fde09eff8582efa9a4cfc82879f4adb68d6fd87d14cceb27e294d9f262aa35a82ae18b0471de2281181c1c6832532e4951d0eba50e13bf63baba3754aa45ef78bd818148eb39195100c737c05b5064e6b5a9404f3a7db677cad978993c4160eca39f86c594756d6de78cce80bfe92a9af3aa58772c8b9bea67a0cf2be4aa48bfcbe03b0eeea6736daa3efda0e3a07086423e4976873e47cb815aa7b8312ca43af34dc692480bc9151076e7bf56fbdb02694f33658e8df903b004029a788a5fa09edaaca357f6ffdc55e1781300d97627e0ea234d9d7a403e395980768592f9ce2112aa6a1e0699f630084b67050e29b74159ccf8bc724bbee25a48b95a2405baffb60d4bc7774a8cd3133e8d59863dc74a395213afb6934d5d783dc65d18c18e0557e752faa6533d809ed9f985db29f222f60d4c8ac2c65fcfd1a573778c92340cb5a0103195d23b26a1f981821f20b10e20b69234c068ef97d4b0fa4e6ea3a030c1a62d963101cbd7ec99d383ca9a63fefd2933b7d83f8728e0a33d85c9342144a1f3f958e02eecde5ae6d469cf653926005f8fa97cf2395a330f86e3d06e576749d655787f75ac1dcc927866d11a136377db3d4c9e993d4108c5cfdddf3cb6879091ed4f51ce7807c02965ae72110905ed1eae17690bfcd150ba82804dadaa034430636734dd1ebb49d83d5f4c4c2ed0bcd0785b80b52412bfb5ac87e36e8975eae2dd50bba633514b2e5f8252075bd7390bfdd298098df0368f8b0294028aa2c9197fa008644a157175bd7124e397fcbd1acd07c8704c764d14061c3904e58bdf5d4705b32a45f98ef7db3209186f3a2dc57b918bcf311bc6a059de3ce0354102cef8062c4c8bf6bd31ac2d3766eb4f28196a76b1b5a06ed68bd4f6b1ebdc9090cbdc287c665e3628d8c7b34d4091a0e698bfdfdce6eb36fee9cb9f35d6bfa0004e8d958db9c7aa44a8e1124e5e9c8578d97a2ae560a10f4a9f2eb8aa1e1158ffff0046c17867b379290fdf54b0a21d9e0cacbef85c6172a04ec7c18a1ef7399beb40a9eae58afd0fb754cb39d633c82ae6133b3aed5aa1da794edfdadfeeb75283408bd2acbe61b6d3312f6b7ee395427a0a18847edff9f8fccdd616ae6d6f056ebcb069fb0ef32ff9b173c3e4df1b2b3e7bc40feb4fcf0f2f9ddcaff66f88cba5d14b99eafabd952a1b9c0f9b0ce9d4f19da92a12830fb0b46ea1b15993b13c904c2a12a0cd5b8f5d1e7d9282eec6b7d2054b6a0392262f35a4fc4268f2f498a6d98b333154b398bc1d6d9818ca3225487d126c4e82a7f366bcc2c6b703941e56635606f523c8c7f3829d0d63846e89b9d9f4efdcbc9a0d4cb7d123b77b8531f749f6689bc30a10c3328f1d2df65f2ae7f3e84d141b103bf34ae630c4d079a8fc6b90f31670fad419e0508c413d3a7134acea0444fbe6e30cdd31e71da278df0da3776efe42f4ec038c86b6b5f8fbb401177e426b33e9442a8f3864a459153e7e6ac55a420bd7201ee49de2af0f93eaeaee6c85ebd413148ed0a3d139bf51c4bb8afff63fe4236e7befc7788d062cc554b8f7ead6770afa20cdd6582b41d394aed36dd7d2eab3a9d33e0db0462025e7918717bcb37be38fb46e7e1350616a57837e5b26e907fa9e8eb567df91a5a575a81be55f04c964d1bac34a526078dcf6c486c54248343737413de0f9b2a976f74f3df48faa51c953f82fc5845c4375c3a1ecf4a7ee893fea9806d6bde91799cc6f1668cdaa72ed1a190cbe28a49b29cafe652ce4311a6ccbbda6d97d8dd9d6ee94b85996f0c8bf9f9215eca80c70301aa5ecba875d074688012629a6a8e434c3f11e34f2cfc51ffecda660bad576e24f7cb37125923f07101557d758b249ce711c8add3447c8d2b2ac00c6ae36671dd66936d5f6b6f82b7c0b0f293ef2e249e17a5b5483f15809e90f2e972f291a0a1d10e0951e7f84a0b22bdbdcd761ffa82cc0afced5d36b936dfc658c5a4b89c6d4670c86dba1a145b2187f831f93c011a56487f72f9e05f34430bca79ebc2d943219bd1ab1332113ba06317ada4c6ae6b07cd915df3c349198e6c7fa78b3cdc74984285d30d5266cd56abb999d170859e69ab1c98d3909464603b94eb4fb86e145bfbf4effdd9e79fb933ab14194484b6dc64f5ba695f40c8f2a8e685c74974e7aec981097f4bbb1ab2fb6592c7aeffd59c8fc75f34a4e190bbc88f9f2aaa9f8fb34bf1ad49a244836dac4e34fc3f4591de7e87ebf6061358a67d73a914a45a0dbb8870cc4c1541714690d53a9314d4762b07d2debff6ec7c4a744d11dfccfe3701f38f779f99b2c680fe2649be67bd6a91b8a57dba266e29bcbed43263b2669be90dd312b8fee13be5cc3f054142ad00734023f7ee547f82f6b6cd00dd48c7577fad675864c257e9e631212aab821b42c14769ec9b8ec64407665c5e6926c381feff2fba287fee499921110b0afeac527387fd668abcdf9ca4ecc1f2f925812c35d45f559172f249b6155235f901d075e2531c01d45ab05bee8c6620ade3b540039688eebf6642a4ece7edd9417cdde8e8462650d75f940bdcd8b83687bb1b73263d56007a0c6a0e754eba839fa4e035c38db4331d1910da0f3b02af0a61a43f6c7917793213e2e714d77fd981f5b251d324c042fba83e79bc68a673f8da9ea947e5b04f513d02b9bdd86d6931fafdd5d58bfe6e0c6a61c039a45c60e487d8bbde53cfd781c5d7a14a8af596cb277b4d28e125464520c4932a4d99a8b0c0e0b315eaa879c9216cc5bb8581ab9b6d3afc99d80c58d185a9ae2289d13a85e89dd5d92ded7313b41a99ae2c187b91fcd07844ac8967610ea14e7ca0596504f4ec4899fa1acb6ea45aecc02f337b85c4086353c4787568af4931627ae44b43fa8f5bfe9d8859eba6d7350a9b8ec4fc3f7670d7bc36d6e58a32b884ef821b7153e6165c6c8cdea54448ab79661330d0cd2bfebc3d22174647cc98558fad710d04994bf7a6d0f3ad9391aee76ba3e3a71b4a912e865464c5cd6c0a8adc77ef8bde782bb09551a4f1119d04a4705a24ba909ac8f2906e54a5bc5c8f0f99eeb21bdcdf84ac26c0a46d4381f8f737db378292dc2df1bea3e8fc88def3bfd079fa11512bb48efe58126583dcb579032ded60d39010e791028c02aa33d11c628bd2e28be3518591aabead9f5a1448abc142da66f0572e8d522f1cb2b5409d38fd1c06c99700a46ba54c252e46af479296a2670d7abf899765c1624a8a10be541dbac37617fe7d55f1bf1b373381e9ff597f1887b4e5ebeca75dd139016a70c54e8becb9634bf739a43739c3ee59c3e7b0d8207a79914632e680a3741610b2e319d479abc2b5c24de4c2a4a78a19f07fbc4a7b086ffa550ac86239d8c793b8c2fd642b55c8de3ceccca3d1e73bd94a186efb2014eb9e69bf2d3ca3dddf983a1b9e225ea344a334350aec293ba1a29cd7db7b93d01127bc2d4d957bbb371e9cc967d92e8ef0d6c8eea2af2b1cdc12a90f7c888c48c519302659222ffc594d194cbbdb29062891f760430170c6560d67065ce1e82c918c785bf24f33f038ba21de532fa4fb2b72027d7462508b85f9d65d0a944c6eab0d5e91ec0120987fa91a1cd8d73c9bfbafb0b4b4db927ac84cf2d374782bbdd6172fb9c255654863442c05a32ec09218b626cc73dc6dd37feb0ab8bdddfda6b957cd86482088a17373624fb55d2f1866878b50c0becb627b44af30d9369ec40e08376567982288a246d86641395c5745b58a4ac506e776450a3dd23793fe15d7aa27dc4dd2a425f1ca6dae0c2b858733546a4340057021f136a8db05cf04b1707f8a20e3b0feef75156a4da7b9c094e6e72b58f29351e07e76395e58f6eb488317fb1a8f213414fc0f5acaa0303cfc502197c56455bd21a594c9f7da19cf85e54a43e486162cc9c05387fae5dba37c7ab53fc48874675a443c86b2facfa01a9ecd133e0299956e891ac201c3d29841fda65729b4a58c6e81624d5e01cc91a7b38e70974d3c6530a4f48de163307450abb8c49720ae32b425002e196a98d43ff433accf30fd30a238e7318e0b3c1eac5146a83bee339872a03ba00c7d0af95b83b1c5c230bdb122758304b8440df1768767a310c29286ac2f83060c2e3e1e83f39b518d3b5e903c822dc1ddbeb5094b6c1f32ad8c9a6b381a45eeb279cb193cb57fb6e25e3f5f80c107696ed656efb46522b4a338730b8eee3ce792c0df9b6ecc0368a0ec030782b04842a29d3ed44a86c99ecb361bcc1ab272d11a65ac4bc1c2bc7f322d18ef239b22a92dbcfbc94fcd9d14f33dda9b63ef09aa06c74f039d5ede3edb574213159b2b5e7cdb6e06a17d98f94778c5c0cc3e3891fada0f184d4aca80d73312138d80d79a715517ff85ae3a88edb1731e03984e49df5926278ef5d101a80bcdfbb619cb0a0f3c61f72f58e282a23877485496bd00405c374e8620db81c85bbfdb9c689aa6da2cb6ae2e8166366fea377e5cd94c6e1b1a5818b60220d8389931ad62ecbb461dde9fe13982090d8798aba49e8b91b26c301721f3b66655e9f98f72d62878081efe31e32129be1ab18b4c8525b4e98ca3c2e93d2303fedf619856c30387454df4968f08985fe02d5a3756a5ab8c7df65115a9f1ede47058175bd1fdc87c444d411254e68cc8a9ea4c3a3c187a357526e9e56e85971ed0018dbc0be1ee067428a2e10bc1bc3b33e9f5c483c2f6d478d8bd068585a1c4cbb5bbe5ef523bad5a90a5edd27595c67d52eba4d0f66bc649b706308dcc2f1e3255c2bd7bf1bbec9c51ff773746696f10ba44525ed80e1ae426810d2a41124aa4e963e9ba2f521498a333e79db8560c88dcec17fa071ecce3e3cfca4ca9dde153169fbe31593743c671d6aadc1df30f1a978d90df6533040733918caeac60af4aba6c846937a3a35f1af95eba3a6c415a6aa0de6880947ab2727422b8aeb63c748ab1eef2e0a4393bf2482c385b5b96544612c660553b19c49b7a690770c9fe79b575c5300e4a72b46415550aeef551707d22f50d26d941cebe5f68548f6a8392041f44869b2287dabd53f64a6f59175eb525f7ca6c835d9195f8107537e471c542b61a1f6964f6c1fee5209c5245089cbb535a2d91e9ff87cf0e5c0900228ffce28c98eaaa5926880ef892951835afdbd03c227a26ebe327e729372a4f46456445c64cf7c5ebcdd115c5e012f588f7722fb3f8483426f1feb736727b7e0ba63cf81d2680f7831190bad4c29c4ae28fa8360f2dcf721f30b1432a13035a083a69d3d25b48f413885fa22aca94e86491594b3bbb2e202fc5aae9125bc0b951159098911c5224cf4521365945639183d783d2d4fa311941c331db5f7c3d26886861e22fadac5d2e0d1884758233821f019ba173c95bcc358ea07b84739357ef32231703eb23cd012dea8e217ca7173c7b2bdb3fe4adf20f44eff3d34d4a81f03234b2538d563243bf4a10591412eac374fc2d97275ba501498c3699cddfda2f3f6c5feb3e046a31069664970769680fda4c8b2db3d1f7b46b0e636c3700d05d3bc96648e3612c4a9e1795a75e48d308cd34cd509f599474ae5351415afffd5b57fd3a39874189b06cbd7f81948296d74186412aab9cf8158edaa75650ca6dff14ef30a2c8fbbd0d4347a1e01a6c79f78dbcca0a0c59f5c531deef2e3482c47a4c67249fd7ef0ad26ed4bf191dfbe3bfb9af9e7fc9ace72a0b6836fee682f498605a2711c18fe1f0c51991dea4cc2368318b5335f7d1a49f6ccbb05c02a34812fdfbaba894afa731b8d0a7f43fdd76ea92c781e93bf8b341c2668404cebbd5c09f96fa25aaa1ead403feee7a0fd1666c942c7b706b8a2a2dc5918d118edc0ada0bf0d0a6d9d08c484c8362e292b33af2aa56af7420e2e3fee2ae6b5b03fe718e30c09f22224b5ee76fe3cb0c3ac0ae308d7c0ed549d32672d50ef2f7966929056ee5331e35d86466863c5d78b851c6953a6accb6f9d9020088368a37276b5d377886a5314ac1b6401c9f0e960fed478a821c0fc2257594a5c83c6fdf5be6203c0743c07cc2cda1d3765dac7d6e54002399980566f2e8b3426ac7318975c6dbef95394875bf2c5024d0e3891b2f3978cc0e0f3cd60de77c6e5173754729fd01998be497fb0a997ee096c86f35207e50050bfc64ac8d5707d7f86ed8400b2f86c26ff3a480bfe98d6f6decefd57fc5dcb9327037f34a689da6b4964ce5d7b8f7b54b4dbcff59a43ac6e7779c029504e99cb2b284738214f7146a8c90888abf0c91beaa3d550a9795fdd32e9b4ac5259b8a662e70138effa18f7d5a27c4ef4d7121e72d69e3e9395c1cf45910a6fe7c7bf19e1bf7451e9ea0ca37d3d5787259fed7c575a68cb9b4bc3c55f87821f73ddf65f28d391f84f2acf4165579911edf8ebf83188786e7a77c29c776267eb092778402fb08d0f5796856c6a15f1da09e1b837a360aad70bfa46101e6e06e92fdd318cb08443d7d73eefe9960d336cf391f6f6dee8b01560deeeefcec0e2d3f336bdf777eb7d639054ac67c6e1990cddc7e5334c239b4a7192ce0426466cf79aae1a54c961ab17192517fc7def1621eb835bdf4b4fbef5f2354edb607a57fabfe253407c5c229ba83c19e641f9577912601cd11924a2e47e8ed9ad548d534de15c79663f1665f325eee86dfee780f291ff3d7baed414e3dedfb71203c51e2ab25a5385424939afc85e9f098fbbd9236a4efdb847a18cd97800e4823e1906bc9f36bc657b05d0adc1f334c6954d97fd2cbd8e8c1f6ed316495ad79d33f13a8a83870527deb3072ebe8bc49ac121542c30f2e90c992142cc202a441b1930bea06bf4aebc9d43dacfbe6ddfe8fb602535a21aa2873a4399c897327012a683e52fe37961b69e5cf84bf26a75518eb8bdf2404bdc83fc22ccabd1982491b4bed1caf42709b7ce42f6526c56f97cceb28872ba6b110deda918e751949d21589e0e995ea0b58ebd9999004b18da9946be7224b006152454abbbb4a499c5524049cb6030e72fe77d97f810f9ebb9d7cf685112e02ebaa9d480d983502c4d93dd1162b759b5b47994c692500343e551b2832a4a81c49c3c0d3de967aea5c47eba7e0e85ed9592b878747ee18fc31d4574bee3bdcde01443f6493fe26c00eb68d8c4edd85505150a982579ac26101cb0a84dab8935cf17eb0832167dcc8f249690856772deefa2041a0796378a5a3f690be53737262cf6161829769c435283b9e4c9359a3179523d4ce3556228a554760ffb54ed717a7b50a93e02af01002650700e479725138fe51f0c00ff213d1e71c9c1eb0f25c107871ff0e6ffbbc246e303aaaab68eb12282a71955d6c1f4a7257cfc2949d91d332ec298d8521d984c7713617d1a0321ef676e158cde7fdb58ae1397dd7727d8221ad2549d901117c7691ce7147a243ba19ccd8427518867004595badeae61b019a7bea9f4517748ab389297d2650e70bac84772d08553cd293df1e82d742909e0dd4fe754a50c67c6a784e6202c936c8cf755c45239106702a92564f09c487dc19942d6bc550c904b3a6c170dc5a491b4f35e98caf6852f92a14a94128d3edc6d28ef54313d9fe3f3c77dee4c4023d5ff16e5700ca201451fa9713e769565e860fe10d17ac8f2fbd29a1746ed201f1306a12ef70e9f813695f75575ced931dadb653588e5226d7f9a28b15e27448d1e2de72b1f619ce79ac83bd8a0eed4208a0d620d49e6ddc18b7de0dd06eff3d7dc7ee5d3f522eecbc6557962a3c2e3cc8d6798d81b8206674321e7d1168b11071c458345e471ef408e82a3dd539a27f681a6513c508be7035aa4c0eca3b3ed36203fdce652e3e26a57828a7296fc74de713a870c962565e808d70608b0bae501d7ae64fb37dadf334d91869c5d9dff23b7bd4826cab235cc1ea0b812660c163ee8ec53587858289cb8be89537acc8e17e80f642532428c9898f46a17db3631388a3c797d4ecd24d1988fa89fb448cadeb5d07f5e07933dbdf4bda17b972d8bf15e559a8d101e2904e382b45522eb80b24268a5e1bd8b921a45a9bb2f9f28e64a23e538fe65cfad2a3286504f6e8f261db2f7aa95851a1df77049f63dc46d8f56cfdc0a5099e83d86bb35a973590f9a3ff86778208368fa564d5e9a323be65eabe5568a531883dfb561c2f567f76f110894d947bd789a8bd65ea03dfee509d34af04fead18f8104ad9ebc265af1821ebbbbf81bb76382c61b5bba22a92859adc06d29f7966007506edeece8464817f748d29284f08db3943e7bdbca2c22deca9a4e1aac88e1970a63f2bbcb4664ee42e8e8f8dbe7dce1c8de39cf0fbae090b83dffdbe1875cf9d68e085669116aee76df9f30513e97da1da4eb07ec28c61071f4a8fbacdd02a326364f8ddf6164aa3d71793bbb42099c3899cd72d7e3a2ddbfdf77d91e2d5579ad797d0bf2309eb5e6e5507cc7141ecc829065032d224fd13bd719610019d71e262c769ae7d956f170279aef35550dedee6530d6960e286c483a13958cf4565c6c9a541c6a19e55c4a48081be96593cf6badb235c97c4b5032216fb4c61be43eae2e0a5ea017c0e3b41ec5414fa10dcf9b8bded8e3b4ac39bda84e056c84a64ddd0213e850ad934479f22a734c0477af7fa4e1a64209075cb2c04db73dd58205a4053ad1e009848a49ed8a77cf06ed82cfaf2d4b638955b02aff47b0dd95bd8abd9c0d41fa7f376d584d4228de9f6a0aa59237599a628a2dd18b040260d344348834442d5432c74b830254e5cbd42fda98cb8948d64a665cc019674e31f7afbc7ff1ffbd14bdb1ddb6db4c971e670f54136e690cc10b8d69f8923997d69d47b66e387e8fd45dc9b266fe561e28e06225eca1242dce947f17812c366bc2a900084977e6a42a5ac96275c20a117aa28feb96d4c09d3e01e96203ca9bfd56ac20dbad386e163bc96e17d16fe053fd23e6fd5fa5268286d06a1733e44d3480284c417fb55e4f78cbddda0c9f9cef07fa93c9af1eac577892d5546c0762749106100172797a5e169e60b52764d644f708a4df373a0f23eb68de8e3008b83c9d706c79810f9d91b2f9b230f0b5fae731460e87e8faf767bd82fe4fd7ab797699a486c4d04a5015832aa05dab232e1a8389d89d44fedc78ef735b547f3028279a790f991efc3f6c67f67871745bf063579b5d531930add0e844f6217f4d910a7c34a0365041ffe9f0171b726d91271ae733e079a4fe2be1e8c11af961e449e7181e43cc71a90dcf9b467946d9e5f6a0652d7428ea94edec734b1f16dd7054d66f190ab59d57d6f2ac5b5e3efeb275ef10bf71ac59e50387e09dbb0d14b7366bb8ae221bd611bc8795de04162e1ef0b66acd6e893de95d3aac697880c600669c9118086dc544f131dde0fed17e60e0a3822c81724987981a4d84d7020eada4d6e2c47eb052c3a77e5f28f474b9bb7e61621902657ea3ce1f897c2fee3cba415ef4805d8aa29bb9c917464d504ace8310914b34802516e9c0d12d553d3a0382c48f2057bdddf1099c649a7bae3b6dbcab296f7f29dc99c434c6d14d79103071aeb1d33a0c8aee7b681a95aa18d2a6b3283ce5f256e01dc09cb11f9d0c36454e1079e8c836f69c8e49b76c9857056ac62d82019b3d4eb61270dba3fa5af14628e959e5e3c7ddbf43f3436ab50df358b0027ccc223a43d2a9fedcc404faffcb2bfd0dd2a059cfabb69eb8e95ee0a416fa85ac98e8447df03307973c7caac0a238bbaec222ab806a91fa232da7c8f839a15bf765f8f3b6e5bbdfdffcbe83e3ee97601e83eb8af2a831fcf4c97fccf31399fe9ed4f88a668ad28be5cf40bb0b0b506ea53d8719c0c0952d08fdda35bb5de37f7bcf879d16777d88aa302361ee1a7a993513bdb3e312808998d0955becc320125ab997e2aee4e6b0af6ab4e8e7442967d90d7378115b59a6319a2c8e3ef3e2207cae54c9422d049f7520aacaa0470beab2ddf770b43f5eb4de8b7b3c45a39aee33f5a45ae2e1e595f92347ec11dec0f1d02260d1abacb679b374d5d30c2800c221c1a7e78c3b929367488319486ec5ee910daf8171f928bbc01033d171d14d0d66b8e9eb76dc3c252399a76f47ea0a2e1894e85ffde2df6fcda7d5eab4acec79dc9700bf8286ed1a8f61fc58f969584057c72362d493f08dda8bfac2649f8152a0f0d90e618472ec64402da47e1b8d1608d0d78c092df3197d752dde60239f3f77bdd8c936799ffd9203707239273c4b42e34781f5ab7476bc1b2264bf877506954078f6850b873541f1fd8820dc0e75fb84b2f24fb7b3c3f4e18c060148278ffcf2536fb511accebd0faeb804cb1a3b31932ec5dc17536a3e289ad1c1b76c3cfb6b8dd733fefb5763e38f78914824791d57b5446298786fc5fa4b5ae71f8b179f57f3a6e66e28df8c5e4e6b7de7442d1f5fb7da72d4699dd44827553f124cb7b1bfe9817b57ecf82650ddcb9d0c6b24cd41e567a0b5019bfaf16664db93a2b478170c8c8f143b75545df898f81d33fe1ddcff85099766c2ec41ea97dbefc5e13e4fb1b236bd6c93686d16ee12cc500476a8668c53d3a05158da2f506817aa2b0d715440e9cbbc68adab1eb1b8172e0770c5d0fdc2423793ff219782818a18e10dbff91de0ba3cfb06f0aef8dc9df98ee95a5af95da154dd62a9001004f0f76be46ebad7cb5adc1188499eb4ab23a80cb994ade4d80320ad966bbe994145199994b1cd250b28c915d73962e95963be983cdf00d72384588294eb02aade5319b8dbd8b1dfbdc94cb3babd6d7e9fd8e991b93d26f5dc2052dafa266aabe6935590a5bea7b535d85b0cf3b6622c70087260267b5040864c782228eb34a1d82cc2107ab07dc48c361a665614d41a55422bbcc0e918598b473219526f69f1e5c2cead026cdb8ae03d7e9e8a60a489e99344f4038c13e6b6f293206f35288b07de0b65c0a83e54a2f5442a14cb47e523df454a2a993cf98698812737d7c99a9ae797650d9a0d4c2e8d92fce2896537058f4d001131a81e4afe9b17326a6eaf1603f0a628c150d84ea93e26c8f8642ad0f4d6d66bfd6b6e0efee5eb4249fd6f74b8eac842f9ec09e5a3f85b71acf784692a77089bf1d6950343783c21531f05fa8e4e6c970da07b2a894c15589ad053277d752a338012f1243c8e1d1615dbda11cec8be24273df8825d629168b9fb735dc2cc6a38f09e3d03a5d8b0ab94a0b5ba44845fc3e5b2ea69e230051dd690bef39cfdda545c1fd7888f30924651d3806311155e2c1921930d439cb1927cba63ab2500b6f27c3690fe51073e7c53375177258356914f49cef86197952cd289e03dcc369b8b03a86f1c7d488aab72a9a322e6d69339b4bbb97fa06c841989eca72c1c51a0e57131362b43d2833747e2469a480a40f83c811dccc597451586bff1da9c55685cac901274924ab3edded3de0fe8766c5f558e84d38fa8ae420e7494fadbf4bfcd2d5071e3ae5bfb965fd4bc0104001ff4dbbd9fde8b59b3093c880d48cf63ccf4177412e7666fd593a0d3dbd7977d6d778cc0c981de2d5817b4e226b86634cd4c7b542af5556f5b516dbee00b1a095ca77f80b1285f6e9a40b05d9c33c239644f31e68cc2de07d05cba70389a6c8362fd2ceb413eee1e8cd851e31f1f9eeea0ffbe3972ff304b0a95eb1e1f041f23cd84ad689c12600f67bab7324d14839913ba748fe44a43b7964d0aed8b5cd6ebd274b5e5bdb8ee654e5d627ba277ae5f943e25783fda997d38fff6db950aafff7c14d1351a9e64721624e67835e9c1522ac4d1c8632009c8a6b3e6c8f676a6d7e74d14bd307f5dd217329519b3a0fd5c4e6f07cf37c7211b20fea36e6bd8433afbcd32e369d2291879d9430eb05fcad888a5d6a94285ab02c30f5bdfb9704240cc51503ba0eb89eee469a2ec7c2cdfbf72909b3e3dcc48044c02476a9c4d521a1a5cc3ad48524d82712d246c968fc4d90b7f1a61fa8d66122778b511e61ea8bb6bc96a4556d4f989b2b3801ff7dbba1adb72442cd80a493649a5e1a0f2d2a305f0a36bb040bdc3e48a60f6b7f751730bcb5095a894c47bf577b1e236c120abe372a9ab4d86879d06edf305d0232bb530580289d5af67cffd09088b43bb6b55d9b7287534b730497dc8ac2e9fd310ba880ee21845f7e3fe5c1f383bd01b4d42bf749dcca2e43ebf053b060057a6aec5c37f167f26c37d5948d9874bf7614bf8b60773d2269117c125130b0ea1b300e17fe94ef814ab5f9247ceaf2d11955cbd8e5d3c0ef6245e79c45804b49fabcf932f608c4bceace222686638da9fb5ec7e764380f8116e86fbb6c99ba8a4d4a688e3fa9bcabf9c14a5dc1d371ad50b7a615b5b7dc1cd5f1ee2175d23b44b52030a23fe297e297f0f14d4a58567b8fd626160e702ebb03a7b829ae68673208c6b176958eaed4bafe6eee0884ca9026d6aca576d437561ae9e2708fb6dbc5bfb2d280b927962ff3fe68b1cac02b358d62181f785f181a7ca05a41bd58d8b02eefc2375f3caaf0e76b20eb4d485cc74968cf6a59df80ff197087785e3e5ada527a57647724496dd26ebf3a7292af867027193603599b5b4c39f2f5b45a6539f194de56e74b695e5831287dd9eea88ec841d308d08f42a6cd6410829655812dd3eb62cc167890503aae7a7918cb40423820bd454ce770f9f52c06ed872e74d57d4269f6225315a76b46f721f4c62a0386b367a35ef4e6a80a653b72b7575331317d2f36df11945e76b7116c18f9ecb4f04f7b970da0c225c141f189b7959d6a4fab6975b4ed9cc42ee118007210062130613914067f115e970ece140c721cd3d8787911400694b90c4e7665c85ff4bb915bee4b0d0e52c45da8aa02e495e649f0e69ceb7b4f726e9b91f949c7dd2aa1ea6553b6f56185739f450368473f27748a1ed69d5dfbd24c11b194efe42a53c360a02e8069dc27f74f9c58965bc819dc6d3e65717e37eaa1a3fc4b4b082eaee1b78a515b07e0bf512631e043a1556bf60425ee41fec612749ba0e11c16935aeb9a72ef63cb33b7e24b7a621b57971fe7e0c336d7f4910145939ba84244b6f4b7f69743e7eaedf0665bb8ab2f6bb91cbddfc99b08cbc941df9716fa337d564e59d1ef31dd5dd3b88f358f1d6f14d468564f88080f761b71c8fef9121f57f32ebc0458b013f9698b3900a687cf83a65a2ab84f1c22bd5b432c30cd161255c7b4646d9cf4d6980d6da4c5795c6d74c3b6735f1c5860847d85113b163f99eff858632ae0f28faf5fe78335344c6841cb08136f400241ea987b40fe008176cb7d2c38830ce4ecf972115e26edbea289f322ec368ad3c7367790680721de255e5aa63cd65d6ddeafde4c0c69d05948eb6c09468879473c87b932fc6c64bf1e21b3e328143fba504ddd4253885a5fd679be3fdf11d73ee9d6b66f565e877435a81966f57f17041972216a646ff3421e1ef93176978583675b37b67f634aa59bc7323b7aec2194ecd8d76c95e3b46cdc0dbfaec1ff16329bc9b85910602c00f1d1474980d4413ec746204c40932a062d0cdac369b630d8144e39e6ba160b9d0c45b10f9bfd99d4a96733fe4d67acb0d955e9af8592ae10f0e8fddb7b6b653f16ad8010f9d215dc535e5fab03e65dab465e34c0ebefb6c6c7a003f532e16298cb79c568ce3e50901befef3c382bf10925fb506319c0fe73d9c16ed34846b77cb9894d963a29f551a17c9e80959dcb5bcefe48d07f7d414136a11c6a71821b59a61fcfdac2423327308bb6c7895928935cca8a3975578d2387b0c7a3ba847ebd1757714bae67f6106e7d1cd2f12e146d06ea891372834b54993d0fd9b1e8db04300d66da19841441660a9252113dc0023f5c32c9cf3261f376ab52581a22dda42bc245dfd241cf776e7da588b0d836c07a1f479f227ded949ce516f8519fea844cd5186f34c977c50792b0dae6832569ba43345a41cad4c822630f665a853d95cfd5b2cbbf117339d2b8373aba1febbbcef516e6dc66002aa837a5bb33a84683ec82443c46f60d99a780b4a183ac3f8b046aa43c3d02a60e3de28a1c46ecd0938b274b0d41c352fcf2328c8bbc9fb77cf7996954fec1ab7787c4c4234326488bdd52fc0eb001abe8acbf4c93abf361c48e55a07fe16ec89f732287903c289e6bc9bf1adb6045c12b5c5f442c9b9d3df7f732bec2d3a18ee26fd8caaffa399349ac14735447447f1ff69cbdea76307643130f8a711bd9d071ac45c35156682b4d40b15c34ab086eadc066d26a27c40b38ea09913af322369187ca4898749aaee53fdf58bb10df3867dc4c8fdc22847b9fb45c0a950e691d2621f47b2830c742cbc8ac9eb1b165281c3a57392931d8f0c685fe454a3bd5711255495d821d00b3dfa317bef86c806133b78648f352aee6d605c7d32ad959bc388c697e6d0bfad50537e629099d1a6c83c07c9a38ff963ad94c204d7ca64a14ebed6dde1339e4af7ed622c7503882ffebdd7a8c64cd87a01f600a7061ffdcb5c8d6a54956b52d9fa5a427f954038cb00db191ed2ced84014f750b0954062661b72aa08f54fe4c015c1bc3403d062fd40abdd1861cf504352944d66307e8949b52ae61399352c538a23e56656ed4795d2660f380616b99c512eb4a377931c1b45568d776f5949ea1aec7a1d089ce86e9a85062640d622ed1d3c5ca9f1bf029adc07e766f7d83b700b3eb7624420ed3d01a41c6dbe50854308fa88b0be9118ae1f6260d3c381e217415bc76c61bd6e5bdc08efe4ed7b32213798ea2bbeb7e7fd092600767d85254dc904e6eeb59255863812881ab7e4957b9b2c3578cefaf3ab86fbb7708757927cd3a5efb9222f9c68023a2063f696731c814c92195ab08724193dc0e84e9e0c3e34bd97475d76fe35ddc6716cbd2a98d5101f284dec88fa92db24ef65951d8e753f32f10db0588ff3e0829a2ab56c18e52985c0ae91cf0825638b8f6b025ae350e524696599bdba255d8e22a47a39ff57a4bac7e59dc7eac9fdeafe0e98b77872377585925e038bffcfe4da7957a9cbff0672fd4c63b3ad511e67532bb835e070d1f301c6e9428c3a1c76ef0ad52e8cd9be55f75165f32da8837c26d45f5f2def8571dd9b812583b00ad5b8a57be292052bc01b8c3c14639efa054bf83913082757cc00f88ff0f53fae44440364e5b6c789602d1e398de3ffaaed4473fd0888a2f93de7d72bf798842296b70e737870f4e7e6e49466cd1b0abf538ab8351edd1652340f238f0bd46c34836b95f151f0b91b95689c73df1832b372c0b1006dff652f05671cf19bcc21ea5c9c8430d6e9e7871a44644dad4e0e30a8d34c104ac5bea368bce79e050c0acb106dec556a4de207cbfb3328c6bbd5c8ea198d88a27c285650817567ec06468c60951e3eedce330945c90b907c21a71e5df35c8e8eb34f303fc1c3d4686da244102e68f9f904bc6395eccc8e063ce4dfbdf3cf98fcd80489cef413221ad219f83f1ce26499055aed37b9bf2b10a20c2728761eb3de416ae05d28036e5a44c470f99f3b5517a93d9dacdcab333fbcd9809bd18d962952b87698c0a1d176f871f42645cb4ef6548e1450cbb7c57e67dd420d539b4fe3d57ddecffd555c229e009a6d8909f05eb6f2ebb2688cead2119385996450dfd3b43e3866b26f11b495258cd9066513606efe4496bc14b3bd1c0f1a0d5df2853afb85b587c2038046adc92ede94469da51522ef475c02f6c8dbfd967747df320e85997b8e24642d9461f8a14678b1423dededcbac464a85b8e080dd284c32d4e29adda1e375467f6bfe524ab8fc753486fb8fc35d9b17e76d34a90252b3bccb9c2bcb88966b339aac5d7e2e83325c44cb2ba5fa6e92ab277daf0b05022c5e1f21b0f499168cadd5b1a384b083d84b6fc0cf3708536a2d922f99d46458ba2c0b2b9a32f65c436e4853c4c8b0140a901bd7d8b39aa5496d40c182602d5d1290bf1145e7e7059a6936a3bff74b24af965bf9443129f2e1904b5f1665894c3b1026f26479ba1cc2c7c4f6354dccc3ec25b9cd820639861e164ac6021492615d9929a1d80a17d73be9e92f987455f73023edb02bc64670fc0de9c4dff48a632d82e44cb42ead6e2b89fa0ed20cc2f2075d27daa2b5ae51a50d37671cc7ee76245c5b88a7ec89d98b5fc75d72479551437ebbfd7409cdbeb5deaebd4908e35f050081f8d39e31b682bb0e1573e64a0c8fc7cc7630970349688b75d2cebf2738bc17b511ecb42101846c6416b43c2e9080ebe911458c18c1a2b9fbd22d9fb6fe6d5891c04b92dfa130526e5e5979fabfae3b23d6e4eb9ade7b2602fa19d910a78332a18f6097194ab0e569d755553f0df41efdaa98d26a9bbcc01571fb698130e65d8aab3041b47cba385f41179b344943b066ae194360232e5b929e73675b620340da7838dd41322a39b12e8c97367b06d4d0e4a8d8ae244459ba493c474a6b44c2b6fe11eb488449d370f5a42cc37943e9ac63323ddaba114f9257e79ddaf5f3d584f3178110cf10480d08ff8af91fda7dde7ede864765f64b927abbec092e3c926fe2878cf81110509d1da6af8577f3955d1077a83f499f53896cbd9b0589e6acb49483115ce9e121ec0c4bfd6c6a04500cff71b7ff1070cb6945cb1a1bfe219809515327fb61b2bea2256ccfe13df3fd7dca5a1bba84ce2927ec996914f8959048473ab35fed8b9176450974bb615f1be6412de8f82fe11e6d5632141fa4e26c7c2093d696a57426e0c8bad14a887f4025959a2eecaa80873a927f98be28f8674b534eb6893f516f9f897d3389e0d3e9b4d06afd034556b2242cad9cc416cedda532bf2e5b2cac875e041b472df6ddc0c93735b304b4ba5ed300687f88ae1c882bf8436d6a6d21649aad1ac9192229982031534560f23e6e4da1a646f6a1824681cde303d1dacfdc0dce2dbdd45644bcf30bab8e962bd9dbe046caedf6dc3410f040ff095ee0bc8acc577680c065a875e759ed386722648d3a14d25fc9a1f92b8050b1a872933d282c7823f5566ba9cda9160ad0567e0e47bf9fde414767b34bdd47596c28e21d578983c0755820323be31c860992133f7010d8551fe565ba5ef9c4390508cfd3cdcb8c314bbd30c432939927607254e0a7ed2bc7a380189794e5819cc690f9a8c59ed5e19f4f52a303c0637ebfba2f549f4b525ad65709de6f686620d61963df5997bd9b8ac7ac88965699aad6dbc2159d519a6dfa912425a46e493eb72749c2bce6836201cdcdd61b431e4ef05e7fd620fa8ee1a1c9041a1797aad0f04e02b702b964a9a91d3ad0bd21c7553d346217e1f11c649248d260c6973ac5b9b8bdff17d264f4ad597b5223f213331a8dbcce286c1a85bb991270c3b2115503457c8c83411b5ab00cc1bda6b656aa5f1759ce588e03c057996d610da250779404e67ff850bcf57f7d7263ea09512b4f71f6df3d76c9692d82d332f9a431f675a038e2e402884dd47350fcab86693a1cf0c87ec464ff994ed466e1de10ff6d915e8611ea1d76687f6af46e04f0518891713276bb18c5bbb06b9b9b66e5d9b14c9b9c199bd721b57dc455eb9e4ed13603611caa28d02fb6c243d366fd527d302051b786e53bdb0faa6cf486bc6657e569ccc48cd9cad52cc91f48a8c3cf1b7c3c8506aaacfca7d9190783da9a5322fd4da37eb8765757b51f1024698efc291f0dd25d43dc7345e8af760657a249a2cc81411a321a576a39b1260aaf410a29b0e82f6058512821b58101b569b183c2b69ef18836f8934b7f7d0912a3a5d44f7d4608f15487fa15dbda13f1d7207adce5fc2819e19109dd434c6cd820bc84cf27da8e1bdc37b3a14a63cd8b536832ad501b1e03d8ad6378567b7bf3b6bc1258e87efba5c4def37ee1910ec5aa8e219999dc39d373ff2aef54bd62e987e34e7276c8e2535620e9d95cb2385a2896756ca1f9d1f4bbdd572d98af08e4dad54bcde1725d29b1c73808ddb80e27277bfa22276f705c6d5baf2132fd52c5f7361b62530c633f6bbfae446cf63be99f07b50fdeb7fd4c0913d47972cadd0a6068a3764cea7eceb03ddf5e7d8793c071f15e580d9e11c7ed9516e4225b00da6db374a6f4e6c9860daa31f06d4882e5495e7f7ae06bf94b01e3e606b501640e8ff166d9d1f8552f66ff0ea69994b596834794a4f16a104a3b4c2cd1534c605352be352924f26ca2cd2ecc64b22e1698c5c5ac93c02f204eff7eb2e873532cd64994ea349a7f6dfb28a94e796fbe962f3f8cc91600942218340361cef0c338dc404bb63ccacba6e1fea463e02638dc8ecf5f7c7772d04d6a40296bd65a4aeac5fbc5d396fbf0e470f459f33c179f8863a7fc99567ad49064a11d1ff8296d1591ba4bd929d9b6cdbdf256463c449690e1d4e97223f8af9acc076432e1a21a25a6f46add50589cf42822980c034d2f23b832c747195afb51b853a2cd021cac9969c606d66d48fbeb3eb9c57de2428275a615b3714e0f397206095c17d82b7e66364dd8ce21c299b42e75a87178079c20653f0bcbccd1f00705da8172cd4dfc7656f178a096217ae11a2fac2631737c6edaf71aecbb8ea6d8ad158412261299091ff04805ede26f21415af5ced2a65583e12e3443f2ef36c62bbfc228c38d70305479bbbc019f00350b095b99a67807ddd250e648d515c93d129f3497113e317742b2a26f12620d67baffd48bae21568012a8153d6091c483a27d74f9327039058df5e22bdaec6612a7f7630a820487cad20a56d7070cc2db6f3cbc91be12f16ef19f4cadb37763740ab22823a238635a9b09a6d7ead4e39d6245338d1367ce1e1851d814a0fe59f1f63d5c4d644e689f973af3744340492e5ac567cf332728b1b5dc2ef66597c03e0e6b5d9f1e484edde40d7c85cb4864f5faa878ef2a233aa001b009cfbfc4f8239ae58535eb4730dcd256460481dda5a88b4496841f0593dd452290f8eb1d699f42a31094b0e622bb161202ec9c27df1b34f90b97f12bfb15727a52cea956684456394a6e39083e65c20679bc60067212401369062fe28e78770ef195222839e82ea87519056701d113178e74aa6cf6d3937ca9503727f97602d21e77d2792ad53a7a810b38c92a9fe5bea404ec5fbfcc8bd3d05ab9d7f285a64284279978140f30115333c5a80574e62056e8d393e53f8d0cdc4a98c00c6daea1505bea7926597844572ac818472c299f531e6ba7b86686f1a9ade3c37758328f1e90f561843471309fcacdf61f4e53031397c5e1ea379a67dbb515597cbd386b51bd56b19979ca6c99663f405515a38b27d59b9dd226e79bf58fafc9cf6e77f7cf68d7fc7784abb26d7ba965dfe24100ba1d31fc3ce6cd8aff27c3f3d265afc4d080497722facdae896fb3a6869ffe1a261207b0fa80e60ba4a640ffaf005a0684d6c176fc3155ae52a89b896d7817a2c88d3eb25f7bfe6210bc8f11e5b299cbf40968c7bc0143f21eff7bdfe9db0cdea66992d5a56e869482a469240cc8ebf03a62c5c0419d479b22bf2d76f263c13c034ce3a8ff4e04bef7e0dd208988e7b237f874145fb6ade22216c7c24931efae340401cd0fdcbc9c9caf29cc9d3d82638a8d0476840e433c0c4fc4fef081e25dd8a72a78c39689c8d16aa541d053737640af18e415e98a2b1f3b884b8935d784e40c740a33b4bca7735f28398b60a35c92576100e54ed6f152f1b8fb03ad59bf292444af1643f2ad700858cc488f4f3797ea5f7818e83f58a620369215e98f684db51631ec5dcae88f276b2697aef0ccf8ecd2baceed177e729ce23a486ce2fffab85bdae9975400cc138506b765ccd069b2b0beb9a79c1f08eda4e063ebf0b345961d430ad1de7150a2aaea47b696de7684690a5f5d7062741efa0d3050dbc91b179d5a9f0c163d2bf85d133ac6ba7ccfe6777b7bcca3ee07d04104b32aa0521003ce692dc073c98ee7c5bf2683cf86b1b0a9b7bb8ec564b7b0e0ddc750354d6ba86a2ee86212b6e5843174e26f4030d54997ad3976315f5f1f18d64d961a9997c45fe04d07271da9bca944e711b5f6944f06e1aef0c2bbddd294542d4151c85be0053ff210589ecf13288189a23bcd6a2c7b26eecec049463edeff737e316ab46b8ec048f9470f631e71bbab0c00501436eee236b0158f2262d2b68537d3a5ffa9d959f3bb9e788533ba4b16533966789ea40a2c5ec888037d1556f90f3145b1789771cac4ab7ec25a43753b9b71c34430366c186b5325533a1eef6ad1451ee4df7345fdb60fdbc82f85c332f92479b4e8ed28d6bfc2458eabe57dd5810dd1ae087f4711caca0cace2f07cc53ab5e7116752a39ca6bba0c8ef5000a45f4f633e5e6d1fe319e187b3d31b8c13af914c90fb9f721bdf2d1291dcc91aabd05e4e5ffa829d7866f2d77af2d7285729306cd12484b1854d43a6c70f7897c61766b9b8e15e7bc9d437e0e48ec7e5f0bb85941e225091f622868fe162ec81b9e789e0ac6de7d31b0f4e6cd52fcaf96ddde47410ec656bd505f2f7427f02a41063f6f03015f96b5a841c48e832f25c820376df6efecaeced0608f9cb1d9e7144412949cb0bcf4fe89bb4fedce00060d168725683b6a3ef268f3ed0696162be86bf0c76f10c566ec63d43a5d764f7c8dd240d33a62373e9d8546d62456d8c428b65c1657be2ed636d00950f820e57d67cbc925dbd63aa05b8abeceec9bfcc71c3bc1e27621a4d9d8e0281036bd1554f583c595d374060684d734408c3fa395274e0d715fa975258f56043877e6fbcab79bd2dec4cda31878df3e3fea9ea97f7558f2e3cfc3465a4e27db39fe4617239874878803af565bd6db8fa585c961f120bb6c0575516db44ee0d3525f9cae03d7e49e71b5238d232e99edde138f2c1667faf2add51356911b58b95741a369121096a1153c916d1f79fd9007c2ecd2a3c26ef13fe423e82643fc4cdb70fdbb53860a579fa541c342bc0d6893f89d63ea240fa144737528e6dcbf04a2ce02c9a48efc18d296c9f7fcc1b69c84ae10553058d724a9e5c1acba3775e4ce87ee6ab606150e15926af33072657460d79111f0e519115d00e895463176d8996c8e51d92966ffa766f787c5ff373bc59c5a893b2c5b2d7ee37fb1dcba57a0d129f458a452f087f740c5e381d6e5bce60a569e505fdd5727984c6b8eefa2205fc1e2070429cdbc7defce339283385f8bfdd668cf3f2f394f7d7b9fbb9b7c5e49b462920aef125082fe66513b9d19c667285bd148c1c0e1e9f4522cf6f9f343190c72943dc2266fe5e7aaec5a4a50fc8cd343613df394e22b9c5e3c81ecf37d559bba37f12204ec8f576c41475e9bb8856a7b24335935f82c5079ff161fc0967579a1e2ec4c3908f7e198929a39e8d3e3c2dfee77b5e7d7fa3e0349afe4c0491b6ee0900c243286cae1bf1b1fd0aede337b769819cc45ef68a4e32e8aff3104a4bf89b8894679bc610ef682c3459598838ba94b3adca66edd0375beefa43b7f76485597fb09cdd07aaa74af9cff04bb534606aaedc1b5008206d6404cd581f39b915b31b03efaa960b02c37fd8ef7ffac2d6c1e187387e5b40f70d80529d9a0e9c7be9d43343c90c41db99d738a5efe77813cba2069bf9778872f7ec6b04093dd0d77a840616e522c6cf2bebbadf48f5d220e722d0978c66a55d793c282f373b7adf107248aae56446a0e3813e4a57ba38baddc19d3c17d83f8da5a24de8af36bb1dab57b8e42bc6df35e4ddb3b0e1fa106d1b308f255f34fd8fde4498f175aabfecd051591057c6d49e83ca3fe0a688c905ed4fc2b4c89369bec37273e88adbc374e9b655c10f9862596ec0644a1f9bac7891c9e7646e8c3c028526885d54a19b47be475d3ea847f6663396c252459d896f44cf2bf66897072ebade6d258ad77be0c886d4057ea0a45d1ad4e5848cc6f1a5a10400b61e8e77c8732dbb9ac36a05131982e9331525d976b2d582f48b7293f41c5496f12fb15e65e061d8e562dd2559bb94ed8ce18ed43d5aa32957b855dcfab224dee16cac6861e454dec92aed91559e14e46bb101fe559634b5594447540a841eb1d7ff8ee1259dd091bbb747d6b09030951f54bad71ddb425c12dcbcb451ebf9cecf717fefba7c379c2f798adfad566539e3bcdfb73560c542351eacee827ded6fba3935fd57d75a66b850e21081849d450fc949817f17f7e6b78fef83f94658536bbab8961f8247279addce7b61eec15b91303db7b3207da4679551f1f53f999f6ad4a970172102e09465c3efdfdaed2c65d4453042f67a96c2dc96ae3c3fea747e4d8adfd1d55ba9ca2b30c934103ab73809261f2e68584c313e6f4fca9666ecf4cedb16fd5f1c05f76a390b85d7dacc5fdcc5eba3eb10f575276f02e5f6528f11c1d7fc545118ecd4daa1e5d738a21c83624e8781c8989a9600a2823a9376a54a5625ad493fd1c575f61680317fe943f04fe7fa30e87e3a0c946f6bd767d22aa2c2324575290465bfce1aa36ec029f8274e389c6d0ca1e0e92a537897bce1cd1c5abd34dad4d2df6334513c9704b4c652b5af4a1fecfe6c5eefbeee1b6f9317c4daf8506ba9cc2d72a557066c0a2128778b730172c54baadd24d61fab64c692f839aa036d268dad9ac30b356f611a8caa67a8dfbe7fa5f3a50f5695eea7c93350a2a4c54c199aa2575852db47c14170f91fbf9ddfd3ba096024218b8c4ce4f419f078d85623d4bd4655505fb4611d7c0ea8bee5a5e7f09e055e72bc7270516c94065c4e90b38fb786b13b06ab1eb0c125889e2155da8de9813ec5a279db6c7cbf46214a7b825a2e5be508c5f6b22cf5c8847cdd06b0bf898088f5835ae1de4cf8bdf9551942c71740ded29739641b3d4e25d93deb1ca99c63944dba3277bfca220f10f3771a945ccfc58d5cdb84ad59c349290943e6e98c51ff826743e9b41bb44d34e0fa33c108c6a94bd4cad89274733c3cde00c6e1d4601a66d359756831239c76a68f57a509e69079a7556f8b94ca122bad5614b5a522c03cb0e88cce2f232b0d1bb788e226c1f86dcf31789119d5d8a2920396b7c97fbbc6f6e834b991445431b8e92ac2fdf05113e16939a40d8642941b5d4a24b604fc158219d1d2a4814ad6c6478ac677a0ab97708cfeeeb98575a7f8cea97045af5275193dc7ad696764942dda27ff157bcbe787afa54f89747589278a639e34eac55ac2e341f1a41f23dbcb54a99acf5cb4e42b1be103483f23cfe9fba1683ffa21482335866aeb93c38e555196ff417f8dd19a37a7367bbf22ebd2f5c4665f5dd3181c64e3eac2c002c59e8618a525e9b34c0323382d830f78dabb5a4b1216a6566a40533eb977695c6c24177ca2ea4eabb56d77fb2b24670ce97ae782e9887a037ac0ba766dd2a6aa5217421460a6da0b953730480ed85aa555779b16fffdc97ef03e73730e93beefe06d1e1a6de956a0724a68386e5cabedcc5bdb697ab8306c75a4709c502861a3ade9503a9754801a9237054bdbff5c1b4e64c6f04b08199f312ef52e7750c50ff1cd6bf4134eb62e0234fba87ed827b31b0d93c7d6c405c709996dbd02f245e0897cf7ddd3459e18e3738b287e3a3d1dee083d70c81c794cd08ab891e8a0a9669778a617509d0d9bd3837ba90c22fef63b510f9b8bc8cdaa5308332fecce58f2c2b7c506197d0f47237d0441183df9a37bdfffc4fa346ce35db8226c954d77513c3cd3c9ff7f965304694454c96c0b7ac5fe202c9091a5bc48584ce73e4dadaaff338732d3d8974247a836f32baad32165204f47d23a20eff4d370fd299394163ee701b2b1ac955e308786d0add569a45b554ba3d3d928697018a8860282f4e382d4699326e19b414e0d9f1c8f899f913b117fcc8e221dfaa37be5856e202746405b6046f88b1ebbccf1d3efdc9a699fe17c3b5c8275baa2d18a2e61d76193e09546738adfcbc3bfc024e8b4e656c7a9b28cbe027bbf72c4b28ba845e82e0fc7d4070cbbc05e7d675d","isRememberEnabled":true,"rememberDurationInDays":0,"staticryptSaltUniqueVariableName":"779b78f0b0e284ba3ac14be43b73028c"};

            // you can edit these values to customize some of the behavior of StatiCrypt
            const templateConfig = {
                rememberExpirationKey: "staticrypt_expiration",
                rememberPassphraseKey: "staticrypt_passphrase",
                replaceHtmlCallback: null,
                clearLocalStorageCallback: null,
            };

            // init the staticrypt engine
            const staticrypt = staticryptInitiator.init(staticryptConfig, templateConfig);

            // try to automatically decrypt on load if there is a saved password
            window.onload = async function () {
                const { isSuccessful } = await staticrypt.handleDecryptOnLoad();

                // if we didn't decrypt anything on load, show the password prompt. Otherwise the content has already been
                // replaced, no need to do anything
                if (!isSuccessful) {
                    // hide loading screen
                    document.getElementById("staticrypt_loading").classList.add("hidden");
                    document.getElementById("staticrypt_content").classList.remove("hidden");
                    document.getElementById("staticrypt-password").focus();

                    // show the remember me checkbox
                    if (isRememberEnabled) {
                        document.getElementById("staticrypt-remember-label").classList.remove("hidden");
                    }
                }
            };

            // handle password form submission
            document.getElementById("staticrypt-form").addEventListener("submit", async function (e) {
                e.preventDefault();

                const password = document.getElementById("staticrypt-password").value,
                    isRememberChecked = document.getElementById("staticrypt-remember").checked;

                const { isSuccessful } = await staticrypt.handleDecryptionOfPage(password, isRememberChecked);

                if (!isSuccessful) {
                    alert(templateError);
                }
            });
        </script>
    </body>
</html>
