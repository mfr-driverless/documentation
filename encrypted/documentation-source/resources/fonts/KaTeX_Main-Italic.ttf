<!DOCTYPE html>
<html class="staticrypt-html">
    <head>
        <meta charset="utf-8" />
        <title>Protected Page</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <!-- do not cache this page -->
        <meta http-equiv="cache-control" content="max-age=0" />
        <meta http-equiv="cache-control" content="no-cache" />
        <meta http-equiv="expires" content="0" />
        <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
        <meta http-equiv="pragma" content="no-cache" />

        <style>
            .staticrypt-hr {
                margin-top: 20px;
                margin-bottom: 20px;
                border: 0;
                border-top: 1px solid #eee;
            }

            .staticrypt-page {
                width: 360px;
                padding: 8% 0 0;
                margin: auto;
                box-sizing: border-box;
            }

            .staticrypt-form {
                position: relative;
                z-index: 1;
                background: #ffffff;
                max-width: 360px;
                margin: 0 auto 100px;
                padding: 45px;
                text-align: center;
                box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
            }

            .staticrypt-form input[type="password"] {
                outline: 0;
                background: #f2f2f2;
                width: 100%;
                border: 0;
                margin: 0 0 15px;
                padding: 15px;
                box-sizing: border-box;
                font-size: 14px;
            }

            .staticrypt-form .staticrypt-decrypt-button {
                text-transform: uppercase;
                outline: 0;
                background: #4CAF50;
                width: 100%;
                border: 0;
                padding: 15px;
                color: #ffffff;
                font-size: 14px;
                cursor: pointer;
            }

            .staticrypt-form .staticrypt-decrypt-button:hover,
            .staticrypt-form .staticrypt-decrypt-button:active,
            .staticrypt-form .staticrypt-decrypt-button:focus {
                background: #4CAF50;
                filter: brightness(92%);
            }

            .staticrypt-html {
                height: 100%;
            }

            .staticrypt-body {
                height: 100%;
                margin: 0;
            }

            .staticrypt-content {
                height: 100%;
                margin-bottom: 1em;
                background: #76B852;
                font-family: "Arial", sans-serif;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
            }

            .staticrypt-instructions {
                margin-top: -1em;
                margin-bottom: 1em;
            }

            .staticrypt-title {
                font-size: 1.5em;
            }

            label.staticrypt-remember {
                display: flex;
                align-items: center;
                margin-bottom: 1em;
            }

            .staticrypt-remember input[type="checkbox"] {
                transform: scale(1.5);
                margin-right: 1em;
            }

            .hidden {
                display: none !important;
            }

            .staticrypt-spinner-container {
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .staticrypt-spinner {
                display: inline-block;
                width: 2rem;
                height: 2rem;
                vertical-align: text-bottom;
                border: 0.25em solid gray;
                border-right-color: transparent;
                border-radius: 50%;
                -webkit-animation: spinner-border 0.75s linear infinite;
                animation: spinner-border 0.75s linear infinite;
                animation-duration: 0.75s;
                animation-timing-function: linear;
                animation-delay: 0s;
                animation-iteration-count: infinite;
                animation-direction: normal;
                animation-fill-mode: none;
                animation-play-state: running;
                animation-name: spinner-border;
            }

            @keyframes spinner-border {
                100% {
                    transform: rotate(360deg);
                }
            }
        </style>
    </head>

    <body class="staticrypt-body">
        <div id="staticrypt_loading" class="staticrypt-spinner-container">
            <div class="staticrypt-spinner"></div>
        </div>

        <div id="staticrypt_content" class="staticrypt-content hidden">
            <div class="staticrypt-page">
                <div class="staticrypt-form">
                    <div class="staticrypt-instructions">
                        <p class="staticrypt-title">Protected Page</p>
                        <p></p>
                    </div>

                    <hr class="staticrypt-hr" />

                    <form id="staticrypt-form" action="#" method="post">
                        <input
                            id="staticrypt-password"
                            type="password"
                            name="password"
                            placeholder="Password"
                            autofocus
                        />

                        <label id="staticrypt-remember-label" class="staticrypt-remember hidden">
                            <input id="staticrypt-remember" type="checkbox" name="remember" />
                            Remember me
                        </label>

                        <input type="submit" class="staticrypt-decrypt-button" value="DECRYPT" />
                    </form>
                </div>
            </div>
        </div>

        <script>
            // these variables will be filled when generating the file - the template format is 'variable_name'
            const staticryptInitiator = ((function(){
  const exports = {};
  const cryptoEngine = ((function(){
  const exports = {};
  const { subtle } = crypto;

const IV_BITS = 16 * 8;
const HEX_BITS = 4;
const ENCRYPTION_ALGO = "AES-CBC";

/**
 * Translates between utf8 encoded hexadecimal strings
 * and Uint8Array bytes.
 */
const HexEncoder = {
    /**
     * hex string -> bytes
     * @param {string} hexString
     * @returns {Uint8Array}
     */
    parse: function (hexString) {
        if (hexString.length % 2 !== 0) throw "Invalid hexString";
        const arrayBuffer = new Uint8Array(hexString.length / 2);

        for (let i = 0; i < hexString.length; i += 2) {
            const byteValue = parseInt(hexString.substring(i, i + 2), 16);
            if (isNaN(byteValue)) {
                throw "Invalid hexString";
            }
            arrayBuffer[i / 2] = byteValue;
        }
        return arrayBuffer;
    },

    /**
     * bytes -> hex string
     * @param {Uint8Array} bytes
     * @returns {string}
     */
    stringify: function (bytes) {
        const hexBytes = [];

        for (let i = 0; i < bytes.length; ++i) {
            let byteString = bytes[i].toString(16);
            if (byteString.length < 2) {
                byteString = "0" + byteString;
            }
            hexBytes.push(byteString);
        }
        return hexBytes.join("");
    },
};

/**
 * Translates between utf8 strings and Uint8Array bytes.
 */
const UTF8Encoder = {
    parse: function (str) {
        return new TextEncoder().encode(str);
    },

    stringify: function (bytes) {
        return new TextDecoder().decode(bytes);
    },
};

/**
 * Salt and encrypt a msg with a password.
 */
async function encrypt(msg, hashedPassword) {
    // Must be 16 bytes, unpredictable, and preferably cryptographically random. However, it need not be secret.
    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters
    const iv = crypto.getRandomValues(new Uint8Array(IV_BITS / 8));

    const key = await subtle.importKey("raw", HexEncoder.parse(hashedPassword), ENCRYPTION_ALGO, false, ["encrypt"]);

    const encrypted = await subtle.encrypt(
        {
            name: ENCRYPTION_ALGO,
            iv: iv,
        },
        key,
        UTF8Encoder.parse(msg)
    );

    // iv will be 32 hex characters, we prepend it to the ciphertext for use in decryption
    return HexEncoder.stringify(iv) + HexEncoder.stringify(new Uint8Array(encrypted));
}
exports.encrypt = encrypt;

/**
 * Decrypt a salted msg using a password.
 *
 * @param {string} encryptedMsg
 * @param {string} hashedPassword
 * @returns {Promise<string>}
 */
async function decrypt(encryptedMsg, hashedPassword) {
    const ivLength = IV_BITS / HEX_BITS;
    const iv = HexEncoder.parse(encryptedMsg.substring(0, ivLength));
    const encrypted = encryptedMsg.substring(ivLength);

    const key = await subtle.importKey("raw", HexEncoder.parse(hashedPassword), ENCRYPTION_ALGO, false, ["decrypt"]);

    const outBuffer = await subtle.decrypt(
        {
            name: ENCRYPTION_ALGO,
            iv: iv,
        },
        key,
        HexEncoder.parse(encrypted)
    );

    return UTF8Encoder.stringify(new Uint8Array(outBuffer));
}
exports.decrypt = decrypt;

/**
 * Salt and hash the password so it can be stored in localStorage without opening a password reuse vulnerability.
 *
 * @param {string} password
 * @param {string} salt
 * @returns {Promise<string>}
 */
async function hashPassword(password, salt) {
    // we hash the password in multiple steps, each adding more iterations. This is because we used to allow less
    // iterations, so for backward compatibility reasons, we need to support going from that to more iterations.
    let hashedPassword = await hashLegacyRound(password, salt);

    hashedPassword = await hashSecondRound(hashedPassword, salt);

    return hashThirdRound(hashedPassword, salt);
}
exports.hashPassword = hashPassword;

/**
 * This hashes the password with 1k iterations. This is a low number, we need this function to support backwards
 * compatibility.
 *
 * @param {string} password
 * @param {string} salt
 * @returns {Promise<string>}
 */
function hashLegacyRound(password, salt) {
    return pbkdf2(password, salt, 1000, "SHA-1");
}
exports.hashLegacyRound = hashLegacyRound;

/**
 * Add a second round of iterations. This is because we used to use 1k, so for backwards compatibility with
 * remember-me/autodecrypt links, we need to support going from that to more iterations.
 *
 * @param hashedPassword
 * @param salt
 * @returns {Promise<string>}
 */
function hashSecondRound(hashedPassword, salt) {
    return pbkdf2(hashedPassword, salt, 14000, "SHA-256");
}
exports.hashSecondRound = hashSecondRound;

/**
 * Add a third round of iterations to bring total number to 600k. This is because we used to use 1k, then 15k, so for
 * backwards compatibility with remember-me/autodecrypt links, we need to support going from that to more iterations.
 *
 * @param hashedPassword
 * @param salt
 * @returns {Promise<string>}
 */
function hashThirdRound(hashedPassword, salt) {
    return pbkdf2(hashedPassword, salt, 585000, "SHA-256");
}
exports.hashThirdRound = hashThirdRound;

/**
 * Salt and hash the password so it can be stored in localStorage without opening a password reuse vulnerability.
 *
 * @param {string} password
 * @param {string} salt
 * @param {int} iterations
 * @param {string} hashAlgorithm
 * @returns {Promise<string>}
 */
async function pbkdf2(password, salt, iterations, hashAlgorithm) {
    const key = await subtle.importKey("raw", UTF8Encoder.parse(password), "PBKDF2", false, ["deriveBits"]);

    const keyBytes = await subtle.deriveBits(
        {
            name: "PBKDF2",
            hash: hashAlgorithm,
            iterations,
            salt: UTF8Encoder.parse(salt),
        },
        key,
        256
    );

    return HexEncoder.stringify(new Uint8Array(keyBytes));
}

function generateRandomSalt() {
    const bytes = crypto.getRandomValues(new Uint8Array(128 / 8));

    return HexEncoder.stringify(new Uint8Array(bytes));
}
exports.generateRandomSalt = generateRandomSalt;

async function signMessage(hashedPassword, message) {
    const key = await subtle.importKey(
        "raw",
        HexEncoder.parse(hashedPassword),
        {
            name: "HMAC",
            hash: "SHA-256",
        },
        false,
        ["sign"]
    );
    const signature = await subtle.sign("HMAC", key, UTF8Encoder.parse(message));

    return HexEncoder.stringify(new Uint8Array(signature));
}
exports.signMessage = signMessage;

function getRandomAlphanum() {
    const possibleCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

    let byteArray;
    let parsedInt;

    // Keep generating new random bytes until we get a value that falls
    // within a range that can be evenly divided by possibleCharacters.length
    do {
        byteArray = crypto.getRandomValues(new Uint8Array(1));
        // extract the lowest byte to get an int from 0 to 255 (probably unnecessary, since we're only generating 1 byte)
        parsedInt = byteArray[0] & 0xff;
    } while (parsedInt >= 256 - (256 % possibleCharacters.length));

    // Take the modulo of the parsed integer to get a random number between 0 and totalLength - 1
    const randomIndex = parsedInt % possibleCharacters.length;

    return possibleCharacters[randomIndex];
}

/**
 * Generate a random string of a given length.
 *
 * @param {int} length
 * @returns {string}
 */
function generateRandomString(length) {
    let randomString = "";

    for (let i = 0; i < length; i++) {
        randomString += getRandomAlphanum();
    }

    return randomString;
}
exports.generateRandomString = generateRandomString;

  return exports;
})());
const codec = ((function(){
  const exports = {};
  /**
 * Initialize the codec with the provided cryptoEngine - this return functions to encode and decode messages.
 *
 * @param cryptoEngine - the engine to use for encryption / decryption
 */
function init(cryptoEngine) {
    const exports = {};

    /**
     * Top-level function for encoding a message.
     * Includes password hashing, encryption, and signing.
     *
     * @param {string} msg
     * @param {string} password
     * @param {string} salt
     *
     * @returns {string} The encoded text
     */
    async function encode(msg, password, salt) {
        const hashedPassword = await cryptoEngine.hashPassword(password, salt);

        const encrypted = await cryptoEngine.encrypt(msg, hashedPassword);

        // we use the hashed password in the HMAC because this is effectively what will be used a password (so we can store
        // it in localStorage safely, we don't use the clear text password)
        const hmac = await cryptoEngine.signMessage(hashedPassword, encrypted);

        return hmac + encrypted;
    }
    exports.encode = encode;

    /**
     * Encode using a password that has already been hashed. This is useful to encode multiple messages in a row, that way
     * we don't need to hash the password multiple times.
     *
     * @param {string} msg
     * @param {string} hashedPassword
     *
     * @returns {string} The encoded text
     */
    async function encodeWithHashedPassword(msg, hashedPassword) {
        const encrypted = await cryptoEngine.encrypt(msg, hashedPassword);

        // we use the hashed password in the HMAC because this is effectively what will be used a password (so we can store
        // it in localStorage safely, we don't use the clear text password)
        const hmac = await cryptoEngine.signMessage(hashedPassword, encrypted);

        return hmac + encrypted;
    }
    exports.encodeWithHashedPassword = encodeWithHashedPassword;

    /**
     * Top-level function for decoding a message.
     * Includes signature check and decryption.
     *
     * @param {string} signedMsg
     * @param {string} hashedPassword
     * @param {string} salt
     * @param {int} backwardCompatibleAttempt
     * @param {string} originalPassword
     *
     * @returns {Object} {success: true, decoded: string} | {success: false, message: string}
     */
    async function decode(signedMsg, hashedPassword, salt, backwardCompatibleAttempt = 0, originalPassword = "") {
        const encryptedHMAC = signedMsg.substring(0, 64);
        const encryptedMsg = signedMsg.substring(64);
        const decryptedHMAC = await cryptoEngine.signMessage(hashedPassword, encryptedMsg);

        if (decryptedHMAC !== encryptedHMAC) {
            // we have been raising the number of iterations in the hashing algorithm multiple times, so to support the old
            // remember-me/autodecrypt links we need to try bringing the old hashes up to speed.
            originalPassword = originalPassword || hashedPassword;
            if (backwardCompatibleAttempt === 0) {
                const updatedHashedPassword = await cryptoEngine.hashThirdRound(originalPassword, salt);

                return decode(signedMsg, updatedHashedPassword, salt, backwardCompatibleAttempt + 1, originalPassword);
            }
            if (backwardCompatibleAttempt === 1) {
                let updatedHashedPassword = await cryptoEngine.hashSecondRound(originalPassword, salt);
                updatedHashedPassword = await cryptoEngine.hashThirdRound(updatedHashedPassword, salt);

                return decode(signedMsg, updatedHashedPassword, salt, backwardCompatibleAttempt + 1, originalPassword);
            }

            return { success: false, message: "Signature mismatch" };
        }

        return {
            success: true,
            decoded: await cryptoEngine.decrypt(encryptedMsg, hashedPassword),
        };
    }
    exports.decode = decode;

    return exports;
}
exports.init = init;

  return exports;
})());
const decode = codec.init(cryptoEngine).decode;

/**
 * Initialize the staticrypt module, that exposes functions callbable by the password_template.
 *
 * @param {{
 *  staticryptEncryptedMsgUniqueVariableName: string,
 *  isRememberEnabled: boolean,
 *  rememberDurationInDays: number,
 *  staticryptSaltUniqueVariableName: string,
 * }} staticryptConfig - object of data that is stored on the password_template at encryption time.
 *
 * @param {{
 *  rememberExpirationKey: string,
 *  rememberPassphraseKey: string,
 *  replaceHtmlCallback: function,
 *  clearLocalStorageCallback: function,
 * }} templateConfig - object of data that can be configured by a custom password_template.
 */
function init(staticryptConfig, templateConfig) {
    const exports = {};

    /**
     * Decrypt our encrypted page, replace the whole HTML.
     *
     * @param {string} hashedPassword
     * @returns {Promise<boolean>}
     */
    async function decryptAndReplaceHtml(hashedPassword) {
        const { staticryptEncryptedMsgUniqueVariableName, staticryptSaltUniqueVariableName } = staticryptConfig;
        const { replaceHtmlCallback } = templateConfig;

        const result = await decode(
            staticryptEncryptedMsgUniqueVariableName,
            hashedPassword,
            staticryptSaltUniqueVariableName
        );
        if (!result.success) {
            return false;
        }
        const plainHTML = result.decoded;

        // if the user configured a callback call it, otherwise just replace the whole HTML
        if (typeof replaceHtmlCallback === "function") {
            replaceHtmlCallback(plainHTML);
        } else {
            document.write(plainHTML);
            document.close();
        }

        return true;
    }

    /**
     * Attempt to decrypt the page and replace the whole HTML.
     *
     * @param {string} password
     * @param {boolean} isRememberChecked
     *
     * @returns {Promise<{isSuccessful: boolean, hashedPassword?: string}>} - we return an object, so that if we want to
     *   expose more information in the future we can do it without breaking the password_template
     */
    async function handleDecryptionOfPage(password, isRememberChecked) {
        const { isRememberEnabled, rememberDurationInDays, staticryptSaltUniqueVariableName } = staticryptConfig;
        const { rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        // decrypt and replace the whole page
        const hashedPassword = await cryptoEngine.hashPassword(password, staticryptSaltUniqueVariableName);

        const isDecryptionSuccessful = await decryptAndReplaceHtml(hashedPassword);

        if (!isDecryptionSuccessful) {
            return {
                isSuccessful: false,
                hashedPassword,
            };
        }

        // remember the hashedPassword and set its expiration if necessary
        if (isRememberEnabled && isRememberChecked) {
            window.localStorage.setItem(rememberPassphraseKey, hashedPassword);

            // set the expiration if the duration isn't 0 (meaning no expiration)
            if (rememberDurationInDays > 0) {
                window.localStorage.setItem(
                    rememberExpirationKey,
                    (new Date().getTime() + rememberDurationInDays * 24 * 60 * 60 * 1000).toString()
                );
            }
        }

        return {
            isSuccessful: true,
            hashedPassword,
        };
    }
    exports.handleDecryptionOfPage = handleDecryptionOfPage;

    /**
     * Clear localstorage from staticrypt related values
     */
    function clearLocalStorage() {
        const { clearLocalStorageCallback, rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        if (typeof clearLocalStorageCallback === "function") {
            clearLocalStorageCallback();
        } else {
            localStorage.removeItem(rememberPassphraseKey);
            localStorage.removeItem(rememberExpirationKey);
        }
    }

    async function handleDecryptOnLoad() {
        let isSuccessful = await decryptOnLoadFromUrl();

        if (!isSuccessful) {
            isSuccessful = await decryptOnLoadFromRememberMe();
        }

        return { isSuccessful };
    }
    exports.handleDecryptOnLoad = handleDecryptOnLoad;

    /**
     * Clear storage if we are logging out
     *
     * @returns {boolean} - whether we logged out
     */
    function logoutIfNeeded() {
        const logoutKey = "staticrypt_logout";

        // handle logout through query param
        const queryParams = new URLSearchParams(window.location.search);
        if (queryParams.has(logoutKey)) {
            clearLocalStorage();
            return true;
        }

        // handle logout through URL fragment
        const hash = window.location.hash.substring(1);
        if (hash.includes(logoutKey)) {
            clearLocalStorage();
            return true;
        }

        return false;
    }

    /**
     * To be called on load: check if we want to try to decrypt and replace the HTML with the decrypted content, and
     * try to do it if needed.
     *
     * @returns {Promise<boolean>} true if we derypted and replaced the whole page, false otherwise
     */
    async function decryptOnLoadFromRememberMe() {
        const { rememberDurationInDays } = staticryptConfig;
        const { rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        // if we are login out, terminate
        if (logoutIfNeeded()) {
            return false;
        }

        // if there is expiration configured, check if we're not beyond the expiration
        if (rememberDurationInDays && rememberDurationInDays > 0) {
            const expiration = localStorage.getItem(rememberExpirationKey),
                isExpired = expiration && new Date().getTime() > parseInt(expiration);

            if (isExpired) {
                clearLocalStorage();
                return false;
            }
        }

        const hashedPassword = localStorage.getItem(rememberPassphraseKey);

        if (hashedPassword) {
            // try to decrypt
            const isDecryptionSuccessful = await decryptAndReplaceHtml(hashedPassword);

            // if the decryption is unsuccessful the password might be wrong - silently clear the saved data and let
            // the user fill the password form again
            if (!isDecryptionSuccessful) {
                clearLocalStorage();
                return false;
            }

            return true;
        }

        return false;
    }

    function decryptOnLoadFromUrl() {
        const passwordKey = "staticrypt_pwd";

        // get the password from the query param
        const queryParams = new URLSearchParams(window.location.search);
        const hashedPasswordQuery = queryParams.get(passwordKey);

        // get the password from the url fragment
        const hashRegexMatch = window.location.hash.substring(1).match(new RegExp(passwordKey + "=(.*)"));
        const hashedPasswordFragment = hashRegexMatch ? hashRegexMatch[1] : null;

        const hashedPassword = hashedPasswordFragment || hashedPasswordQuery;

        if (hashedPassword) {
            return decryptAndReplaceHtml(hashedPassword);
        }

        return false;
    }

    return exports;
}
exports.init = init;

  return exports;
})());
            const templateError = "Bad password!",
                isRememberEnabled = true,
                staticryptConfig = {"staticryptEncryptedMsgUniqueVariableName":"3bf2fbe3458da300507f2e92916bb132f8e83acafcd8908628a9fdb403e7fb91a038d2d188f5470a36f62b7f004aac88230f5e0dea3690e6adf43b167c7a9cddfdab2560435fbade9d2b4ba0ade2448b2b812d262aa1104d602d1584703b009e8af27a21127467b1baaaf3dd893e21cb113f731d07139524afabd85cdcc66f5df8d94652a8c9125911b80e45775882475c85a4dadae26418854a75cf19106609e205e80991801c59c759cf2c2adce6c035759363fbc16992caf27db53d5d74d6f9495e33586ccddd79f79efec50dab2e6712a2ada4bddf86f85e7ebf3011b2f5c19305b22a14c5221c3599f54a2f022267d663a251e244e2c3d28ffd9e4f1beac53750c772bfa7cd46b5f8522092d7bdead552e5d92c1148cc8455ad001133a3022afc335183d51b8021ee1d2d94d8111081416670a56116fa33bb07661bd950b9591c2b7c3d76418d7eb1d3a8b93902572134ab1b7fe234cf9673a84a600f97663dbe514e383e2acac55298f292a05d7079eae4ba1870b341514ac87e2411cdc22649ac3ff3a4071b1174ae479ad770210bd2504d9e5cf6046d8e38cab05bc3681e61db9f578d42e24a0c11a077b9e7ac67760853717f9d8295c729cf2fdc67bf87e020515747aee6904d4debf178d2d5d8f5aeea226938d0f2987349cd7cfe592a83b64cd4c009ad953d1ffd84d13d0369ad236ea3df5fc260cf3df20fac8ed92f85a40cf9e9a156ad05482a0e60c06bdcc036750d21bdc127b61f40095334a97ce57e006c6d4f8a30fb159309fd6378b85ddca51c1467ff2b162b3b31759cea003562f2346c07e8f13c673b1e9bdb29964c1e4e396d87e6733b2502acb4f632e8b2e87b69d7779bc7c6f0639d3527397e827a800624ab7826131ff9cc2221ce25616a40aa009c7337c575011c9b2c97d17d35dca9e9f2d0e0adb1298e7234f626df23423a04343d67f598bac42ff48fca9b7dc16dcc52fadbbac7c2acfdb71ab3622c53d183992d795c8a7814aa5e71a67dff85678a88ef7f675410ab540fa142063ed2b09be29391410d021ef70972e872a12b78bd8fb50de25e9ededd0718d52f9d9b3014613cf619a91367bf6ad35cc8e2ebd88f23d694a236cade719fb79bedb5b4b4f756f9518db3f1339561c3d99b4a97045a0879c60ee75e152266f6e3388e8d5748dc3ac33b0972e62ad02686664a654dc8e54e3cf0653e44d892a8b0b7e82ce9aad3b8cbcdc1886e58f5908c59a0d049be890809199d4db22e484c90f495304b2b61cef940aafd071cea8429d262d5729bc459337ef95c0fdc8b31f1fb6c49abfb9dbb7df58d1ac758284c909cf60b1e308b89c2c563be5bad6bf84b3df8efcc0e9da3b6c2a1bc7eaf0d1fe9dd9a44515edc5704fbf71bc9585fbece57cc2402e9152f835c789b017e5a249f43f17788271156964409f7809961c6e571c7b68aef66665ff2a16655997eed90812cf0b4bcfe0afb242ef195ff35a933eb8f7db5e1b882581cd2a10593579351b6211e71e3e527fb7aaae576d9ad089a90f123614511c02b76fde2c092eae6e3c599e516c7f42c4455b4adf1fe7571004f36ac4d08ea168590352886187154079aca10e8454384ece4e993e888af6989313be39d9464343b319a921760c1566aee8b1f4c7cfb7a50f08f0b6a2c055b8ca0805914c28398826a695add853f023643f4d607e569ba860e93ea1e1ba5ca002923ac4c3c2219c3e2ac7bd4244d71211b061d80590de083972e239d80abda771d122c573db571077696f38ce31cd5e4300e47d9c4617e992abdbe065ea69b934d52fe79676f8d8b01df7cbb13217d57d59cee858194fd56d47df55a7d34f0131046a1ad0dbcd7e79aba56c018ce16ab91c61cf5918e0665c2ed6ec9f249e82be9e00befdb2837c96f5e20c7e8625bfc7df7fd2ef48e494352c4b4af12a1f0c0430a1aea703ccb6396e7f64f5ebc51535acf552d9e56e3672f8ac29c07da4cc5aba06f25d0795298c1136affa84122599b2d60ad9196ba14bc2d9ca115a250acc1c68cf6544e85507777522a146cb635a4ea7f049fe404de86f622a8d4ff2c4e2df8cf95cdc631579bae8600155273d423371c6dc4ce4c725d0991e4e940de47a1cf27f82cd3f42d34a3dc8bdc8cbb03039df2c989c0e4bf244453e95559ba2bb4b73dedc24f29bea3444e718987c620a6ad77191338ee2f0cf09594c70c3dc7ff062a7f6d5fa62c187890070838b068eda85b7afc7edc207bbb0452e974b7fd7cb483627ee87941b832afb3b31569e377adee648e92900c4e91526dae19958497ff6a4ed007119611a221a72fa67265ed9100600f5d669129af71cf9cd6e9e37998124355a64a3e0b105a4af6d2a51bc11cf8d2888ccaf5074ffeb8d5b3b29371b86a3e511ff6c3fbb746cc2c29bdb6aef0f8ba0dbcb9fcc03b8cca263a0817c67e1aa5b3c39f98840f95cd3dc7f6cb7524de3f82d397130daa0a6d30090ac3e05e12e10128d993660c4e38a823f9963a081cdaef817b0c4e49f46cf3eabb1aa4b3ab6b44f8a8bf025a0ee932d10e4c53f59362573e34d4e78c76c89057abf9a1aecaf27eb0802d2a0bcce16ba5d2039abc55519ed236771d323604c18a13c043ead4c32abd652ca154b5d23b7823241801640f6277121ddee5d28fafd34975e6ec76f45692d263885b25b59c8d1d7788613d8e214bc3e2f599c964310f1c00753d8f9f6e429d4d5d6d73a59f419d02392f69222942e982a8eb9821048fe4d0018e43409f9d4fc21e586697c7388c188f2bcfa919e1d9970da94e49f30efd1c5c3d2e91e165217bc96e9f441b18d394d5f264b3a426e5d113b44168a456052bec7bb226a92c43b8806b5c031cc12f810a6e37afe5a12a076d08c0b2dd87c5e2c4672769718958d6ba1b87a5ef4f417e6cec353b7685be3a7919165994d4baeaa3d2f8790eaf72363fd117aff917813fabb8ae458937bcbf122ecc55a31df086602e19b54b563ef2f147ea239930acbb809ec53f62ddf9f759036b21a063b568a7435906a842f6f80bdb4c4e0054a9aa8acf6d128486c0e5b6ae6027b63ce050e2b2e855972e42daa228539b0b51157578118bbfab00cf8f422db42f727cfeb468611e2cbe10b41313223143dd57288a9650978d2d15732eeab12c54e3abfa47e68342d6474ce428f09ff8dc559a5b15ae7368fed6b59bce490bb90580cd72c298f7128e0e71f7c9c6cd37cd55dd98d1c535bd56e95b98d95bbf705856dee7611997a8d67a8c69ce4ac9645cfaee2c5c5becdfd541394d144f56695c942ae24462d9a5ec22801d50c990a5718a8b7dde7103d953afe3da81ccb7917393995913be096e67b5bc0ecf0346f9f5709922c7f91862dd589ad644e116e8d8387de7de954514b68e394249fcfe15a4b5071ba14a2d74bb02b202e9917d41345d4fa0c8ee5be35b432abe0764ac0023298ba93667b1fae8883b6131390e3dd8ffe8f8c88992ea6ca0867f44413a2dae690acccc7a0f64c8759b537c48ec98f45d7bcabc11861d6423c168cfdfdf697446ba2fef63985b82e919396c51318b93d07a5cd88e8236673219c8bdc9312320fef2b5f69b54f292491923bb0f82c8986344fecda697688a38af7dbb28c0a4f2d39cbd9971522118a07e20abf97d03848bd700bc9020cd961cc8dd8c49b726199e96d9f104832eaf370c1713b2193faa5de267783e7cead74ae15e8a04f0986719a05cffcc616cd86d85d6ae2d9563b620830afaafac51496ed6291432d0851194f7e6f665bd7aaf270e657346025d1dd296011c3fae098ce8846e544208ead0d0e8e0409a7ba12c9609a752bb129c4686979fcad2947ead2a2004f2f5645f7df454c5609b64bb9e41ca80562d9acc03aa39211da318cf1ce92589bad858f933271da5f1109ff10afdb2dc9d060f7c3df3008248a5521faeaa7ca1efa990eaa21812b08d062fe2ca275bd5c4d08bfe495806c293b443c69d3d9a3fd40bfe8bab91e5d9b12f4646f7767b3ba46724ad59f9ca4e59b32f21ed3b1a0fbf1463b9c3bbdbf87c32aab96e17545f19efabc5d5eddadbfefc23eabc834dcdc9822faf1b9402b9635ede3f0b6582e6ed4ba8859d0b1d8ce15a356a4f5d236fab5ad74b62343d3c765ecc9e4cb1cef518162c8c62433d8d90011ff8840d05e7ece00e2c8b7b73ee392a159a3daa1aa72d7f801a65d9c1a761fc700593c6055d48a497e97232f905c0d7cc37e95e304e86bd23262f34e6e5afb01ad624fdc88bf204cc932e63e9a726ee6096c18d58f52328153c866ff4a2f4935922ded641a234fb9e5fdb9a75811a741f96f7ec59d774a74dc96d09b1100fd89cd6792ed6fe14083ea52ad3bb619e9b25a8bddeb680b93e2a2bd00586f452f346fb4f1f1e07ebe1144703f0a33c79535a0d76eecf2d4300c4e50fb69107677c7f27a54573e045d85b9f02b53371ad11fa10cf1ad5b23d73004ba3e2ecc20568f259fa42eef45f9d1f5b59562559ea9fb0a92e7cac68d76248efc1c1ef2d22a4cdaca0876b44b8042fdc02b6e083f5a70b5f43f625345182e7c61f8b676d1e04eba1ebb6438267d641f9c111c39867b53664a340ab149a42424cdc7726454879aa1d07022b64e2b6664ec0167ee0b25bdddea1054bed18ed2475e5db72cb270da4fa64f916445299c6b436bfee8bb3e99d4a73d87027945c14b380653b342f7e0656de491d34e04a9238df7e9a3fb1ea8582bddf837d578caf1e0a2208e9e51230a60bdabad02b31a3aa9cf245669bd4bcd65fc2532fc05896a1dc493b87982d829f5832c04f7b261018064bc4b7039b9cb4bdb8559e0f69cf2c67795ece93bc3e232f5d4b577473bb7ce0dadded3a7a040030d84b8b49aeec4ee3a88ffef1a8573b60014c96daa74c9f93dd9fe6c2b69e0c4e06012b96c6d031db8165d6ce318e4115cb27164182b57c02c833a59d6803a6436f6bac3e866561a023d398cb53fe39717a22907dc6a10fc878862897e5e49b40a16ebd79efd742f05f189f4bd38058ec8532c5bd017a9455317653088e2bb5035cec777b16760b3aef58c35493072f55927ac01375033215f5c827aa4d3d1ac3b9dc4e8cf8ea4abc7285cfc7a89b3c75b951306de3f7f6de5707ac2d44118ee199ce1fd33709ac50905168af083afeba542ad64f920e8016da26428ee4ac8aa8a2a1396ff53f4055a6ca2a917ae6c256a247131b633a47d0ce6474bdcc8f62bd4fd3c19e758f629af13792bb3a66eeb0c635fd9307fc0270aa7fa4008446e305d3212baa0ffb1431963cc516ad6eb9e4ff577e89a5fe13dae5d8493657b86cd71af8b629ac726801896bae50e8c0e86f556329f99c3d6cef9855b5d10a5b296d9ac832680fe7bb79bf30f014592eb627b2f8e312870283747514c23f9fd87d5039e5456c3074bee4dccdd3c5843458a92bbac5809026076188c8e669b1763af6bbf5924f893c7f499f4e7e2ba64dae1c4a76f8deff3eb9f85e75e083fc6fafa48445562b7415a30876c0305af627a00b72a6a38b809b5e7b802570c942bcaea1b4a55638c1f3bee0f8df52fbb52d3173a4cd9077675c6f3d441c1f8304495e88e8207dbe886c14d86b348edf110bfc4f4f3dd5f3865b0fa4c7f05e0cb04ec68b83fed8061b16bfc8c8a6175db48a3d87678782990762a9c1017e56ac3aa6414041d4a07695f0f516c850512754d83b051ca7ad288c52681c148406ad12762ba67eee6dc557dff4fb2d8eebdfddb53226d1ef180b5fa6c56349b93e8843a4df638a35abc29b9814ab81a82e285223b1c6789db2f9d38e14cd74a38308a1ade387a03b1878d330569ceeee0c233755098fc510e4cf3ea0b8c5b980f21338dae8c87b8465576d1f46742fa339c3f250f314915ff1641015a80e21f3a4da199938c199a4a9afa1f3c97f76c8ea642e2010f6ef88999ecd307b1d5993e3cb773ea970c9c60e215dcb5046a3394bfddebbcafb8405f8ca045c342ac37ed49fdf8b27d3da5645a0b211ef7d5ff45760252f502c0dcacb6b7b7834d4f6c33f6884da597105e4ba46942d46997c2e9f8e167da43232fbd8d473943b293dbc49644464f6a986542d0459675b20d8171278b7febaad4e64be4e4b1930dff7723c79746526a47d5ba53a77ae28b75a2149cec3c1ebd1424dc66d50d9cf0100cb8ccfab1838d63fa577f4c4fc92e8c6edb5fc06391587916fe4b1b14f0763c506ecd67ab5206c8fd0341dceaaf1a6da13f2acad615b7ee95ec5f2a0c39e04ef7f96c796781c32f6249513ebe3a6aa8133e5830b5d5be25b3f2b3dc7247836ec5dcfaeaa7e157d4aa8978ec851c87583e24b3301dfa1f5b3afe2280a5f3ade694d63a24547c07c11076196d052ebf317eb3ac5e1292828662cf2c362e23e6df661042d0ba82551ef8ff57b43679a2cec869f475d52ef0a8b0f2271a75713da4913c5c2c1a44129cfcf745cb4dec933d301a295379d42c9a9ffb63b7e20bd3907171a7bf689abe01b3f5c2bf26bc571d99f3cf3189d8a91892c56ac8e1bb9ee064731222f2bc94d20295266b754e053e2a343c371e67d33fae94eaf9ad48e75ae1772cebf6f9458d7fa8bf6796a0a9127b74c6602746a4183ccca1891c80dc8007efaa064c0da8c9ca463d0c17c7b208e37ef82645f51200be2632138da800939bf0189d5d1856457fd60cfbc51cd86d353337856d3863e45f3467cc7ecd10344730cc784edefd2460b3c1505db906a99cfeca823f42d5a901dedebdd834a99c5b4c3d8c47e160754ac2a9e08d8cbad04e2fc5ddba003fe44f63edb3b26dacd71f0253572e74b8e3178f8cf68f240a51876c63c0d9d76268cda2453c9b991a8b8dd06b7dfcf40ae1c306bdc7d4a1d2168fcdc2b53c3be49bb6829cee4f83ca8f3e3f414d4c5bf0d384e4df718f4823bfeca79eb0fd7499b740e0e519549d94f20b47aca605493613d99cb0d55d90d3b97980f16ad65a2a7c93716589d4b812c5a044d04692d89a4b33a3da0e78bc3ddaacf174b2f01980fca0557b79b45d765020f18da9ba70d461dc70dffefc474e30dcbf6399752dd8e14d637eb8d8997473c6f5327d395bca604fc8f19f77cc1cc2f4ee123aad2acde267624c56b24e02c5c5f3621c16a303481a2248f10cef1e9910d906f3ad189fbea05565d6b1b8c94c341485c71712fc39e2091c7e8788f9c122329792875d961880b5aa63a20153a3c5bd9b5076ea181fccecf82c786eb2b8402163ae94286432eada361868794a1ea1a9ab60cfc865986a6dc02d0309cdd9f3823a445fcddb4ce0511b8852446b61230887a59e73ee49476bf16b7eee0d3e6b17b5d8834b18f32b3f075f862d1fd590959441eb3379b4aedc344fca44ea3ad0bc3d3cadc8ee98b2b6acbfc65adc201d70b8b1bd72516158e3c9314bff921b529b063767ca96874d2c25af6f32c359c374e52ea8d88a222e5743a8e478c5b66ccf4c021e32bedb3ea00df0b58d576bc64520dc7cebb8d931dfd7a07dc8aa10d0e30672232c1ac165e6c6d22ac459d1571ac0411d9065813c6a38fd72ccbec413b7646d9fd67ac0f5378cdd357912ace0bbd440aae1a98801c30981ed8f8816cd192691fd068af4604ba7d3b42fccc45a753de2c89864cfc2ea7560746c0af744d5b4e02ab28b434448fca6edee2a09c60ff91dacb9f6ebbcb55ca7190b5aa6f84c6c705a94711b975456290aaff2a3efb50e6660c3620e77b1518203fdf7dce3f806c40458b1642cf68d312486861c08d27886c1318b4852e460174be1d125c45e0dfddb0415ab6c03734893fbc8d297dc5dc55c64fdcbc52d1e9ebf0c5d85288263b06ee7a7f01b9b0199acd770bd22815d5120544140513f816287187bd4122f5bfa212314123c36f0af6cf4d373f814be93e3f9109d9b5ef7332cd9383f7ed1687f78e0cbc869b9a2787b9e988db8abb2ad845d56c20a403053d44a615b173650183f09d870b45564942d1caa6df33255b31e320dbb79ef443b3aa00c709fdff07a95f67a9c43669d559916df9f7f22f623a4b3042e592d49c34547b5ca1d27a9e077f3334cc488e23f0c00a2f4062f38b9ced8f63b1087a828fc1b9d5ce04288138904a391cf766a11a5d3eb760b1ae769558d3c7c033128e88041788b5bc545db72146297e0341319d5e4ee803138030fff7abbc0f51e72817349d8b4837527412a251406ffba1c95a9404c610ca837794ca310859b6ee18ca3aaba0aa923501bcb7dab2eb64c8723da81a33fe693d42a3f00c9cb54a3d880cb6b9e2db98b3d3312fd6a323e9c56d80b65f216093e44946e99560c1855e1543410a6356c446bf58e9639938c63d0cf8f012c1549b69369d6b69a88ab302b3580e2a8bc0273d6cd9170c60d7990ff863f8ebea241cce6809e2d4644d0007ce2bc3ec54133a79ed911c06469f8e28217a4863d555c16351e8eb40c1fe896343863709102c7c13e1dfe6a919ad60cac4600ae403cdafbf250c15978217809fb9520240b78ae2a89f80da9564d6129a401ea066862e85ef1e1c0e7cd4d07521f048d462f7b6d51cc8426fac0a677370dfc74351e0197d3aa298b966b80644cd4cc7ba055773effd7298d696d1a54d37c7a124726c9038f0039a578e0f4675fc41a2fb827fd20b51a1ecbc056c640647383a81db9d2bc24ec8f37f95c4a034039e51f2fdea7fbe2f9c2027afcb5ceaca0c1b57f2aeee853d537a24324ab304a1b484106b042bfa8d920c08e4d79cda307006d22b2982f27eba536a7570ecdbe3db0fdebfc5316c7b654e246cbe3553056395739713765dd251cd1424391ac476ac72b2c890663c2a619176d572d570a8ad1cd9e3ae3cd7206deb79cb1136e0d0b4545f84108469a050e5d2bca8428d35fa74910089a2845a55f8ae19ded753126bcbbedf4ddc8dedaaf8f1c9a3359547abae9d4c293dbea88228467e5c8d2c09c678dfc5469c8cca9870bea9a5e1d942b64206ebebcd0ec6fb6e36bb6c6f772e169e47eab3025253886c56c17f6f400d609f9a054fd1dd71e22b622d2f7721fe1adf68f7639ff9984baeb826f27f5a24492d1f3be1b66b8b297040bf1cffe97147636b19c4b0caf8c8e25606b7500919fad21040ae4cd8bb92a5db36147e274a5d3e2e4cc314613f4a0f76496d6b909ab9290059698b943d16995b813c666ee272f6d07df035fd1ef3a14e3fe5dba6e7a00db045bcf851f53733451767852b63c31450d5b8aa3a751940e0257a970d8066f17bfa60bc46a01880b237982f50f55ea7e2deea04d403a0994b679c9f8c101a0c7bc30150ce07cee4d95ecf26f96c67b1b21585c9c53f6a4b05bd1d1441aae842d7b892886a60ad52b893fd35412ec1cb80f688691e145c2bbb23be0fa794f959ffc769decc32e3a3a69dcd2c4ab6820e8f48ed57596de911c7682f1ca6bc65a1f12001890ce690cc57126a1e9d23afede8c525b54cef131384f4d50b61b6b76abcb281280ff405158b9ba3c0a0b958cda5daf909a80e8b56665f6146bb4e4bd1cc5f4afe9221630401629ad6f9a35872d17e1d860561cc56515b9e38a1c7b3e0a3649e71c6252d5e383880bdf6b68d2bb5690a88bbae835ba46f622b5a611c53bfc1a6124889138d01a5d4bdf387c41e08b163e07db47933ca5ded0803447f74646d11911b82d8a5f867ad53e4762872e5f8ac567d48958e3c77b38f6d7da4204a636ef0357f46ab4c2ec3c11bf186ff1751c57beb2cc099332db15552d2ab35adf083d7124314aad01a4828dc0202930e7fa592b2f92b8834978fd4ba1924383a5b2c05b218e00f3268b86a10c90ba3f50bcb004f3ba434e133ca6758001948787154a60e1d2bedfde5e94a6f8468b76fd09c81dfdeddc14803c271f1f8e9e8552bdc30de0197019bfd99ec87de8c2218b94d62a92b1823679937d0c7befac2c30ddc0e569f29958f79c9c4e5570600e6ee080c39b64f44b266c63a0e89ee9d6b0813551d24e8f45b44f285d17d9f5aa79de0971eaaa21810d7011843f77e355e065d425c651db4fb28282838bc57853990cd8a0da1883f47323eddae3bdd8397f1935e7b64781cec9eedac431ccdbbb2217eca9f8c6e1a5ac335cc22a8b4a6c9213f0d1216301fbcc80d94a9ebd79992025b086f45ed3d838bd6827bf919c9fa6aa461166a599aad84ec1929b7d95d844943995b9d033c409ee91ca06e98ebaf71beb2c33391a5397c3f793b4d7fde042bbc9a06ed5ca3ba98ce7cfecde568309c9b9950c9b4a950703c22cc84a81695b664af6e1989f63cc47cd9d31a204a583bb2d7163eb438a04cc91bfb055c74845d9d8727ee7e1b98a1ccd0da94aa0fccf25e896b099ea06b13b9d72e1d88fee9ffe803edd019d52029a0356ee930d2602a8c2189f7a55155226f4ae2cc6e722a5ecf5b608c988f715a5c63d535c85de23d3ce189073c68606f97026709ea035e13834cb93ec4652b6a37817af94264bf0f3dcd43a5f149270a571d19dee6b0dc3c0dec850b6f6d3bcc31b2914fb56a899e673c5815a01665cd8168217d088b2f23405c812dcb2b7626d9a1fb6134a9fb1c50f28e2b6444219850de16127c79809b84bcaf545cc8eaa7c66e933fead1b63ba8c34761bb1bbf1ab86fc2f2dc0ac0a12360deba2a29a9ec59a360a3d4d86fc2b62250a7ecb40707a3146e105fcc04824c4f1d62afbbf2ef5edbc3b04904dec1dacf64ff87dec30fa81e1fc226d1841734ed5011610d0583fee4c1270101a81b9aa87c21aab1dc229df612249c04f5289132c61bb5ce401f44b9c5449f3acd9fda011295173faead560dc45f6246f4f31d755e7bcc7c4d3fb6dc5817f089c8c442cfd41c65762f706be21dd7f1e0896f323436dbd348b74d1db082e7fafe22bb6012d22be22207c68b939e7903393e63dc81de9b61d7d002e699e7c810d1bd39673197c8069e53a5ee376cba4e90f6bee415692ef0d88a1c125d9533ba808097de048dde7e18a4fa4a62b0e4eceba7290d4c7848f65396266303d4adecaf122c01b5cb8f90819f2146c3b06517964496fbf4127e1f35464f2c1c6e8c8fd6bd1d7909575fa3c6d89f06c920fe891d5251966ab53fcd7f9b9cb1f1a6ec2f02e2fe1ff2d5c947488124a32187399e3fe80667d1ad0f33a23cc070fc93ce26593ff201cf2266fafdf474c1575c18f6cfc97285f2d7cb7ef2b4ca9c8dc7a7c31c0d0c83668dff79fd0b4c5aaf35a16361f4d9e25648591cfa3a20d330af1a0abc7f43e48a90c0eac91b03719ea3dd9e2ed247b454aba073ff1d2e466e599c5bdbff10abe9c2fe1576d0651c880a558037322d9899e0c7d941360e9c0b0ab0f64d98a5b05a23ccf333d76c94a6eb0a71718d52e1c798fb12d7b1257e22bf7c99a553505f33477955bd832e2e1b626425357fa5aab1ed756d640e120739242b643506f1401010a0502ee8ffc8fdf7ea1936a024b1285ff87870d4e431f6555bdbad4e719cbd7448839432b512146d626a2b8f9ee2887128d4a939e4393584ba282dd2bc32577eb2cb55771393af23337c6d30b13d167a6b488fc04cd1ed586f145dd5d65c4d6a68557951933e5e0e787877a7e4968cf91677481736e6c2f789358b9fead8b8378c05f47619045602de2f930bb0625b15f019284684d7aafd8a432ebecd2978f3a7bb56b31235b2c235b7fcaaa7ea259ae1c03adb35ebabe5d6dbfedd74d6bc6b96803c821c0f21d0ff8953eb2bc6cb9212f33381d5eee3554ac41a1a818ebb2a9956e4a0e2677054a192cac8a446dcab457b69fe33b29125331fbe53e81b30b9de425d8e39e5ce24701656f853b7bb337adfed3eaccfb1f8b86d85fe26a12113852113d4538f254633a51dc1c1e03215aa94badeb751094abf703f3d9d01539e040e0365a96f036dd40311e80f4cc45f839bf7a9b8361f610a3d2c078d207928a9f254063120791fa5fdbd5c8949d69b3ee994d2ec38fa6cc822bf7d13224312f73ec5f6f0ec05bf4b07d5b81b023169540bc97bd1990749b1d1b03301f398dbee8e83c683881c3eae7ecf097048f97330b6d4e1e96a4029c86cf69a6f3be40d30066b8597f2c39a5ff93e61950e38103534bb7608acd3749036f869fddaee4831f7b503f70d3a7eff83176f184f3a4058104fc276536fc9468078f9c7500c147c7ad1f5cf8d31f37771321ef982426e3611ab8f45f73a2e54507de181d9e057de42a69718c81f5055b618a83869d9daa099c8d344690b4e965ac66b815a375d92ab7b8d984c5f47677e0ef891af9210e9efbf6c2bd492f5a0a8ac19f58fd7ae858e28f8f9fd5248a11352ddf4161107ea34446a83a6f3abf37eb4ad4e79ea49dfeb9aa082c52d29211113d3d27a3e2b6183c894346696654d38d1d4400cc68b502e55cfc15dde8999556c2a69f024012f8ddaaa3c385f824df6687a312f38264aad8f2887a1e6b9c23a32c08fc1f0a1a4fb3124bdfec46fd551802390bd3f5149180eabf2201ef3f0f6646f65b3bc41fb270355c2a151a55e3b46a311fff51bb739aef716aa1bae4b59b28a761dd96143555a8a4103b34f570bf73b1b1b52ed99826205f3e79e30feeecd33ef3c280aa11cc9ead1a7998b1ce08fdc3c8ee1358fcafee245eac0c7f177ab807726c6e2d28b134ee6c4c5eea5fb668e14b238b8eb5f24b66109aa404adeda04a5a7b2972c3160e6155b2178c25f5660ac27b4a1b36bda960e9a6c443f10b71ac0c49fd8ddb384a39777cca5d15547bc3bf6a32ba5a67b2dd89f412103a97ec8bad7904cc939cf2f094464fcf51a10492095a713d73452efe31b8e19ad0ea1f9c146fff4b5f54721bda568407e8b85e9db20ad363e46b3b30bb7588d5669d1f85e5e2d0d6b46fc767d6b006f2d331a411282259b39bda9d9284fe60979cad137038e84d486fbf72bbaacfdd077d519441d09feb8b0b6a82a63d49d463d745fcf382403ab39441c13f0e6da7da3d9c42210a8b779aefab4dfb96d53742489b46dedf74725f30c3a120fd94f03c4c426c0196a249a0ee4a8c3afb4fda7e012ab737dea868eda7ec3fd994454fdd5f5490d678007a1a81c06063eff7e5041e2fdfd1d04edf9adc093cbad18d7ab13b873b308945f8c09450b6b8836a4f937228b158b9bb16b0d3e726d7c312692887876aa17e8d9cae571a9a398c76e4b4d58ac2dec90a0cd67a083bced9205fc3c2a16f93e4a480e7e68d51965ca2c23548341cc8b182fdb737f3358601666d190df998fd7e04dbf554da7acec31101d4a44f6d1fedf5274e327ab06bac6857c1a8fecbee0bf05aed3ae1fd0163994326503e2af0d8b289c9991126e6c9d632a04e5f169289f8b048cd9bc59ee2be3062f382de6d6d2d7692d348d48ca08cfed77681e4c7c3d00fdd6d6e6745d52f4bea8d61aceebafd47108f9e993346f82084d383a67b97e170b49fba3f530e5cc508f00a63e65ffea90af91661c0fde7b95021863b76b3e19de744040203347e150a9c5f8d40b43fd58b77bcef2d1450dd2d823771d370a5f310c30c6fdad84d39b0bfaf5113a7a59a90fb41e258ba260a87b9d151c75b1160133948cc1786cb04b9b78aed27faa6f8727461fb85c5228086cbd111ab73e1967172573ae1e672b2e849e9c4402109404964436ea79d8efa0222a50836e2c56efa75df02b5611346116b1d31f666abb0ed4c3c118d460f49ef3a39cc5e864f47ab3d8d9dcb755cb2f9b097c5a451a076361684bd86ff4923da075427b445e2dccf4b77e3345f9c290be78688dbf311fe5dccdea14a38d10084e79605761485b0cdfa8f67b6e133e1ee02b6f65a35e4dedf53c072664f7097cff920bfa53b477bf3ecd0b6c5558fa1928602b5feea8875666e25b7d8f3b3a60153f16c66e822b947134d4dfb094d7c88f1dbd6a2ee3fda55f43c892b583b91ac926f428efecccaafcb6b50e54e6e42eb012e3344fa2b193986b31f5bd8c27c1e17f21650eee91cb07b1928601c8dee63a821f6e37138ef2fb86fc4cbd75ce25c624897947906753993670c891cea79751a183031d9fb927c9bc55ab16ab041873bea74df6b56725519251e068f3515d9f2609b81600a0f1cee1294b4da07254e3417a7eccdab195e53c2f039e4cc1fcfc2c3bce6abcde7e19064199bf0c45ab1024c99dd83fbd56d4fffa4576fde150feee972dcf4c2d52425a08aebbe2ef23ef138e43ef9ef546df6ccc4cb614406ed3a1de9c3f4f4e047c81cdcb1f71e611c8c7bce852a20f1df4622348b7c141312262448aa6b1c9bf9e51d87467e2cb57b248d0059ec400ea8bcdb7904b8ade7112df6888bdb958948a6bc251f125f56591900d001f67c0ee87c9dd636fdd15146478af38e109caf1e6891c8a35e62a38a27e2f87d4efa1f7639cf4a30329bea07080581cd2e3234700896c9441d1c17d6a9f6beaf0dcd0a1d5a53300986d207147241573085121eda390388a6b6e9f585d7b822cc5706b233a6b7c427bd94ef4275ae5b52a3f12eb26d5252f1367ada3b7dffa3ea037eca703cb546a050caf1274637ae1a1c38085f55876e769885909b202a333332547a5db978b1565aa722d9f98f3aec753f83e8251b4ecc3320385be595b3f2089d90515f3e9117672e7c7bdab9f0a52882efa593aaf17ef7710a12a0262fd6381e85af625f94f39d4b4d3ba21817b6b231582694a1d6c26f31119c6ae2475c7b8b3f9ae2f71bdb1fa1a79a86e4deae419d5536390dd0316fee9d70dea33d6a2de694fc76d6e4907672623db7b4a1546bf26e7905377afd4e6b14ca3677062a7c5f3dd4a0d42360ca267c0cf1502920040bc40c8db43b23cad26408ad44d3a8e04de365f155ab08259df773a3c74df08e52cad8091d221ce989b7a227ab7fbd70f5dc78d597da46a5c87b2a4bab951ec32026e7b735e082a56ad5e8ad1f04ec31544ccce4a31710e2b4b6b60d7ed37da020b9ea199de867329541833537162676eddcfef689fe4f003383dc413a04882df200cf13e59c4e9fc2daa468022583e1ea5b196f71aea8571ba2be7471e746f0ee50ff3f98cc71193fe05de325c7360dbf38a32ea228f2cd72de7cb8c3b5b57f81a28ac24875d479a7eed914e9c56635f673f24c7b9c65dcb140f64ec4c05aab8c5012c56ede9a338eb69caadf7b3066fcd7ae6df90c9650f8c83acdaa45834a548b72f607d0f58367971fa727966ff3d1ed549ceb9f981a17c6237417cdff965b7812761e6784f16b4392956163baf4927d510b78f423acef6c62758206184299e586d0d4c17ec4d02e4bd1d5923d7d57e451725d5ff9389eb5c7b0da043cb251afb8ed6980999584a98dac9422d40c7f27632e3c3cdc8b339e7bc9d362711d77756f1d82562b4f5695b8509190be8e11d5fcb5ba456b2029be5ba504deaa0d452ca194ca9fdffe716a24dccf9ad95183cd5f13f9e59938fb3947a0da37ded9db609d1aab8958f10340fcfd35c67a8909f8d65fbbf87a3de3515b0507564ea4084c11e71f7629df12e78458dd004e61a5ae288bd6c319560af6821e4022b70702930052db56de65eeea95ec0e301f1810f604a21beebdd0f31ad44d09c2e42d0268e81e1f1fe3da0584856a259ab0dc25e6b1f6a09f214f8002383cccd4c8545d35a4323c7b6cdd2734ef219d5730977710683e56b616462c6163b7c55ec4a859f2e58a3fb404efd121884e86f5330f5ed406395e181aa69a18512f96cdc73e64e2add7d79e8fba584c033875ff7c4e45d374ff52a6b434be6a94db80ba0209a9ff7a7b79227d905f35c7ca5d075aa64b1ef05574eba17f3438231f3152bb630fee71ce34f91dbdc42cf5e9ebce79b4a3465d7996c5671702e8ad3e2fd98972a46bd35c74363561f741d6e7e13b4155b8a6e8bbb7c747c3a13ea9717068c2c969afbc9b6c3c6fc50f4549dad27cb5a781984b1db8b46f6765017f383308ed1dea93f029a25c3e957aabd0c784ba7465a13bada14244645ab6fdff417fe9a9c46d61975edbdb57a78b16e863b3acffe6d4de3bdf3950d37e04e057ff0baf9d270fda0decd86ebfc055ff636ef9402e4d51fe4d933a465879755232f5431329f455070756a619e1d22754081a33eb53963ac0e22e6c509337c14b7dfa7d07cb091db3c68e5f3da8f2874a4b168672b30f4b9879e9363b5c0c7665ca72e07ee85ed011b70a1b1d991a549dbe566f85cb1663911038bbd53a5fda86b02bd797ea51e4ca5ef8779fedfbc619a472faca748898f36fdb992adf8d08716483c022df23a1502c961bdec439cc0002dcd5a18b640c97a6b8cd596cd375916c5e438d3a26ebadf5b6f152c9c1a40e82a3990c112b7a7791464e79bbeb09376b1c350620b24721783c8d5c15fe4f4ff162168f5bdbcd7b28845e417750d99e100708dc5fc73caa20b5ccd2500da0e5f37c3ed42c2e00fc319516bd111a94e1afa908948603e37cf45b7172210b169fbf40c13f76d1dc6070bb177011945dddbd8994c10858fbd093ce6a425183751f71469fe5790e367abac16e0cf96333f825de7ace218f987ba7bd94447555ad023d7db615cc5e9cce0bf506ed150834cfbae63282c3a2e45befd76457008d14656331a9fb39bacb0a96577331b61606a53933e61371a959a4405b8a95207a8d2deae4f9c62e90a1140f59381b3e7a88034543276c4e9eb864a055c833c319505ff8a3070d0e6f53db3c263b32a71fb73fd17245833cb6ea75c3f003ef76f7ba425862af2975042d78a99454887076036e1fdeacc433a2247e7095feed895717a55e3322651a293af704ad72f8a7eed2050c40f174a3e8751acf0dadd39151373becbb5156d415e7caac417a59aa3a88b5ec3306305415f5e3147d03d7118171d2d02c2d7c7e95d00a51af629aa595122b9f6136693dce8c8d1d550dcba59bdc942449638ac5add2e4478e9446583ae0af8db80ac45395b1b9db7ddcd3f5f49370366bca9b29ff2ac56f3281b2950a5db2c38a946b96995f562643c40e5f6c53f927d6e532e098c2262fb6697d5af702d388484cfaf1380761e1a880d59b701b713ca6cac64d014080d48b78e1b235f99d8d1e8ee1d65cb983876a6e9760a98ace227091086aa293a2ec2272471a85d239533bd10e5672ab2f2e83676493c41174020da240ce4737062c0b8e7a02bc0541aaba052e15d54499cc7016ef619c160f7896c0c9ebea4ba67b3427defb91d6cc248f8ad46ea18fb74d4113f0ca14c6902a386b1e15d22b33a07b90367025875af96e78e8cefa69309d3a6365e3b0ab1d30785ecd97ddb40d7f8d49183a42d54c6c14b0e16951eebc900198a5e4434a159d3accd55c66fd824ceb694b97e73c0ed6c63126942b5fda79f9af7c78a8c6dca875fd11972c54bf6551b88f568832550c79c806c5411433c35ec80edaa0eefd00a91bb3d87c3e4445be3ebf43e52d0fabfd24dc6606c9bfe05014173ceb0b19b432535c8e3de6b0b2f785953e24ecd6352bc9d1e2356dcb6cdf1a44af69854c00333c5aa16a875e42e1ee74cd5724ec92349462c1dc533968cfaaec459888b120953816a4b90ed8b8820a06af0d59c8c90dd4584d852fe816f32e23d9aa6ff237d373db2986d31d6d8ade427cbcee9cc97ec8e20d9878d845e4250bceb676ff9bb2dbffc23f06090549a5c8689c6907cff94b9d24e7c1a63feebb4fdc929df88b79fde4e3cedfb915782e7c89dfac00e8a52ae08b3ea5120333c77a80c1e8d61a118d5baed9a963f47b79573af3cf4ffeb519b7f81a84430064e6c74abe935dccec05394eecb458557094420789e5d00bab464f1156f43a1ac50c2ff4843d15604796e01bbce3cef6390992fd28fa0cd0af9706ebbe4118531f374739d14b653cff71e308dc5cf2192133d7a35358c74fd99b1f36bc0d69384882f461bc68d3fc60ec5a946b62a3df769541475a426fbbc1ad7d1b8aea0ccb1f8418b98f999b008beb67ac9eb3949a9a7d79188692aa4e2dde822f6c7731d2930583a1f6ab1b584d5d24bcc6825816d463f99bb98a3d51126f0ed0a140e01a6aea0e35f40ccb4152946bd14a7f26bc9d70526f0c2877d6013d69fe5972d9c7bbf9165b05d1ce7ccf6bbaebee20103e20730e5bb14c49c2af52b46156256b1844b09dc778650a995448206da9879ea8486c9872f459502fc7cc6d7b4adef412ff3173906d26efd70933b3ccebcfceac5e7509dd36e635dedb7986eb870f49f7ab1636fe4654ce9eef4bd08121e3c484d591895d097626476a43c51e30526e0272bf96f9c52623c66aac5f64ba74c5ac3272fb0c78833be7d4dc307ea585ff555f3eef996a620dae2c64c303e171a2014020703849db468bd9fec35f119be09c7f91ea1ac054b4bbd85717a25ffc2bf6d352801f77bc28ebe138889c3502682d6f6b5670627e0d2c1352dc5cf8de3793a8aa6430ab1184110c1364e7ed2bc61285c67f19729b0118d2a81213d925dd63291ce2289a618a79420594faf63a0c62d177b1bfd0e122e97a862a6433f94b61499d82a2e8eb04059c9edb84ab9199c8fe0588c5c9fd02f01d0efb5335491bf1ee5a394bdc4e1d553da952a95c1ac6ee9b0abe9f9363ddda229fb361d7f662bbe8c83624053604f3239e073a8a6e450a857a96ee8c7118f3002479b792c4ac0633bf30251e4ae5f0cdd5936e631fe5796efb54a51f1d05c46de7400cfbf246385b8bb5f3b60baa12a5f892a3966466f8d74ba4774be4bab8a0eb42d3544b2d10dd4ce4e1bab2e481ae65f879292b0e63010bc8a4bc3cffaf79eaae53bed65cd5410c543d0b7a1fa20ec78514b2089a7ce7e2d2bda8ec9f231d5e69c830bfb23882afba1bb977ecd44368646e7be8383fdd1276c7d73c53bace0c977213b12451295ff7cedda3cb377972883350766b15c7181e154c308fb2deb9176c1f38e1f99d4bcdef4fd0552c4461db2608620b6915b796072a310f7fe620c6e8c4f2d79c3227ce5785f4137f296d12993c7be912ac8d53ba22c04c561186a5085f1a229fe214dd883d70c3a0df47eb8898f29e9ec4a15a5c4a25931f1ced4427e8c25683dff6f9c60a11a81dcd092f195e083a8ff0de3f5e6636507f237bc63f7dbbca98a567f9ee6c5ab52217891c6bd03efd932d7433298c038fd3e0de5bd27ff303f1314a759c6a31818897ee6927e1de722524abad5d4acb3ca8113f6653706207298342c5ec0054b5601fe112038bc59f54e04cc76dc716eead9fcd015c2d074980341c7f3fff4682d69bac50d936caa9a20156976ca764e36c07e966c5941c155f3b513dce5d7d334571b18c15a6ebd01d29abec613242c24f4afa41a0ebc1193863ac9815bf5f736004f0f71d7bd5cbd3b45c3a98f12f313f97836cb1ec7a4b6b17e4fb514fc150a34a510692df25d63f46fbf563435ef2cf68a6e94974845fe90e7a8222d4909bf79e28d0c540b26469e78878c55ca4924a47ac23e9c063a158140c1301d8bd606cc635fd3d8dc6437d16f0c2b501e50051ac37b2b29cb2bf5d25ab9dabbfac5a32419d5fb9d34748550187b54ac78520e561b0ea42e9eade78e1783944eaa3b4dbe0dc5ebfa11c0dd3c9e461c44f1d10dd74bf477e760a73dccf54e635f1d531f726f42c629b0e972229840ec0ed19381f263597a3f2f2346449aa15dc4fcd7d74a93a1a7e9ecfbf87979ae70601ac01425c16c0e43e61befc66472b874e2e7f099082fa3c17c1f1e3e646756e6d10057551c9fa7c6de2666cdfc622f400f023a2887fe94156c20de5cee9821fac22ad18fd5000fe9b6925c11f84f8f97b4a683a669dc0123ce4982180b82e47616928736525f1ddf59766dd6cba9e1244df774373f3adc9fa76604ba20a8bde7d7c1d24bc2abcd8fbba58f326e56e69e61a3cd8e56b9809040d961ac9b4813068839d31f6f3c67cdfc8d19c8e2ae5945c99b06eee2a1c6e564d06cd96cbf5cf1e74797d5d1b208197aa496ce24188da38f95abc8996ddc0e12ce637d34e8da4eee0fb5f9eedaa2e1dd905ccfdebe02da1dc8d56861b5843f8e0fef711eca21a17d1c13abe76092d179490da4be1e7014c867e177bd40bcf120d64ebf379946be80fdc4b27c7d4b4f6e02cb89d958b9e28fcccd08e2e408bb8e6b30b3c0afad2d6cfd749d81f2c90be43b092a37f0d334c5da35435b0204e434e8969b49bfb237f01e3f4b853e37ea921fbcea350d6f456516d5e23571d0a793fce8d9f1535f207d7be8ee037234aedeec973002cd8f7c21241a60051e14fb8b511c60b8d43c8087155a512cd4cf268d369d7a8367f97d3cbcf41f28d725aa5723c75ff430649852b84c3998e16ec5cb9e069ebfd901306d3da42f0434914ccdba065a97ea301ccc96bbe2cf5f9c57ce5fbac21ad3041da7c70f725d50f4a0fda4621ab0b37b4005e2844958b8790c1fa3866df3ec28b95ddc54355fc9981710b01426e8624f23b30da876b30057c8e63256972cbee5f44b702a968df5c4c6f6af24954c3e9b7a964315b7e8950f30b0e99c111bc0bd964a64e9900d15e180da9fc76dd4a9b1bb39dc994992970ceb8226230fa6d0ed4510a77ed78f3aa21150aac3086b3f6cf65add858a45bd3f9f1e6210ca888fbd5282987315061ff2c189955351a0d21ccd82e60f8d32f4cccd21ceb34172dd95919e5e07b6c74fb2539abb5b3c8f86df0cf6f4afb8fc5a18cacc55810e39198cca137ff64dc9c08322dd8b0036d5d4663de0a34b3e3d3833efb35e48143c50f51bb3cb92dc94db00f958d6a0f924c2d119018e35316838af9f6fb50b530a976ca974adc4e09513c8fb7d2262a41449d9b30cbf19ba78e42dd7ac8a2c6ed201cda83363ac1abacc3ec841b053b95c6066529c158f8157485a5ef7eaffcf9c802b277fdcb6f6eb023dbb0b038a725bce5e37313685c5a0bed78894d99d9c2c891edc63efa7804588909e6e809f3e42c4be8763a5ba8ff30d92913a07205f7f8df1daf4c095ba470c8a4ec90e4b6e06ca13204c16a5395e6b66dafefb1990910a508a2372af89f743f514aa8b0d5e1ee7431b40a93d8824e1bc63353a1d23e61f3abfc6e40bff4b16f7165ff1350a797af04e68d00d4ddc0df990d6e7a45333955ddbed9970cdd98440249766cd0207775540a800847a476a6c96f8d37b117bfd601544caa8c9acf9d40d4ecc0912cbacb88a230a1b562d549f0754bea1b8f4f36af3046c5a3d2233482cb9246c1da8a020b3eccdab135b5e53b7fe645a27c89ad7ff5d7b067fe6847647eda26f6a352ac6afd237d9a0b24e739b6452348d7acca0fd0c71a02204569f505e8fc8aa7fae921bb3e5ac4d44ea8246fd639743868f79f73727683e7840c56ff63491c390cdab0b439ab3d8beb8733736621920a9c8f8c3f3258aa1f0acf51ff043d6d62e97a145f2ba47bfa3c07277c939602bacc9183daf2cb761161acc316bb013fa4bfdc189cf55af3de777175bf6cc6a1e786c15486d64c51d149be60fa8bd5ec0d92cbea73e252f0149fcb2e0591af34e7e20244e384b36bd356c1a615550252b92d35bac66ad6b3509b09d6527ac227c481548a372e424b9dcec44ff1a2de66bb197508900c62836e869add3d83aaa4c23b5bb2194bdbb78ba0eaa8a74c0ce6ecb1c2dadfb2336f8835790dea852c146a03d9009e661e8210cbf62d441e31058afabb061bd960f105a1dd98dcdee3894ad6608fcdf08156b59ec84d16f48f371cf5f639033ca3c83dd81702aa2ba351c51c4078441221bb5a8b8704ddbfe4980cf82302b2ee18be4109920bd7b089b62d458b790cbeeabb34978ba1983370b4ede9f7ac613146df73663d032e6748c83be155c73afb43d031b6f5aaef21c9c1faa8f08591a8665f2691bfe59b44bee7175dfd99d167f6305941bc578acb1a620ab5062be68b05422f629b9662a3406ff62f0ebb19e535448f33cd77bec563043362ea69711a5cdfcb83465d0e195a0749c4b0f5ad5f2f2be0156306e5bcc605a2f9ccca3a85c1f8450297a8b464252c093a5a9ebcc629b97473f57c9243fb778423b66ea4b8cd21148c12db4e4a32bce08043db5193b697f67c30942b9807c1950132edc8059e4dd4324933cef2d593165a6ab89d6b144f03dbcd6e1e3995ad127b2802bc1f4a30bba4574f6adc1ce46f3a67ca563ca17c61c1605ed3b936f7c35bd2482e052fe5d20bf7cedf57f73eb30e0246e585d6ac1a15282f277527234bd2ff0f978bbe9b03c2e61f9b3ccd34d29b876fb97f2b7ac1cdb40553e34e486eb0369de5ae0d4cdece4cbf6494fca955d34812cf071bf97bada417ab003fbba989e670c456f1ba6b99ab6b2de4e07723d42239c7f21fd8ac096e1b19f4c988c8dfb9076e1fc37ee0660ad261c48ef998a77f3b1597cab720b0752f86875ca762c5ba5dd1d4133d75fd536343a4c6de2ae2b833c99659274ea1243e8072e1e6a737db6228562f7d70a2d93aea23ee208dd1f583eacd927b665deb9aa56ca1f6cd29e3a1fb91e93d2b6d7d56de33aa8f362ac3dfb317a01007edc20cd395eeacd82338c1fcd84012723ebb70e0fdc4718dcacd072b8044102d362d286310f8bd778b795279b1a5cba431e422b4a7d6b9ac396fd68f3db253a2916222c96264ec37c7f483c15b4c104403328c1e4a6ca97b7476d7916191476a8e63822a8f7c37ae7ae1ff357d19cfb0b78149ce6018b9bec3eb68875ba80d06f3d0d35e1b92a455a2feddc6601d24e786a04210eeeaef565e617985c523016baa94d28aed6c7de248563d26149931b92eb824f501ccbb9c4a4dfde85dcfa6bafc15c38b43ee1ab84aa7071f7a21cf226ce747168bc6095eefa076bd5c0a2cb29301014b235fb1e9ac4606e952cf8034959ba3afe6b1c41969e91c0bc983218a6f3a70c8129cab3950cef3238acae55b5a86980cb354105abda77ca923544a9b7ad23780f84139bf8687c7753202a53d5dfca5440d7df0a81d789f9fd6186c3935a469345763ad8b8dc97efa797c44a4ef38cb3f8591249dd90ae10df841af590f2d4e94d5e321c2797862ff8ddc89ec65b39b6b229790c6a4699df9f907ade6edbde5e5d40e58ac6f3345e8afaddd9212af6385cbfd2ed9bd7be8ca933a3a29ee5e3aa55930d3c47f6013c194c730c95f17cfe01f20e45e3631871bb6ab649edf985e00e4ef5b3d91acac8342ebad0164496421538af63a0c0dc0debf391d06edc81dce26431a0104fb8db69ef9182d6288ddac9175ac0bce683c8453a88e101b53cbc1ed7661f79bd24a9f88f2dce4d3fec324430155d98923399dd8ddb8d50cd635e0acead372d242cac8439a1a8a8927b7706688f5bd76d762749bc997d340f9a77827a5707392bdd1f2a374730254f7ccffd1609f0ab2689f44304095acba53eb7e22fee895ab18bd83d1b132619dddae7afc02fdeff468534ba47f5e4ce8eafaf5488f53a031111d80f187ac69d43ba08e72db9c27e75fb7eb8b48ff9f0b114f4caa425439126df7f8224cc3d781436a315438bb1ef07cc33d0344f23f84fd88bf356042b03801ef266517f856c3dcb251a96cd70b22a35b7bce29d7e0c49f3271bc0e589f9a3a24934b2d5694a47a42cd82d89f7002470207d41b670738d096c7e06d555c85bd9ec0827762efc855e2db5c8925a4884346948a6fbd896ece0d98069426985d065055198ebc975168110f85a39b5c5d2f3b44efddfc38d5732c64e83da2a33f8196a925657cb6421304fd4c6eeb078d941480ba7f921d1db6b7c17909cd56889aedc7e4f48cbeee4efedce1aa372774bd3eb15ea91712a4ecaf874250ed28c1de68844ad258c1d34a04c65436a7b5df2a9ee999b7e6a949ee7df29e5876aabc6faaf41a52c15bf9aaad6dbeda38c3efebbbcd0ec01b2ff373ac0fd0b5719781f0ea7f917b83285b73ccdd5524a16dde0ce0aa8274527253e89f1bc8a9945407ea26bae6ebc50dc8f99eded8df26697d5910a27f579a21241ac1e7db5009365b5cfaf18a8c6d7d04729572c40bc1b817a42f14c221a9a372333d49ae2bc56ab4bbba51c194afe27753f70c85544bf395fcebeee60e6f8953a4bfc7713526433c13f705ab94a6143cabdac73c519c09b135897cae68ad65b3ca2ef15bf0126e1d43873e13dec4a82b8029667b182d3a41aa5487db4d154be8316e472ad24b866290820ac8880ab98a754678a64b211ec222b7f82811c6ac5fd984b4d1df80003e65e6cc617a3ae61de55d8af3b2557220efdf42e18636ff34129543fc14c6483beea596c96e2f8d8036bc1e22bb6b2a15569ee50acefe5f14a5ec457a8ca7eb4ff41a1619dc7eb90900dddbd4e8a21d087e281834f0a54f08a930b3bf90df282edb95967e09af9b6a9ca46bbc6d0fa311b9a9c1f0807774a860926d1d784b5e21df7daff6301479ebbf48a18193d20987851e0af2297def87a3377f8f761f9dff4b711e6a4e7155790076af7fd4f9bafb9e8c2c4e65475462021a63f1533d2c886197f21ebfb10140f94559e2e3a9d3b5275032ed356cc464a71f69a647c9d9bfd288aa2f65135f79ab9295551289885ed7ea5426537303a70820e4362db7e9553a1b502edb03ee47cae575ee4a47341558e91186013e37442d9f9eeaa20067e93fdbea3618f9d9d7ce3ba1cfc70d01567be791f6cab9959d10f927b07950227a31fba90d56e5845cc868bdc48ec2675b207d2928571f53f50cc0ad2c5f31207d3d269af42f81e4ec985c26997ae7dd5a124c895d47144f8e3a81d8d7dc2c1526a6bbd5d53e3f989b6cc8af8c257cbc0f9fde3fbc089ae1e3d15a78114fb49147cd5bbf1cbd676f04709a9645420b1b36fce48ff0867c53f34f4f2e2845f76a30c591f90a6550f8b48b6ebcef7d19e0150b104272126d08b21351c8ec3adb16acc5ec09bfaf2a524eeeaced57dcefcb5fa2d176896bc47569e34160dc4285bdf9a755ff0dd27912a2e82be8cb5aa1fd052c5ce0bdb2e81e269424b8d3e8e0f95383189cf3a6bbb7d133972d02948bd1550f844bd581200da4e48f4b452889a6623347e91fdd5fa93d9f287407e37a1b0819af80a97bba4079bc28108cc401acfcca09d15701e16edd318ae5d760969eff2ec26ebcbea863618ab1bbf48075dbbf3921cdd5f2f16b01c8c434f046143400e5857c8036197e58c2ded66c25dda948c13143ecfbf5878fe56f752756a9a8390fa737448718ba3854830fc33975dbb52c79c422f469d716cd510fc50a16d7bba0a4341d67bb584c7cf3e8556249d595cbe4323ad93ac3af34882cbbb2e3f24a395a0d9b126095566196adcd2bca0e9a1db99931725bf48fb96a773e0e0f30c611de1f850d602961d17d8b23415cc630a848fd18ac572c6a4bb5a7af97841a6f70c21b4c74a05da571253bfb9b4416eb8868ecc3cf2bd6733c8d417ac418b0a61ec55f2110030b7e99ea1365eaff56224c061319a1257bb40de946bbe97d02c02bc540ac1ca852702d32ad31f2029fa7e4472dac31a09b2047e2c12a991a1876e279ef5523267a2f25dff580f0cde4aa48a59d617ef8033abbe9a69f703f8012418c939cedca9c5457ed4db1358a29003cca42914dfb2cb796d89009ceeba1e42182f02fc6009565deaba895cfe4038877dac5729d645ca02a363c7125fffee5b9a848c345f30e0a769eefabb21d036203da6c89bbeb4d8b92aaed744eb52b0a01ffba8c9ee435d5d9a886eb5b70a701d3b528c49fc4ffe66c527350fa7d20acb848b84a67f1b64df845d86cc2177d0e6929df981a68802987277432074abac0ede4804417e7963c1adcd643fd52c53aa47d68481fa9d5ec70ec150af8d56a4861fb201d96d3c9507c9c78be9579c1935e8a7f1400870c88783b45259dd24fdf24ae0d34b75b3f5283e3930de826807f7cb3f32df2e45e4243332e3e4694a3bdaf2b8320eacf5f8ba947b76afc1b4af5bfff5d58bebb7fd28f4a4268735f23d39a37ba46e877977c24f72e422dbc4d37d7a9d9f2c7c9c9c29a22afdf783a7508e07b3ece0978556e28f1af0ed5b4f874cd4be40e2c051bf84bcdf40c382223ed5c45ba5128a0982ca4a53417ee59efccd1e93434dc3cafea44a76a239ae21c7ea2746b7405cf341c2502c40dbaefbc2c4514bb5c0d24c60797c033a70e4fcbc62c3ca74acee4a82fcfee3a4ca2e41afe1a805ea40a61dbe837e44e7b6d6d1e6c2126ddd461b88744cc010e0c5ca75c0b87c7a142daabb7404cec9a6ab89bf9032bed44aa51c14b6098bfa116549c3829314fd19aa227cca7a5eecac182656e554585793c3459d1745102f848152068d638d34912896427419d152ff18235fab3c28a877f97ccf51d7411ae8a27b1e2aba45a3ce36b8de7096a761337b7d91c570c3c2c2be8e3465deb16aca848f8c054525b11752a3c3bd22610fd3c2178bbf8e3d2df0c0ea0b84ccc146e8db37134723455f48c2579fda228535d1deb2afd2573b30ae75514881c8b613789cbc1fd4fc3be375997010cd3ec9744fbf0e98bd2a30f0ab33a0bc1ef3ab8199c3de1a68cc3c7c81c38bcc079f95ee28602d0fa38fb08708986876c44a2a1455fbfe952ccbffa28216e58c42a84bafff0b099828e21302ce95b879f07b2b997e4d4e66dbeb5fa94edda2388c1abb3f73a325585cdb6fba461e27134b6271f9c27bda81a17dcefd2811600bcd38e88a0a0fc7219fe32f182c96534b72ee7f376c41bf7cb857da3d57c9fc11c63bff5fb4fd63173e4f25142ecf90d03418edc9c72f9e0ff68ce04c2f9e0710cd281466b8ceb96f8f18bce0ab02d6f6d10d3aff3eb709acbc5f9e77e8991fa458d8c5c9e123b6d65d171d6c846e7d562cecd5bdff77018f982968b4889501c123372d96725e725ef17fcabc618f4d91c92186c94109d758aab1ceaaf03d5420ebed87c85166e4959661bb295c9feecd3aa5df6ed5d7b1dc7e88c7a8fe01390fcc173056dd9e894c5d16f82b4e02a9d756fb33d894318afa92d2520baec0adb7555f397117cab1547100b508dd4c363e1a0ab6b0bd5b25cecf083fe38c9f90ab21aadb2a887a37f8d2e73dc4878581f5e328bbd5c1d9b32a12aeff30a0f7e64109eb3b077228110f0e03df8037e8b68489fb7ed10d00dc03592dc1c3c3d67dce532180c47cba0f1a8c877f866046065c06e2ffcbc6ae26742f46d94c438257b123ea77b26c03401cfa9ee085b7c5444311190e798ba400e28e5c2ffd656e035f9d7298dcf2ac8af82afb87f4b6d623ee372ffb4977b144f6312ef9787c8a491634925403d3237d0aad369bdaf822f08ce1b3f3d18a569f284d176b03182eefeee53998704edc54c030621e8612bcffd0358e6d69191f7e3c4c4bb2a0f330d680c1209f272a0139e64e12cb3c960f51fddeeb7f09d003dc4c4dc5aeba6c8681aa8a869d72b8f2606129c1f36ba483adec57d789e03f8b5b60ebffacf6045567b73e47dfbcf78498ffe27388886e430d4561bdbc31772a0555935e5cd9505cba586da6a514207a95c5fec9d2a1d1ef05765b9566a91f0e18bcb47c992880fdb73a3d2d2319fbb39003e6227fbf338b6b402995d41321fb55b0f5cd763b28a2c421f29d789fe018388e29620535103826a622a0f5d507c9754b3f93caecc8cb90c10c1645043b6ef98948ba0a1cf2a4366dbf75b25d6c352c674ab4763d6e074680e81bdb83d6cc3c4edc34faf1ada4cf807a51cb12baa52beee1f7a78878bd3e7259ca63ff305e80e32c918fdf3e4f28bb051c1e5fbf0a8e0fb4502ab02ee24ddfc1db2a77ca34188d7f42da3786fa287506e416c4c894b0e20b20435c6abd10d4bc51af59587aab92b24a6dc539ebbcd8ad5c05d5cfd5a6bef5dfd0fcab20cb3768f25a8eb41e3b20aa5d09ef2237c3d94b76124ea20ed09ffb787d916ef68f1dd1b117aeb1237989b7d840dc5ba02cdd4935bc44b91e245162f25488aa159bb1ae2540f5684c69b940d266b4bcdae7a342e8e8b8052793df7b2c434f2907fa137517767d528f0164c3768ff75a1f53ee712f60b463b4ae9985c8a9d55062a0f5aa1483e23bca60574183e490cb906be61330b33728387ac1620169fb38f987e1304a702d43ac9d8ddb0cf941ba0cbc41a60b1778b1784e2b9ddcf25caa81a84d2e6d3ae55170b91fd854945f738c8e30b8f540ebc34926f53c1230b7c9ffede3adaea2fe05c067ab3f3e44c501c14d42737917deaa828dd571e9ff3bfdfaadebb74708a4c55a18c204cf0cf1641d7ed69574b81743bcbb574c200dd2de4b56744a9a850acd9552bb511f1cb0f2e145ea1ad4888497395b438943662f8303ad18516145f29ccb9b128420a5fa49bbb050ff695142c5b9453af2b5cef8342e9163f1c1abe5d8811d71ad1ad57493fcecabba6de3d49d85053a18b30d3c4c8e45b59b1fbd74a815dac3956cda3c5cbfd1588a6a600a6db0597a774ba40a2eda3e6c7d6e7098875ce333af674e5f0303a99cc0dc80a5e86280659ac29dce04b998abfb381e16b0829d70a6655d3f601e3c2c50bcc4e424aa176d75fa004b604f058a01152b5792cbd78a15f27ef4b28b95af3a8a6ce76e29f218052094957bd5a1f5e9893de5a74f8c3f7bf26227525fc99ad1918b4b899b87b135935b1ba3d3dc8e0bce60eba315f3f8e781889f77e017663f12ac8cded969992657b683ae669cad7150c9a4fed88d4a9aa2c8a0a3590d5db71cfcb1974e67c31360d775d77cfa8489a169900a7f492f14e403764bff6c502188be68ca2bb5aec75462f91ead2201912006a8e7e2084af26d4f1dcd8a8b38dd908584433994dfd218698f7cb5b5bdaef528fe5b4dcfa34b1faa199c0070cd862908f1dd7db0a0207d8587223efc2126b2ed67ac68625985dd0b60439fa56c74b83a0c5617a813e74b258240736a1c53e5854590fe206e058559bffb3728a42e01a8ae3875773f5e474aed216cd12e177fa4cbb306eeb685a6b225df7d645bc44d0383bba736d0d2e393fca2e4212c759be0e5a02e497920ef442157696985a7a2e317f27550301fa84cf7689dd91e838a754de859ea891c0eefdf2775c80c0e455fbc3aa907a880d7be059d8d288106a5263891e207b4e0eda78c723d9d1e9d86acaa20ad4eb6e0b556e09c468f045aeb7815004939d04516f4cdb536d107df087862c568dd67e822cd6a9c8f8688c674c678b1cb2769081605aa08e82e819305ab2b67155aaedce425316533552a8aecc49fd11e9f4b1c516694a2c3cf31abed45bda039e336e35e505078ff55946a4b00070af2375ca88bc7928c2f8d7a87501e6e50b5770e494b1a7dce5e36f09baebdf350d65101349d534b7e1b072b4becfdf1f35c8977c127b205205c3d0e0b3b9cc2a2e1fadbb2a7128b59235ca96b39a4f59d5a30345922122227ffda1ddb4b0b747a64a16deb4eb7d84694e0b94b2839e994b2649393d184c22653fdc2bc06a9cefd3c96dcbc71e3821ecc10fa5b8b86243964dfb1460801c10bb83ed13d26c041e15f1fa2a8e2a2973bc55594ccbad327f4dacbf6a18c46439ef9aa877b477d1d34bce3156d38f29690c9a657d4b1385d163df91e935f540d8a59ec57407336017ed03bcefc1b5baa203af0e608c0324d50dca0c42c5a5de8ffa07da19b0d3b0f4fa2d4d3eb8827d1c5d25ffa8a3a8dc8fb262c5bf50373020f989388989c97fadc68679d1697c6427cfaae4a454e3168e9d9e611509d766c14189a3b3e49c21a4a5f1add3e5d157ad42a09443cfdfa5e36cebdb2f27803663ac56e70547f17628b1d86377db9d25ee67ce93b0e91b41e7ee5a20be598577c41e7fd81eb9edfc2329f530b44a9369f67afebf6ec2d9bb717e4addbc1e9c5f7138f51d83d585e5c2dc3b11dc19ce81440c78278c9cca8d3cf80c6ca6f4a0e66c76ec9603eccb861f4114f07f19bceef1003052bd4d73ef4b6c237c512c0cdc598347ca7f1748fc546ed0e76874344bcc30266e24596fae16563bd3f24fb313d051f76fb64bb9c2b1474a99652767cd0b07855a04868c041feeb50b800bc5ac3a120f7962933306ce9183668408d59ddceed83db4be31d0ccacc1b7e32a5a7fab27a204ad2a697732822c35e83a3f733a78092332bf90afbb34698136fc655595f6c7622e430a35e1339b8c4a26db3a63cc2174bf6711486ef254acf67d8fe3b141d08c21d8f160664ce4b7a058ef162c2d92045e36fae86eaca44ff3abbea88d11ee398063115cb193a0e4eaa28593d6fe0c2441bb01db7f7a3ffc8657c69893a7e8fab0b4d3aa9b6acd7fdd67222bf19608fc4b752b4c02b08b92bc497f12032c1cb4e9bebb7c836b34c4a36041bdae40fdbfbfdb1fe908e1626c85cff888dba04a3df5006285a110ff1e218844305129073ea01944250c01e4f95d88898c7563d03371d34c936913bcb219a0db40e91ebe8b4b686eefc572067a83e1cc7b707fec0b8ef23fe3e4a42e11d7face8587e8f9a7bd8bd000c9001240521062b218b24657766db9568284d73fb63d37f0af280bf11fadae1c681014f65c65220b8fea1d17a071f80b27571bbd2e5301d8d958b6bae46fb6c8be58ff385973c504010d90427be6f21851a17e6adbae5b59f4724893ad8006bb67df855ee8cad3ba7cd9f20e3b5ce04c8f00b9f7ccf36e372ecb4a7b9c9213faa67d6ed667e7b6230e809d04ee1ea83076e0e54d1945fcb963a433d04007072fdcfbb7e17daf770959050aa802b8bbad04c81bf575859b69df76c5e01bf84b5a00b4f931478c400755a006cacd5c1e5a3b8351a22e1c747c77263850a50c54b75ba8f6b2d095aafea398240f72f225c83b384b06a275df0c5b67d7638195fd4f30b66137b401cdc961a94e03212f69620f7012338d8ba719fb504d67f9a5608a5fbc31e5e79288ac343fa6a41a9d6682255ec4ead8100c6359d2cf20d99dab82804e15f298178590e1afdce47d8622f441626f05c76cb79cfe40c31cc4531375d1c500d96c657e6ccc7ab3459a93f4ee5196e4681ca9e170db56797042fc67ec0e29d844ea6f741a3a89666f510b411fcafcedf6aa6741e268beddebf5e54f993cc22d2914a15fa1f3b8cdc37b74b0a8c2c2d935e1daff3492c1ceca2132ccbe73c2c336f827c8c3d709614e9f5033d7f2e9ebe5ae1acd5a96bd3a774fcc7e02f6a1f0b814a954ef620a3a0f4ef132edb70ec58535f55152387325d5e028a0f22d4c6d5e56c8f164319691fad2175c5b0e943debe332ee4b87fc4406f7270e48efba07e5ec8b9414a92b78b92136e4292266468acff0c85e0d819b111b8041edf912de864f9853f86e4ab2b98bbb3f545032379de6600c527984a562a90976c82d77b77183b4604c377988b5574b21f91f158a99004a723d6a26a0bb5f38ce729fb71753991c0db0e45920d3b57ae07d03d78899c29ce2f188d246b65c034065e8801dff4c75ad5541fcd527a421836dc0e89df8d2991a5b2c3382bdb5a45992a77c46c4c50d5d572bfb31eb4d9d1f1ea4a62808b1a54398019ebf23e97716ffa196b3422f7a0d7ad88bee7cb2106ed720dd120be458dc14c14ca65b7b734af59e2bc51b93a6b07d09439305cbd9a2c8cc497a48a35228f3839c037c435b0c14e53ed8ea0040dc6cf6e6239618be5cadf4341451ee85f2b395342f7afe4fb00302a37fc739d7c9ff0f2e5a085881dc5e1ce09f428c59ec7aa0c44b0acf875cc4b2282fef3d32fcbf03e2cc8782d0b59ed50638f680cf4adace1d10ad2339770990d1a3b32cd08091a109f2194594ba5dcf0a5951937e794bc053d7f3eddf56b7ec14508717cda73bcb2cb2a120117d37f37f53545854608b050f35f0c5f7d6ddd800268a1db5232b025861d4b4e1b71178c23ef155ae3fa88607d03723252afc2c97b3aa8d22607a661e1501731d74baff7a4b2051d2f2d414aaf30078a4019c80ad90afed9759baf44aab710cf4f609b8715fe9a6f86f0e816aadffd8cac079620f3b436e9d802d7c29ea0b650079752c781a5ab43ec1f4281d9f57860703b1321b15e3882db9ade9fa1eae01a753dc079585194426d948e651440d9c5b17da6ae763295a3de391d6d731e6965889b67124c2f303d1b48c3c959e61c18553dc9b50839d95e2e13d6a9d343fe6fe9d593a6036c9aa0db32b2f57709508de6d4afcf108dd8ed55e13de9ed0e412dff5acceb9261723c5ccab92398a04897c9ad0310d1cc99c666ff5b633fbea6f2f510ef872e66add673283a189c71174b867b4464f595b7577d1c10d8f7b8900971667ee74dcd5ffc451871ef8d0270e401ce425589030fd929c8944e682117f6b0deb1afdf68a8d666d32193384ae07707e4b647a55b44f8ebf7af267dc4aa9250e81e2d84c41b2995c24372d42d74b64940e1b59a8656b89fa1ec2cb923cba86dc94baa6b32c98265b89ea4b53ce690c37297d768d5a548a3773199050e356d2562e4067e4e45f324268fb95e6a244709cf030c0226d154d94157b2486e9e53039fccb5b36219b170b4208a1a578a5078eaf11afb36d24dbbf43e292f57d9f98a29555ba6933ced4b183306b6308dc8af7eec8f21b9619d5ab5f8074fe506b4286905e99e254050215f5df4c59b92f925a0d60f72b059c66aa52c42e21410e45d2653e322ed2cde347314b81aa46acbca5b6dddf9115cb951997af35b8b2bd32279910161bf3013d19025e616a84c6ca6dadb890b06584badc6c24742a8a9e55e2626a83fb939be35139b021f012c2cef8c7180639a1b6d405b0d79227afaf8b6f63128ea748134a566918c9ad6a35c81fbc2cf14e0155e804f3c9066ea067c9bdd727d3eaf6d25978f27d20a779cf88fbc7aa6848c6db50ce2f4b1ddceec54013c7809c039c0ba495b240fea0e95d89e8b4579e823918d3772414ce2989744b00f3cd470ebf4c4e0c46e99da58d3ae3908c5915a601786eb4596edc0f989a56e988cf01b74f99f8673774be17629f74f238c6fcdc654e617e6a6602ecf1d9d76027c435243b1347533732c549ac61a4df56176aa877a0c61c322d94959ecdec90b777a5c911fe9423169c82de77deda79ba08a1c029c73ae08787d1d04d44e74ca539bee4364dcee597bf9abfb204e1696aa84499a19e1ca057962d54ca3f0c7fc123bf582e8e980b12782d077000a0304cbbe8bfdb928fefb78427c3f187372c62c7348204350e9511a7f01cb18f2d8cfcdd1211db30fe9931c8d0dccd80e647fa8693a622820e7146d8d2df7cf25651280f8d71b629cf50966a720bbaa57f6ff62b9838d0a3387b67e3eefe4c19997d92663fd88ffda90681269355001442464f9b7640bed85ea5ef68b40c3f0c6e1ecc45d15dc64433092a37fb5bf80337f84c2ce69e77e17e15dabdc9aa820b7ce4f0d1cf79fe930c7e88f6056d7ddd92dbabba009612a5038f1671a3bd6c078fae88eceaad3d10cb9655303dc23d662546c45b95bf934aeb77fcb39b52d3eb22b53cb8c528149438ff8c48bedbaff309e8c490387fa0a35e1d419fee8259d245d1ae0a2bb85f0fcaa7402cd259fd1889c1e20a0914d7485451b978e25190fb512af226aa2b2b32024f1ae5a9243dbecb8383e1e23d1b97ddd94fe33c1fa08a443b0b05bc36d9a6f5abeb541599d4518b0b5b88205c89013f5510c9fb1f5c89dc439969494cacc2cf7e87a8d6246a9dcf7125eb9fb12b458c55074e31f34aaefee43b959d02bf72d06a887aae4a51e9fe3491c21ba4b91166c22366a53c2bcfc1321bed61f5f87fecc2d9d209d1b79096fec10bcbfb1241cf0280a1eac80dbf7363d292001305f02473863f1222630a854fbe78a4314709bdc8b4673fad94cacef7f4a5b27dc2eb57fe7478d1fb0594b8fb1c6ea19a6e37fdbe851c099dadd38975150a0506b435e84579bd98ff25d4510d8815552f88f2509bf395eb35e78f1587180a8a90e7cef8fc99b2cfb9d9a049dfa3257829c5236cd5b88df7d49f0a0f2ab071706042e07edaeb09058010b79a05280f9efc56cb26e3182b25900ad78fcda1ee8ea5d1836c50bdce27e0c9dbd904a836270790ab9c1ae8f21d20e03b09bd369cf6bd7a8b5bbc430b6b6a2a241746d0c90210b4912fe81b21514193388cc22170d3adaf349f8d9cfe97d5e3a23bef184b08fbfeede259d82cee461d5a640c613708137d121150b74519e208ae034ee2b80010984858c539b8867f7715f281d77313efdde60e9ee2119533654fab64e3303373bf0c05537d9009de4a65df3ae9349471464be355b978aacec9dac3f78a546b26cd3d7406cfa129a8671c57f945242bec02bc5eb0584090a9ac13aa698584962f5ff5c757da97b40cb48380e788eedc72a4617be850d954bfb306b41d2a5b868dcf8cc09fcc4751b135037e4289e509b6965d4524548900788f9a8cb6dbefbf409236cfd7b21a36d63f0ac76c2b771f632165632f0a9cbaf4f041a532de0785d153b5cd6edfe9b31637621c633bb265fb3f4b5f356abc05f7526664adcc716976463cf7604c021bc872912eae5948c3395bb6a857b8a8943b246035662ad2cec07e6d33a327d0c54eba102ee079e19814fa447121a403fbc1dbca1f0cdcf5a0eb161393f92ef12c69a4f519a3ee6d02389d9e3b7c45034d64c14a5e9c7d227f8b6a8a821958f8864fe2800c2cde05aa10ea9252dc41742c73a41bfd20616da5be75252c700801cc9cf23ca2d770e9e08ad741be3e5467bc335a71f86d8b600274a078806f87290dd6907f4eaf8a971365e2f09d93c2910b9be711559706849fcb9664d57babd4a75d5ee141b11cd1b08480d2eb24253208ddc926088aace96b614d7eeef60811d65292f78ae86fb7459d5da66ab4d115960ae5296d60eb9aa2ea32ab4e91e855d307a0e1bf5d03a94190f4c32c8fab2ca38e71389d96672b0f537cb3a0841491fee47e7e724553e1bd504b3cf37358726e890e6b87b43519aaeb4219cc3ee4b862de2899828e56add1cfd64c54ee86bbb23a7256f4c1752acddcf56fe7eff9c8d11ec5511ad9f34e9e04d3b5cfd3ba4097d9dca29e48eb64e004dcac33e2c882df347baedd1d770e6f454bb7e23fcbcfd952307def6a5e3487ed925beea7ccc8cdbdac57a31fe9da3b7ed7285b68c235028143f4680d76284467b88278fc25618a14574ef88ba0f6e7a0cec51b4d18bc515bb05bb9fec6c0b1a2ce2d21e251c3b7e54be6cb7c6200fee03ae595f4449bb699019511170d20acbe4e6da981e00cc8527b9e4d4f927b0a374eae14a56e4a569aa80ffc59816e985bd5905bd4cc33f24836fa78530f6660bc03a08e89f82fec64f7c7363f7ec00cc0be2e86c697019668ced60158b71e57d72bda0d28bb01ec3cc0ec75a5d2c1a157968450700f2bbfa9c81e94212f07ffd3342b04b47a5b379db1b2c4f49d18f6e700271c35644e55e8cf086fc9648de21742b10d74f422b20e356067518fded32b00dc6e384b17358aa2b09a15b50a83b91578945c978544d96ac7e7b45050e40d5f05e3b7b25c4975e89b3b1ff9a9ba44e0bc849fc97a598a8b577e52d4c8adf81deeb5a4b2b7f13f3e003837ec6ecab5fd66281905510de86eea2a2245576b1bc8aa7c3af2a437185ef01e83c57ac8d9aee9435262827e0ce984aef68482385cc4803344265ce9fca1dd4d9bf32fbc106e94e7e3478a50da1ee2ef823e5a492d818fbef19608c4e541a760726be76ae500dc115c8d06afc8a072348a693b08ed64e89820b7c2d46511bc222490fc32c2aa01671690524207ad221113694ec846cdf831365f0dd09a4efe6bc04d20e562a2c80d442aaa6bb4b1cacbba5235593124c3cf6d123700c06517d76df5d21ddd48c4c5fdde4016491311a7d0c486db6b430e4688712e41c9a1f99c11bbe4d8b9a7657712180569852f716987177f3967d23175a4bd1c66859715888b533afda1732401e1db98d07e6942f7d9e8581de14782e2eab91f6b73f6f258c297de6026e1086d373000b5406604b81023e0dedb9a00b0b503d95991401511191bf40df2944f0068e4e76cf4574c7d819586c0d1c5c5a2d0cbe33987977ad711bb7f5b5a067e48f43574b7a16a58b70005ab58efc7769d0eba6f028f413c0e71012af66132801e8e6b7d499157cb778ee92b4482b5eaa64d80976a11d5d5128cee725da37307e324d557589b89430d55f7ba2f8e28b0b708304e2753be52e99c8620ad97c013ddfc4ad0ccd9e93df9698bdb9c2cfeab1b09226c6dd63fe33a5d86ea2cf4e2f39fc48743f3d56e0342330cedefa01a573b6f3201e5376d60a6af75204c0bb9483a444c958db5961fc880d4e22a0f8cb0cc45dd72c4bdd790aed470067933851361384dad1241b031ef74a43af8a33a3ce0b482f0b58bcd85dab6c14d824f5f57c8c903b371f8b3900261a07d5944d2c4a82c9cc077f9382f6f2f819297a0b029a76d8e96a6a82a5aa8e8dc5734413f2f1256ff9379075f7b57beaa11d8c61018351f4a58c5541892741577d36c7e911d8b1d9333e984397ea505f9b66fa15f0e883c6b1d992a313e8804fdad2d7178b9def9e6bce9a573802b5bb7a3b6d767a7080ae963e725e46ee2bc2b4662f72f4f58b525ca1962677ad4c95b618bddf596214d08059f7b35d4ee3bb23563caea311f7b0b89f4c1b6e7f2efc3bf97dc0928cbdff2aeb7cd46a2e34eb5867bbe780c3288c7f38f991c86f102b407fd76650f6b9975d74c060cb59fdafdcac93ae6eeed3e79c8102494250d42dd42d8a9981efb4b62d19c7d00bf54d765772b31ecd93bbe570c6abfa4b68bcd678262f84475b8a94748abb5da6102ceda84a63536e3dec94d678e7213128c6a0bc8b81c4cb27cf1b3ea98f27d3e68f224d502cb50f2bc23020e58617dae0ed34f03e058c63c47f6cf442058e3bfbe2949adbd07e5bb046adf642494a9c59a747e4813696b7e94df0084b40731136066904bf40c167af0b165ac0917d4ca1053312f304c630fb50a0cb0445f3da8c3570449fb56e9eb119051ad1a9c27aee630396d8c52315bdd7438116f9202b3aa510d0950bca0fb2c28f8ded9390cab43ddfe91ac29ee83243c15b34d6398f6d607401bcb751b8381136716aca3b5227556d68629d009baf3c5bd467a06f6f7bc42cbddfdc6597ed99a7c2ae4f85aa80804483791c9d5b9900102f3bcee73b03a6bfe2707ff6c0d119633b80acb285088f5b643437763efcac6b6a7b8215a9ca35651a45db95f862f698b75e762b7168424d441d8f39a5718376a5783b408615c25e68f00ec5e5a445517c2b057d99b8affe37092f4ec05b59c1e58a7796c602b37752300515a084d5ef6c75df132a0485486aff53a03cb5c72ea56c42ce74e14a24d37156840c0372c7fa30ee2fcf3d807093c9b2d16e2e267246bb101f20ae54dca1e4389cb75fb91d769743c18fc5466a207b732c3e478f742e7c104c531484aeee032b0f3e587334d2693a8ee3f1e97b3a101eef83c015f78041bc027d3237e55940a1676c8fa5bd92c60c0c4c459a39bc10c24063df92c7f3eb360e5688cb2b4ae4e62e421eccd97b10b2579a8acef0fe714277fb64540d1828ee45ab0deff3d4c16c09175ccfd8c96988d743bf8e0efba9ba24e9a52ea1dadc147046eabedecb4a9f5438951468897fc8b5f70cf4eb35d9a5b2c6ae654c4d94f4e0b93faf5d9a48794542144451add8d91bfb2d2259d68ba90e945d621e3c9771b541705e223f19b936bd402b0685b26a34c0a011e63583bc26a7c8cb8dd52575c7704faf50c06067cad17800599a0602ee9586f5644330681dd169249c0be00781c9387d0d2419412d54375b60ebce02ce7498662f0aa5c6fc1a90bc6cd06f69c49013eff6fa0dba1baf43656607f62bee8db1ac0205339a4c7626d58e1218abfda41345cd33f7fb3a3e162046658dba1c03a6fb0608b57b7f29bbcdca527e3c0e75fecb1eeee0127243e9143656db499ba22a72ac7169bee173fce4576bf3ebb7bc92018a932f012da014308e446eb58c2efc0502af8f06ff8067126b86907f7c7945f343d09b794bdfcf1e6bdc6e8551d581d523c2aa90d60a0e724fe5989173a77f701899bd45604a93c7606bf8058d7e21a887fe072ac6069d9b3de18abc547ceeddf4282f668928089ff0be4223b77247eef5eee6095abc53e3bf7ee160b4bd86a4adfa9ed62d6e76d1a1f8e72218fdaf1574044bd937c88ec0711d8f46e50420f97271292a533ef72a55a730975e70ad90a72d6147d67fde7b8c54813eb497105c7a361f58cb88d80c55ab4e650c27589f83f5cfeb67f277d21595c84989ddacf662d0d0c31503e3050f95c860e98e9d592fe34eb0dba0103506af47e3274d02aa23689ce9351714c93be3340823d3f9e9a6e60a1b6a604af9c98713b00cd9fa2db0b0f52aab2768ae66668487bb5dee24359f0cfb670a1ac957907b942ef8706d65a55cf299178ef783529e96172fa73aa09413d4f09882f94ff09b3daeada174648d29f3b788219b933929d30347467948ca869cacec5d8d6ccbaaebbfe5284f278b5e64483cc68eaa049c3172124e195c7c7288f95b82264bd56beee0836e8920b96973129dfedc0ab18424e207a4454e1582856fbfcbc6e2deb7b4f5863e62d39c09165fcebbc365c72af8ed35f86b8ddc17d7e4f12995f2a7649abd9ea0e80027d7ecc358b738d7b3cccce00acdca56efdc6290e728819dd202018fe1ce685687572e83f652a4e194c874f4870d64733c2d32fd3f6df0d3f4a0ca852528f0006ca316fe3ac1c44d43b4e4d243ce81ce94e9de4fce16dfba86071dbaedba5e679fdd39c85910efad2e07b3e92eb61fc97f57d2cd6e6b2565f412d52c33b30719859efac160062c822f6c2237691d6ad9d795eb5e5fc3fcef07f1081184acb1f1f083e558135257c260c27e499ca0b1eaf16844020d09007acc0c74d6e37e4e3b44b316199ce6f71f94644a8f80a6130c7ce433cf5b2795c10ec3a7c33c0fe401c19b5b3f92146cf05bda5d4f1ebfcca6a071038cfc6e566eac402e5ece4d1bfc24131801ace866d679f84e565e095a64c1d9b22ad77c220bbb1bc5f45911209e18df39558fdf3cc82e6de03d77f360ac816e6a56563eca1ec031b22e1c5714625e20cee279e43d216f30a2d3c62c0b2ecb437f57f0e39637a7e7ab69f52932ed65822ef6b39f55fe09ef07eae758ba0fb1f0f786e25b9450be3362360e9dffd1eaa813c5afbe371784c5c4f5e7c27495b26713615b08377305d5c269c6137944232d25671bbb8d9382e7042b2d1676ff7e3da2229f7b377cc7fe8e179fcff006eb326a3cd0f96f3d272eb4badbe6898377734c41e5a771de633700c7da25b211c9a0826f5fcea8c73df4fed23334430bcd481211af2578e9ed070d4c3adb81a3eb26460a6763fcba0b82fbb74c859876d622c9cdd36ed09608b5f3d17256a3e9ace97687ddbd4aa3cc5b0a3dd524b4525f31dd8107c50bef1102ac487b0bc90cabd5b4756c79c36563c898f02e979f346fadee1e6786fad0c59d1d332dd063f3a2b36b1a80136602be0f9f2181f9328c443f14e11e61428dde64f1dfbfb5358906549463e91399261c96969285ba96767e6bc4ee709b613d824b01c72a443416b2ba5ef3b5b068cc5c04758f9059b7fa9e3a7765e259fade55867f6ea1f2b03ff82b271b04a2ebed8b655e71b10f9fbcdb741c777fcb3a522be5c2c988e1df96d374fb2d59acb8f1514313cd891a25183cd4c3d80fbe294077cfc5dec4ce007c45d4140d72a875f1862b3187513d7193ddabf3fe16d5869b7f0746b103db7099ca255667b6a77de1b22decfeedc077a683221ced29255c463eee8051ea3dd0864d2f92877497b4522a7ad85ac12e92b7eaa0d9334676b11ced7ecd83e3d05c72bbdfbbaba10df0575b046f37aa7883403c9c1c336250ee5d5b2a7263f9f12b364b812c8cd088c4b2d4f9ae029db3bfd84b1589d8cf44665df5d3e9544d9857d3c1eb9b4b7cb7656760b034fe090ea58c6612b482728c67c83fac42d36049596ee17177628dc1785ce578c002f1f0974a2348237ba01325de72f52d575ac005df2d4e45c8e0b70e18d95ba7f7b6d0bd3e0752b618b7a7e267ff7cb47d7e8aa7f8d3f834b5a121bc290cc035a830139a7c7033b1f5cf364e4ff8be181b6e22e49482af3bc271df942e77fe97c13084d06e13ab0f9ddba9693f55d6aa808731f7d02d43fb749c0a15de3e620ea54dc3313df339712d618c9190216fe094d661b7121a301fbe8a3fd022bcb572f6722f01e26855a8152b3ec37cff9d48c1acdc64f18217d531a2a788b6e372f4811ccda530a7646b49325933f02f3e447294c10e6e2d66dfb8afeb29aee0d01909557b04f3bc8d3b0165379f69548be31def4952ad23d9c2393f655850d0700a8aff69b2b7321e0325bb58bcb6d0553fecdfd768c7e4952feca80139dc3ce63f378ad271607326d9f6deae684014fb752887f4a8e825667f8f07224bf35c884abe720e8ee8ab6828da51ea5f7af868049ee92b98c8ade8126513a44797d13060a21d01384cac6ef6f567572c518d882bc29031a6fbaa5190a219b395b711d9a68334170dbd96b6f0cd96f5522177f5fd61b3d184f64282536a8bad319850ba8523152ad6b8f70de4e779294e8eacd78d455fd975b0a759aac08ba0ee9acba04e75719838a592c8edae5d07eee8e0ec20543cdfe936440a3c76e1159f723628d4d41115cbdd18c0cacf743c6d5fff2501ec4c27d201ea0608e357baf0481d94228f2e30ad1d88971a82ebe669f3979db02665ff32c77fab274ba3e50362e3f8127fb28acb51b42b867410c3b7c8d322b0f625b861e3e11d03b845de10989e2f64456caf9720fdb28e338e7cda1b899a46f8b25125a0497958c80e79026daed101e35c782f25c4a3da97d78f0c6639858f176dbf04c1ee797ab540022e8fc01bb1df54498968dd1332962d2051243cbc5f46ef3c14dcda38539915e4c62bc5c9aa9b2cdc988ee66271e1aaddc7cd2256636863dfabd7c728f5ca6dac8e03a1f78e7087cec1f7f21dbba281c46cc0f8fbfe7b793d1c167f3b025aa9f7f520c4e76ddb6fdd1d4eb219cf7c1a220c565565b23164dd7378e5f1f124002d43640f79f9bb807dd7aa2cbcd091265babe553a0972d32bd6ce5d10b33d67d9167c484f66a06c54aacce059707ecd8ee58fe554451eac1ebfeec29eb8bbfd3ae0d107c87de1284d75e3e25692abfa6860789821f472dbdcdf169e30cb6f534bdf6783153538d6f9740a561778d282e14d3c7e3d00eb225c0c126ab7dd5ea32dbc5bfb5dffadec262ed0054472deb3774525ff72677a7bbfcaba4f12853ebb95de6b99ee1330da7ab5941fbb68de34eb77230072f094a2351aa21b0f66764cf998f7b5993d50b320e01a3e323313ba9d2f82e9092a83066b599bffed2ffa55b4cbb1154855fa37a1011343c9f1cf3bfb10398f155f0245855b5c730c419ee77f4fc7729ce79b7eb4514470c0990caedd43ca083d3252acf203b1c786f427868667b6756ecbf29968837c93a888d4201ba4fd9e620b0e4f2a4ba19e2a3b1c8c51da788d800a895b19035fffd3ff103e23b6b512bb1d997d6f36babd127e81da7b287aa9ae799468517dee46cde524bb56798928a037a09cd7884582c8fd0abbf180a2bf2d2a44d1cfac76fdace76df1bf1447e976ecc6717fd2ea6516c224bcb35f9023b6fafe12d185ca5e9dea101505d69d3332356c972ece516cf2e5d4b5d87abe67fa9cc1424c2c4f304ff16e6ebafc836c1ee325b7e7d6c76f83041bcd9273a19c566f4c980c165aa3b5c617787d2612edc020ef6dac6ce1c2d3d9a59596b5cf92352cdca07fdabc85ea406ae0318e7ed28bbd482fbd8331c54f0fdca5fd805e1089dbdfd2e436098acc95d8f48ef78d1bb0a030486fc4a39282f8e6b1333bd0815edfda6428dcb8beb3b00348701064c9d2d81017c76f79d2db3ceb3faa2b9873341d680ff55049b0225ab1d2c1645af0de5d200206e443378cd6e3da8b8ba04a888bf86a2c4ec7e19bf67136351f0403e654935e556e1880e6b966a89abc5a966dcf0bf95b74487b3114fca5ccac3b4ed5bdc47d9362ff92c1fca4a0505b08efd4a37a040c0c7a7a20cc53fa74258ee916d6b218e9d45bfab0473efec16ddd54160a3314e091d76b88ab6e7a92fd1f08421945123b32d787dc39afb74e51a0d54a0b8fd0ec63c4eeac564083a0a4c35eb84c3d81a41f3b37a6b8e6eb423e69725f6f39998379e2c08bf1a77c23d9c8afb4b2d80b4b93eea79bce3994b274a7e848b17b243e2859a34f5a5f6e128d7b39242cfc96bba8bf8ab00ccef45baff10dba0485f31559c73bf43c959ad46b95494d879b9bed361aeea1d831b9e5ec55f7b5e33750ce86c63787d9340ed583b01102d53f1aac9d8b30472ffa8d7f815d8709d3d84525cba55e239f731e748ddc6c8b6be0c38bac7e50157b4f8bfcf75b07e8829ac20a975711015931f239c1d50843cfaa804afed7a71b6af5a8034aceefc40e03f58b5e883e8a6509604c87efc46037ea03fd0cf277ab88382f164346968eb1716d90b4ef50047447c52408a5778cfd227b0c0962448cc2fadaf4012296c07c38dfc5ca72363273e2e69e52d26751c2c4cf8e63f90f10817b1efc0c6292524d7fc863f3c4fe43a92d73cce5e2e5bdeb72934c5986433aa8b760dd18870e3fdd08cd693387fbd48366e5e6867dba38a9093805a465d7dfec6e6526a897f0ade01fddc60ba62a671619f2f76d8548aa7fab0eb3cfbfa74f3c55d775aeac443a272176de911979deb6200ccc0e0aa9c0ad21d857002f6530312ea03291097cc5d5a3d39cacd83030f8865e73595681339b44dd4446614f62a71b85d5de6ca97f9c3919865e1c7442ce58aa5e6fd343b2d786e402795ea321e36d0fe6bd5c7f8f35f6b58d18b4123b318009ef8050936901e42b5ff713d4f45c72621f34fe4603eaaebc866563aa9eec1350e6f78750504a9671513f0ccbded3680632afa84f225b9529e72b8013eafda595d91ca7bd37090e0bf8720b03012b70ed8f73c6320fd9796ea6fd252a1d71bf1351ac09f7f2ff2433842094cc1d3def017126da9e60c5b3f51d893af56c88d1c37a6a34b3f62ed3b45e17a0be74aa0786f8c65b90efa52ceee7e572c08a226347a841e857aba6cdb116bf972f31545911468b8597731cd70a6b4623c573eeb8e49bbc6d4fb9abd71530a65705fa3f04d21a9375bbdd06184258df523fcce827d41d19eb2a4ac14a2a29b3048a7620cbb6481638aff41a5078cd1affa3df95960d96f26aa637f9c2b8a3265d0be1224a986577dfb81c9d6f052e5f37a5a1299884f0aedbfa9549233733e3487717a895cdea3fe67f9c26b3464b7862acf3b9387acebe5ebdabe0b22fa580c28852bcf08e103ba9ab8fb8db7f1863b90e4aa68052eb2b9394b8985679d56f040d418765f1206d19033f5667d9a373471fdc98d9dff9e94259f7c5d166993aeea0e49ab9d3dcf0c1cccf2e6e7553607191a8b9ab0e58d77a05b937588299f9c7ef16d7c26998f943153cd419692e9c9603c8f43e1fc00ba058710c7496dbfe56863b380a0c74e74f3914fd127351c75bf267e90d22a8391710ced2a0ee3699fce1c2e3f25807fc61fa948cb8de634ecf681fc7f394f8efa492fb50d3e6c76e0cb3ce0dae59baa21fa24c91b94b8e06489713a0a66bbb5ebe858255f08a73431340ebde4e73a62967a46e4f84558699e5a1fbdcf5f5d98184b398321763f17de996ba1a1e794cb32db03c0dc30f46972ed7c5115c0747609f60540280a7819a8d045f20ceb0e4b0f409a856b3c3b5b1d7c635b4f6f265b0e1a9e116439d6db28fa154f4bc550bc368c6582f0b17a82b6946707fd960317cc4bb94e9dcd05a30d880c6b1c694994c0a48f7847009fe3279b47b9710c5569ff1cb931790da68083ca89186b29e7e65a0285e369888df2206158dadfa686b7fec914fe52afa54d68e447a244e5552c6579906f65aa2f8397685ad0c611e945362799c0fde25d5d584c6ee10579f083cd8af45111e9e6aab0668f29b29205425b1c1db6f76be82a685fa1a92c8e260f3362c47d4eda8264e133599bc2197f961bd49061ba3490c8b8e530a995a05a8027e87d35cc8ea41cfe6cf0bfe79939612405bee6fabb224c5c3cd4504d133ddd54dd0e82c2316bf26c424a13bb3b866ed5f7f48893e99d0c4806b7a6ec7f11b10095b5be37ec954962a05207161ba22b2493ce8a1419f3e3ccc0958343bea31c97615a9ff85ca35c3487ad2eecf5472bf781e656a4f7301ab629eeeeb9df56ab6b4a3ddc972f14fb108ffdc0645c94e32a63b7e1722adf890a92d511c5343e801d68e435b87cef38b74e2c903441265d4b76156f63e0ca17ba7c8a49469247ab5e76001927d7bbcc9280cc790cb5a2a6dce3cac62650a5d5d9902fd2b591be1fb79fd9aed06f135db5dc0b14199c5efedb36bf3ebbb20ea42d675f0d2effeef9a9696b7c9b8448c06a8cd87087449b905d8a88b4aec4fe979984737045e688fc5c4e8c5424590f2766d2429d267a6b10a915671da8f9c867bff7373fb6ba31b40ddbda1f5aa8f6149e5674a1ca350ef0e13d6b3ad8d6a2d60ed3064b8a9014096f4bc9c1d1c406f846526b5ae9404b5bd27ab01fb102bc1b4399273b83737aecfdbac7191c0d6c170cb732c8f73bcf41315a3f87bbc4a2110ff9b7d307e344462deb5670414723b7b50e04e9e35bdaf9c0e5cd4be39c34fbd4ccc3cf7c43c471721360408fbd0f99506ce305fe38cca4833d3e75cd3c6e67a784090d383b4aa9f84ec6957dbcad3f9ec44343fdeabc21e7eee15980d4b6a0a050e47da829f535ef46d7aa17411fde3539c14c0370437ad80f6f39414c231ddb231766630da22a9ce0fec6e29dca76b235d9c5504580e03039721d5e179cbac18e00ec6a640ab1dd455584b7738267a1d7c633723af6948ea1b8b310f82310b078ad604acfa384e040ba64575eaac956f80995890ada0ba7b5a7972a9fccc90d7da3e2b0ba1a80196a48d93e8852526a179a6ce3b85ea4b2b0fa5f8a50cb2f94ee8b06834a0e73cf7d0c1307914b574305a41bf3a6fecf5d3b256b812b16271e5642a399e36eddd6dd0440a7f5da2fac76a28b0d735a96567e95364c8de3e2d8789ffccba53be6de21e85f36aab947e93f7b7dd755e29e074deb08c3fce2dcd92268e6faffb0ded6893136a06598cc6daa8d4683c4cec98db4faaf385dd8e1e69ba84c8f68dcafc17fe83a3db34a42db7c6766be86f797f00fc4d05ec1585694ff2f8d675a7ff70daf605bc3b4662e61fcc9e3bde8248d5d4cb873cc268fc4f15246e759bf4e648028d9ed9e62e95080c50f277b7b2af2ef298179083ed950a55153ad6c921a07c46c79943766ed7becb7fcaf1b629f2017378359ae291942809c8e7c251e923e3db28a4f4f843283988e01c32eba2d7671287bf0ccc1005f8d081777beea2df43df6ba1a07bea4ef06dd99a9b926d6b5430ac8d7162c3aca34bc187d1d5c57fa558d895fbadd14a58a1a03d9f9ce3b3e54ed7ff53e93149bc358c29eed688929841d75286d502ea9edc2e25c08395474657447181791055ccc6af0e605d10992155c625b9a5c81f47f8e4b37e07167e3a03ef7ac5895392180ae05d1d22753d940e2afda77eb03246adbe0da4f92507384d73cb83874701207556b10a11c22ed2469684bb3bcef86879a3360f66390c60a00b14c1b8d54b95d80e86dc51904f1016a0adf249776dbd8cccf558de9da456a37cd4d1a917f226cc41420cfba4be0fb6d98da132667238ee8317e35a0bcb981b8e129eae11d7c49d03224f438624d982fceadc4d71e500e1b26ef6987d1bd7435b2dbc0a9119925fcaa1c51ff8759cab80cc78a65d3da6ac6729791eac0655355c838ae9ec1395aec065ac69ec846a9d3af0deca22f1a07634f6600b483b876c8d153cf2a05bc0c492fc881a90aba63b897e9bbd1731b8241e881531ec36497e2212c513a1167f6f4c701c302350f12373d476134f3245098279e301ff57d43dfc930c2233aaa104c7631efef8571b7a541681f8688571f8de7a650681adae97693f17494d2dc10c9728bddb6e8c2312eac8961345eb44e2a95a29fe8aaced3dcecbba74e23db769eacee3a5dddbb5f7482122520c2d771470bcbf9f4e4155493064e6df17f49140056a87b5ed15e92dd073ede22d77c02eb4d934c35d77a02559c12194141393575a4ca841b7e588e84cfb8985a961196565a5b80f7307c199118eea23cb6e7226a8104e30218b1d9da313998ed0d1375e6acb6c45c9186a62dbcc7ed95d9e3433325e60c0278b5b22fd8bcb6766f229c3f47047ba9a770ae28db7659c8dc61b3a75cd3ee96bdf5d098ce7b277576879c4b6aa8a47a9a8e81d378c9276bdacc50b9097367d00b827a0201ed58e73269f84706c36cf8fded5b4294e3f8564cfefa33efbbf176fb33dcfb336fbeeb5969db16cea64352e81aeb16ea802179042365ef2bfeb6e48f0655183aa8cbaa35756f15faaba26a3404b99dc3e5fafcae67b2c6718574264f869c3319b4eec18ac4d12f2fdd50e2306701ed8d8a357cf87d77a2feae9c137d79563bf334fe37a6e353a792b61de7eaa946dcfe9d30d4b089afc54e4016dd4e14dec8c2605a153091bd0712eecca89f2983f33fe554676444c958630ac21b3ff88ca8d3e65fc60570c57b58f489e78e0a9f3f3343487a90094edddab38bd280edc5fc0eaf43f93c38feec585d36b265497ded5a921ca5aa0eecf25e4ded142d2d04ac6daefefd81dddbb77109d769c9d85e47714de554ae94b8f65d659ca813d92871ebe4b9c51aa6a67b7a181d4c75fe7dd183569af288ae0a9ec4d9fbb45a9c285db69d5cfd400a66f4a91d89013507630b6b4d3c8f2db8c0936820c19524da43cf1b720541d256949609dd7ff4ef7ea1e18e17f3781708779295fbb4f03c76e9f8b1e369cf973158da4d647d695427295fa1c52fdcab5b71e9f9548aee77e9af8d5126104948b21fac83f6f2b37858fa7056ccdc77918ab36f8ecf3e7ec99fbee873205b53f885bb7c2d5253f7b242910fc05e296a3f013eaaac4f6b9b2e6842feb6c78555d1674cc2644f073b17304eeecdb268e7b60ddc2f5443af70c8ff985f26400723c1ab836a7124d4a7dbeeac6c8caf185263cf8fab8da4189c4c856ef80d4878f4bff41e17267c06a1c93745bb7a99dca0052ece58a057372f19ae7bdc84e9fbb1153c29488a033f0d8fa3d48a54a32df859344813ab8fc749bca5b997250360114b4d605cb1e97346af78ddd0ab4ca5a4845a34d5eaae3a401ff9d142dc4f2f4371c64982856cd7ab30b9d814914d2f23aa436593ed10a39fbfb1b7452409774764de3d677670f868b252124d7fc7a176d66a05089bf032705bf9c0941e48be59ad08e7c1510d0feddc24f2d0befdb86a9a19bd17d17e21685d5f16bca7f8c294ae78beb6c04462da8cfa2e19a1b0c71e64451fb5ba1f13fd9920a8937b6e34cc8a375a81ebd451558a4443182bd87b8a2ca0acc24fbb21fc56617854dad958d3ec78be6017619da19f4179bb2f22318123d8e2115944e5c4819ae0290e6df6e01a0c25573222b3567fd1d18151b26ea3c4ebab5fa0be933b59fc5f0c6d74773c86a80185a602cf338e897fff56358cf975d09c840510231ca740cff171b1f93c311f4fc13c0594517ac971cc7f6b04d6b6f18412e46003214dc9a490d1a322fd34826dbf6f63e67d314ae1f2ffe15701198c6affa34fbd9f1b5abb6daf26333cb0c590dafee0eb309fa99327a391caa981c21ea69167605760631159296f201007fcb332a78e3dab8f0deff91fba84aed09bb3361ff384f72d77264a407cd9e6c4c5c59d7f68ed2f8afc14cd86c55f376a0f87a559b9fb6d98245775e31311fe9d0f8986c3606702f21acf1f768c287877c5a20db79c39f5e033924f6b998064e0da718a6b17b24d3f5c6e183b30a2c86fdf8a1063bd4e235a0b2f61db234fdc52b258623800679c0c57eb3aaa17f42a36fd187305b22e5a68eaff6767af8bbe63eefd3affd01a29b0de4306618a163a78603500bb56e93c9652fa1f83fbddbe9eb61cd680384508d15d636d23ea32ccd6f1c58d877c841dc8b7f2492e0fdcf337cf34739347c77326b7fc69ce4e7a718f38503fc5d97c4b06a77881e2077b6cb7c5aa657046dc3cc6512537718d1321b1668c2aa5ee6efae5945db2415eecd3fa9ac931389e3b6ea76dc60ac73b2c09800a59b871ada5c519b5a9023652253056662acd0edd57a0dc21cbacbd553861ae43bc784cbd0944ef50f003a7070d0289227412f79e1b59393f19f8768ca2a52b62cce7c87648a4a0ecc0b5ce2a108f8a0828c22fa15bb3a3fe6e1036f331e031cc05f6649f8fdcab1c600952b0356fd8b515253fb13cfc99d52bc6116c6606b4d0379b4063269dcc8efc3bb239f39a7680b07d08bf10e9edcc0bb0885ee211185c6d5687379a7b4f4b788a1a2efff573f1839e19e5bdcc9edbb7bf84be0b188a11c3d946eef585a9ddd5fad87e2f24463efe20d4a86669c0c9322655cad72ee0363f42f877cf0ba1bc84663c1dbc093b5bb7aa8fa2b61f7355edd3f38c8de38dd7b6492aff484f128d88e58bb4b2aaccc07621c4c21cc3f7126d8acd3c3558577e2e53774ca499d9939594d72dbd1526c429ed500c67a7cada8b2438a47df33f66e9660b088f61de797554e7a1dbed82538be8d5f1ae0a71a5c81ed9d57d32c0a70b9c989f5f32a294b17fa44edb5ec0d602cddcf18fa9ce728cb37e4692ff17a7084ca0729dc992917b7d6370761ee39499c69f5c2932a2ee7f66574accb72b25345c70e7730dacef74acae7e3a99287c9993d3b6ee0b8c5b4a842b28d73801a4f2ac809b30600ff4974d9eacecd802efc60fa09b08e258800f42d5e82f1cd1e10327963940f75d31189619e998b22af7c38202e2463b86e5a6a3b920d0a9658f4dc5976fba2fb41b82d7d4ba9bdcd3eb2e71642cffb71d8a4e3bce9abe89a71372dff8db454154bc6ed9456c6c3c03554a72f8d51105f79f076a4b89e9fab09ace8139c62440e031fb710d3b8d1a84af90760db85b5b630212851f1748cbe0d907d27945954e7e0c91965022c1321e7dda87d1d822f95285d85a91d3d97f14b6a15fecf1108d35c586160a2c88376d65da9bfbba49f349a619f1f3549ba98289fe78398715a51067daaa7fea19cdd189374bc005afaa86c6e5bfbfa52293a33fce6597b95139e5c1ea2ceb6aef5135bec5f6d90e2eec56e96a0f590e39ee28d7af15c70a4ee7050ccfcd9604fbe5ce57f86adfef64d7a7de1617c3feb9297aaf9313bf9248edbf465a2c9376eca4ee3c821b5a3bd2b4678d65526e157f16f8b23fe86f8952b0c6c0460e626598f06787188f4e41ed3c39d20f5bec9f54769ed9fc6b1baf013469347d6ecd621d60c263985afd9b6e449499444a107cc9c8be3719eb19cc6544bad858b7c375799f74456e643cd2ab82bf13c8b8fc8626e04c1427b53a9d16d839f46b8fa49cb7a7447f23a781d754992fbd8c8b9f967c16f2b60cc544a2bf7c3103981ca77b77843e3da1dcde2871ec17d45b3338eb0a22e0d1f9ddb5b037971e13c40bc8fcf220b793401f4a762b28f8852a3d2a044b3c05723f77eaa0f25b45a82f39f15c93ec2b5f670145b722e228e42565164c788ddb38ad8a1c8bb26e50a7f887c4602455fcb1761771be6c9e42b718b05c647243f8da5e6a71aed4fa51308bbc64f07dc5de34718211ea0300886de6252f5e19ec235322f1a0719d9309050ac311b023698d574bedda44e527bde6e884bde5670fc6032342b88db440f893e3b18c4e256500769d6b3b98a28410782705cf83e9dfdf8898fee23e646809bae923b4897a27af822b2ba09ef1387221c1547a80349cc6c088969363d897206a2c0fc3f7749d74670f0ca6cb3bbc767fe0cf755ccc154375c07b0f14335bb2c3f3d2d62133e1793ac8c86731c041e81a217fd69e5e704dc31c5a907d0386d979c359b4fbd0f7bb164922801ed6b1c5d9593aecfe51dfd333668dbe6db01df8ba8eab3dcd5e1ad294dd4667c22495ab9ec3b406fc2563ec5f43d0ac6e42d2b8b8e0768c2409f363d0672ce69e56c67743e9188fb60428fb6e9b815c9a1baf6d3631831726b6654549c14b07db40f19adfe041a5771875658ef107c1927d8121433ad66b163d2b1a1846ed8c630f8a00872bb00a58609d4f21679934b38dabdb27a39d91eda53be2e647299b58e3ff84fc93edd983a08476a0f6a343fb8af856feacad539d108e91717b69aa9942be4d170804bedbd3f1e75f36b373d23754df28e6aa14569d6aa46e6691b9d1518991bfc96ccbeeb3b4bf81e6a2561057b78d29e6b371d4e43f1b85a9a84eb96d14c61f445fdb1874aefea6d90a33efc3c31ff0387f00c271568925a5e5fbe14d4ef5690bb23b94f87fa9addf101a03109744f0547097f9be5f663bc9b06dcfcbcbcec5c074435938efa8448ac9461a272fae8599c6194b49457957fdd763915b18deeaae3baf50e0a1a99bcc4d5bee46ce378bef1082a707552816fdbbc17649b632a1d414d7269e1ec50bddf9007b82389cc27ac8c9b7e8d9e25fc0f8b92be8b95d0d137838f549bea7bbf7008b702754e76e5cf95642a0a6d1d6ff9c0425e789fc655acd2e66c4912911027f77ca57acfea8b3ca0ed3e343f98004cd69032a6b3c6bfc368450b46df53f3d9eb05a02afab226a1ebd1ababe8ced0792c39ce66d1c50536c7314c388d0be1b6a560f761820fd88dee57fbc288879e2d6426ee0ac39c5c98fde2313ea6a15e496ad3d982bca1bafa78cf019cf3b9c7de18f39fd033177bae65e9dd8ff2ee1e26afc475856ce8f5b819e3bd38564444d7a8e47c6f2fc84fc85e52050a90964cf9536cb4530d372a47a7ecdcfbf893e1fa04a8ef135adaa5801b8bdffd8084b54941d27b538c144aece1849b867fd4aa501f4a85f06dcea916d81b9b2acff73a87bda4b6054b9926a709ca9cf63470fce02ab3a1fe947f3d05df786cf95e681de969c76464b94af3a11409f30c3e1bcde5d11d495dbddfdd08e08d9912829224adf503684b8e0728fcf74ee241d73fab58c2804dcc83edfeb47050e80760b6f898ef14b9a86ed89a6d1ed804da77fdf16fd939c1c647b6e94698c861869b1220603939991ab9196d5684ea08131d047dde0ec7f03193cf884ae049c3f9a00d5f835bb70f29348ce0b8e8543791109a383e49da490cdc85a066d0fa145fa2f45e46cbb109b7c526754f0ac9b9397a6d1933970f09031edbadac17ad97b63d48f1808f0ec0d0a60ef9e9c3b252d93e7f2668e61a541d02214cf14b2a7a44d1cefaf99c73657b2d6b8cfffce6876d953d104207f3a03ac7dc3914f638f66b7d3cd524a645985aa68e297f6a5f3f76109d9344c01332970a1c95a8e47424d647cee3a07d3233423f58ee1558be60a9ff1ac2d81b5924a597752a879b7b26dab95ee3874903fdd536cfd85c2821eeeedef9dcbf79a66bbfe0b68116b2718163d93d67af2d050ed01e2e02c514f0fb0f0442e199e5e8c5db4137b850d41c8866e17feb1f5d43ae03dc53e7af0d4dc492ba70fde8ef70d60c53a3b8ccb5bb82cc16080edf52134b471850ce9bff430028f383495537ba583c79d98d4ca9890f50a5f801162d96f89add07ee3f94fe9964cdb2d96f60ecfd244c864511a9486506758aa74bc3f8222607560aa4e496fc7b38589ebceddd02ffb70c13e244d4c7212b5da78e3cfe4cc0f88b7321e08709ac44e47645ba0b89246b45920a2eb7d7820de5bd9d13fcbd93bf3d3565ece2184925ee5b2cb86d2a3c7414a9fddc58ea69e58f5d83a5e5504c84f77a9740267801c5c83444fe6e149a5d67c775922070adb1974214eba45c241edde6aefe1a38129403391fa576d8eb718f0dec956cfea1e059edeffa902f0e27e90cee5292c246f49032c05398a675a07d593673ce07962ccc7e1632b18f1a3b3ba1b30a4002b62814a416f76762e4ab457e4bd7d0d8d68dc91cb63370eb471813785bc06e4f68770bd776ca00f98d23e71501d83360c5ddb081c98778ead14b744976402d694f242c514a291f0b8fe3d2313750bc283eb1d492d28c88a4422b67a0c38ce67b6ab69e1f1d218e9ca1252db64d52e070935bc3d60d71feb077a803f3203cfa0c00766ccff04e2769a50102d9b540c66aa587114a5ca32c84f8a49ae8e5824b9c8b5d7d251b1da36f4f34b9166e62333da6a643c77259994a59a44eb0889638f13ee9dea8794c6fbb4cb022bef6f5b014a49fd669f5b150938e667eca557418d6604d7aabc0c4b072c31ba6a088e0ce6474f0a96b9b4a2327bc40e9c375a6c9adc1edb2d8b8ec6f2a08387773d13d1fea72b2ca3502398972d2d6bdad8f2a93f644b83824510ac168f3edae471fc208c7bcf5399f1d9b57025048ed787b05431b2718e0e3430f4559589bd0b09afc5b6294c07dabb44e68e36c0adfe587a424e36eeaa8f7684e5eebc1b043f1b085743498baf37634eb6ec7bcfa9e7eb847270cf49ef41b604093eb9a6ba74e919d961b68a7dba5b3f38bff074da3db2a4b27d756197b437cccc03d6328603c019f59eeefbde06b09bcdbb42f9215fa9eef89e54a418a55c7a14d37c24009fb4f2fc71b8ffd45a95166fd44d3ddfef0e580ebdd916e36cbfa40e13932b6545058686e6c9fee971b27b99b6d2a5528db95a724365879375a8916c23129a25a6bfebd2107ae7715de04c0c8989632f278e14fb8cda3283641acdf4c62553fc2ac6d79f91dd06fe50c415523519eb78999a4f3f5aabae73be6c2aa0b316d613dff125c53798e67e225a5fdd35d631b4f6e0488f55d2d3ef8bd9277510484003dce1222f9e05d7101c1ec378fefc88271567c44761c037f833372be1a0447502a841c14ef16553c022a2e4688def2ef1c7999934b0916202fe43aebafe9b0cd101186f519baf05b58ada6237d992fe2ac2a588573fa0fbb381b5661695b3c0db86cdba66f2f6410285915374b52fdd12b5e5459f5e335b5983539358bb7f5defd5fc8a7cd0c38451d90699e7f522b4518bdd4650d7f7c3b26a7be08f8a7ae8dea9306702c84936946f3f83e2c611c7868f082575ee5bc1f72e7ae744298496a55511ecc7b96ecaaafc1a21a72837aea6e314d84d6beb98ca88aab230da56fd535aefaf26429d79e7b7b57a97411522e99197db190b95df42e7eec78389aeedf6c6ff909db85e429042b225e37a2d86ae562759105852a0964d9ae9f93ad87e716c7c987bbeec6fc59ed5cdaeb8e44edde501ea425bfb45301233d3ca21f4562d2bdc23f7786a996d15506447b16597441a61981d4a56f7e9fc71fdc0f9770e926aaad489f5604c1e4af3f6916e228ec6a7c1e3fd8b4d76931b69acf54d099d8e66e4542f9ed19a44c942476d2652be7d54c93a37e6fa2b9e63d46ebba565727954862852ed26b69bf7e0122b00085918fd9ddf3a51f1fc0dcd9765c61f639e0f075e651183692681dda4bbc3d9652c660fa4f159694c518c12bc918a3c5c63da0709ca38fbcde9472c146885838723e773b611704845f00b718d56fce972030465c7798bd595f57aebeab704c06ab904dd11d146db677f0e720f31eb038bb43cd8c468109c3878a1cdc924a06c386b6e451704ae8fd78a7e019c4b0a38ac9ce5cad727ed71a29a0e627f7de5b100a17bc047e92f6a2f9ba9127a67925cd84d69329964122664feccbe7c411f69809204481c6909c66883c96473dd831f88f408013d39e142c99019f1a9c820407779df1361535256f69108280c7c1b8ac3e56819108867eb8f58f42915c1506295c635e1c922fe91f7dac35417e57e2359d1d96039b31015df82b1aaaf0dec32caa730f16f709aaeb1e954ce4beb13d11c03057ea89d02e848f48a68f25dbbcad6bf1a1fa15e35b182cc52f02938233eba46801d4ccf99565f21ccfadff9ed410dac56b656f365682c30014676e8f6dee6e4af9c55ad9941780b4fdc2fa230223f23079f2fdae98cfa9dc4400ee0ec1e0c2a9ea1ebf0c1c1014bbead4176ca00de6756c0f96186b069fc7b41f0b1753601e375a88d44248ab0a60a98db84d4e9d49ada97bc05d5c7256106c80362acc34184e4e0228c544b49d34c6e7ff04346dbabfd0e29558bbb6c79068dbbbebf65547d8d5640b5cb5407153f98fb76eac8bb4549e8901c109a3d31335110388d8114f48e7511eeddceff89184801d249b18a2b9e9480aeec63872b2cdbe2b94670c25c1142b8ff3deae121e8109daeac9c668f6a38436e14fe44b86bf19e7154bebc46a2a2044fe399fb32355110e258917f0b9c25a6b061a05f1f70675998c58507eb4bb9345ee57d19280e9d4d6abd40e024","isRememberEnabled":true,"rememberDurationInDays":0,"staticryptSaltUniqueVariableName":"779b78f0b0e284ba3ac14be43b73028c"};

            // you can edit these values to customize some of the behavior of StatiCrypt
            const templateConfig = {
                rememberExpirationKey: "staticrypt_expiration",
                rememberPassphraseKey: "staticrypt_passphrase",
                replaceHtmlCallback: null,
                clearLocalStorageCallback: null,
            };

            // init the staticrypt engine
            const staticrypt = staticryptInitiator.init(staticryptConfig, templateConfig);

            // try to automatically decrypt on load if there is a saved password
            window.onload = async function () {
                const { isSuccessful } = await staticrypt.handleDecryptOnLoad();

                // if we didn't decrypt anything on load, show the password prompt. Otherwise the content has already been
                // replaced, no need to do anything
                if (!isSuccessful) {
                    // hide loading screen
                    document.getElementById("staticrypt_loading").classList.add("hidden");
                    document.getElementById("staticrypt_content").classList.remove("hidden");
                    document.getElementById("staticrypt-password").focus();

                    // show the remember me checkbox
                    if (isRememberEnabled) {
                        document.getElementById("staticrypt-remember-label").classList.remove("hidden");
                    }
                }
            };

            // handle password form submission
            document.getElementById("staticrypt-form").addEventListener("submit", async function (e) {
                e.preventDefault();

                const password = document.getElementById("staticrypt-password").value,
                    isRememberChecked = document.getElementById("staticrypt-remember").checked;

                const { isSuccessful } = await staticrypt.handleDecryptionOfPage(password, isRememberChecked);

                if (!isSuccessful) {
                    alert(templateError);
                }
            });
        </script>
    </body>
</html>
