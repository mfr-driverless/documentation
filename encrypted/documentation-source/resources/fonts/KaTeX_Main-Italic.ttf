<!DOCTYPE html>
<html class="staticrypt-html">
    <head>
        <meta charset="utf-8" />
        <title>Protected Page</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <!-- do not cache this page -->
        <meta http-equiv="cache-control" content="max-age=0" />
        <meta http-equiv="cache-control" content="no-cache" />
        <meta http-equiv="expires" content="0" />
        <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
        <meta http-equiv="pragma" content="no-cache" />

        <style>
            .staticrypt-hr {
                margin-top: 20px;
                margin-bottom: 20px;
                border: 0;
                border-top: 1px solid #eee;
            }

            .staticrypt-page {
                width: 360px;
                padding: 8% 0 0;
                margin: auto;
                box-sizing: border-box;
            }

            .staticrypt-form {
                position: relative;
                z-index: 1;
                background: #ffffff;
                max-width: 360px;
                margin: 0 auto 100px;
                padding: 45px;
                text-align: center;
                box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
            }

            .staticrypt-form input[type="password"] {
                outline: 0;
                background: #f2f2f2;
                width: 100%;
                border: 0;
                margin: 0 0 15px;
                padding: 15px;
                box-sizing: border-box;
                font-size: 14px;
            }

            .staticrypt-form .staticrypt-decrypt-button {
                text-transform: uppercase;
                outline: 0;
                background: #4CAF50;
                width: 100%;
                border: 0;
                padding: 15px;
                color: #ffffff;
                font-size: 14px;
                cursor: pointer;
            }

            .staticrypt-form .staticrypt-decrypt-button:hover,
            .staticrypt-form .staticrypt-decrypt-button:active,
            .staticrypt-form .staticrypt-decrypt-button:focus {
                background: #4CAF50;
                filter: brightness(92%);
            }

            .staticrypt-html {
                height: 100%;
            }

            .staticrypt-body {
                height: 100%;
                margin: 0;
            }

            .staticrypt-content {
                height: 100%;
                margin-bottom: 1em;
                background: #76B852;
                font-family: "Arial", sans-serif;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
            }

            .staticrypt-instructions {
                margin-top: -1em;
                margin-bottom: 1em;
            }

            .staticrypt-title {
                font-size: 1.5em;
            }

            label.staticrypt-remember {
                display: flex;
                align-items: center;
                margin-bottom: 1em;
            }

            .staticrypt-remember input[type="checkbox"] {
                transform: scale(1.5);
                margin-right: 1em;
            }

            .hidden {
                display: none !important;
            }

            .staticrypt-spinner-container {
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .staticrypt-spinner {
                display: inline-block;
                width: 2rem;
                height: 2rem;
                vertical-align: text-bottom;
                border: 0.25em solid gray;
                border-right-color: transparent;
                border-radius: 50%;
                -webkit-animation: spinner-border 0.75s linear infinite;
                animation: spinner-border 0.75s linear infinite;
                animation-duration: 0.75s;
                animation-timing-function: linear;
                animation-delay: 0s;
                animation-iteration-count: infinite;
                animation-direction: normal;
                animation-fill-mode: none;
                animation-play-state: running;
                animation-name: spinner-border;
            }

            @keyframes spinner-border {
                100% {
                    transform: rotate(360deg);
                }
            }
        </style>
    </head>

    <body class="staticrypt-body">
        <div id="staticrypt_loading" class="staticrypt-spinner-container">
            <div class="staticrypt-spinner"></div>
        </div>

        <div id="staticrypt_content" class="staticrypt-content hidden">
            <div class="staticrypt-page">
                <div class="staticrypt-form">
                    <div class="staticrypt-instructions">
                        <p class="staticrypt-title">Protected Page</p>
                        <p></p>
                    </div>

                    <hr class="staticrypt-hr" />

                    <form id="staticrypt-form" action="#" method="post">
                        <input
                            id="staticrypt-password"
                            type="password"
                            name="password"
                            placeholder="Password"
                            autofocus
                        />

                        <label id="staticrypt-remember-label" class="staticrypt-remember hidden">
                            <input id="staticrypt-remember" type="checkbox" name="remember" />
                            Remember me
                        </label>

                        <input type="submit" class="staticrypt-decrypt-button" value="DECRYPT" />
                    </form>
                </div>
            </div>
        </div>

        <script>
            // these variables will be filled when generating the file - the template format is 'variable_name'
            const staticryptInitiator = ((function(){
  const exports = {};
  const cryptoEngine = ((function(){
  const exports = {};
  const { subtle } = crypto;

const IV_BITS = 16 * 8;
const HEX_BITS = 4;
const ENCRYPTION_ALGO = "AES-CBC";

/**
 * Translates between utf8 encoded hexadecimal strings
 * and Uint8Array bytes.
 */
const HexEncoder = {
    /**
     * hex string -> bytes
     * @param {string} hexString
     * @returns {Uint8Array}
     */
    parse: function (hexString) {
        if (hexString.length % 2 !== 0) throw "Invalid hexString";
        const arrayBuffer = new Uint8Array(hexString.length / 2);

        for (let i = 0; i < hexString.length; i += 2) {
            const byteValue = parseInt(hexString.substring(i, i + 2), 16);
            if (isNaN(byteValue)) {
                throw "Invalid hexString";
            }
            arrayBuffer[i / 2] = byteValue;
        }
        return arrayBuffer;
    },

    /**
     * bytes -> hex string
     * @param {Uint8Array} bytes
     * @returns {string}
     */
    stringify: function (bytes) {
        const hexBytes = [];

        for (let i = 0; i < bytes.length; ++i) {
            let byteString = bytes[i].toString(16);
            if (byteString.length < 2) {
                byteString = "0" + byteString;
            }
            hexBytes.push(byteString);
        }
        return hexBytes.join("");
    },
};

/**
 * Translates between utf8 strings and Uint8Array bytes.
 */
const UTF8Encoder = {
    parse: function (str) {
        return new TextEncoder().encode(str);
    },

    stringify: function (bytes) {
        return new TextDecoder().decode(bytes);
    },
};

/**
 * Salt and encrypt a msg with a password.
 */
async function encrypt(msg, hashedPassword) {
    // Must be 16 bytes, unpredictable, and preferably cryptographically random. However, it need not be secret.
    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters
    const iv = crypto.getRandomValues(new Uint8Array(IV_BITS / 8));

    const key = await subtle.importKey("raw", HexEncoder.parse(hashedPassword), ENCRYPTION_ALGO, false, ["encrypt"]);

    const encrypted = await subtle.encrypt(
        {
            name: ENCRYPTION_ALGO,
            iv: iv,
        },
        key,
        UTF8Encoder.parse(msg)
    );

    // iv will be 32 hex characters, we prepend it to the ciphertext for use in decryption
    return HexEncoder.stringify(iv) + HexEncoder.stringify(new Uint8Array(encrypted));
}
exports.encrypt = encrypt;

/**
 * Decrypt a salted msg using a password.
 *
 * @param {string} encryptedMsg
 * @param {string} hashedPassword
 * @returns {Promise<string>}
 */
async function decrypt(encryptedMsg, hashedPassword) {
    const ivLength = IV_BITS / HEX_BITS;
    const iv = HexEncoder.parse(encryptedMsg.substring(0, ivLength));
    const encrypted = encryptedMsg.substring(ivLength);

    const key = await subtle.importKey("raw", HexEncoder.parse(hashedPassword), ENCRYPTION_ALGO, false, ["decrypt"]);

    const outBuffer = await subtle.decrypt(
        {
            name: ENCRYPTION_ALGO,
            iv: iv,
        },
        key,
        HexEncoder.parse(encrypted)
    );

    return UTF8Encoder.stringify(new Uint8Array(outBuffer));
}
exports.decrypt = decrypt;

/**
 * Salt and hash the password so it can be stored in localStorage without opening a password reuse vulnerability.
 *
 * @param {string} password
 * @param {string} salt
 * @returns {Promise<string>}
 */
async function hashPassword(password, salt) {
    // we hash the password in multiple steps, each adding more iterations. This is because we used to allow less
    // iterations, so for backward compatibility reasons, we need to support going from that to more iterations.
    let hashedPassword = await hashLegacyRound(password, salt);

    hashedPassword = await hashSecondRound(hashedPassword, salt);

    return hashThirdRound(hashedPassword, salt);
}
exports.hashPassword = hashPassword;

/**
 * This hashes the password with 1k iterations. This is a low number, we need this function to support backwards
 * compatibility.
 *
 * @param {string} password
 * @param {string} salt
 * @returns {Promise<string>}
 */
function hashLegacyRound(password, salt) {
    return pbkdf2(password, salt, 1000, "SHA-1");
}
exports.hashLegacyRound = hashLegacyRound;

/**
 * Add a second round of iterations. This is because we used to use 1k, so for backwards compatibility with
 * remember-me/autodecrypt links, we need to support going from that to more iterations.
 *
 * @param hashedPassword
 * @param salt
 * @returns {Promise<string>}
 */
function hashSecondRound(hashedPassword, salt) {
    return pbkdf2(hashedPassword, salt, 14000, "SHA-256");
}
exports.hashSecondRound = hashSecondRound;

/**
 * Add a third round of iterations to bring total number to 600k. This is because we used to use 1k, then 15k, so for
 * backwards compatibility with remember-me/autodecrypt links, we need to support going from that to more iterations.
 *
 * @param hashedPassword
 * @param salt
 * @returns {Promise<string>}
 */
function hashThirdRound(hashedPassword, salt) {
    return pbkdf2(hashedPassword, salt, 585000, "SHA-256");
}
exports.hashThirdRound = hashThirdRound;

/**
 * Salt and hash the password so it can be stored in localStorage without opening a password reuse vulnerability.
 *
 * @param {string} password
 * @param {string} salt
 * @param {int} iterations
 * @param {string} hashAlgorithm
 * @returns {Promise<string>}
 */
async function pbkdf2(password, salt, iterations, hashAlgorithm) {
    const key = await subtle.importKey("raw", UTF8Encoder.parse(password), "PBKDF2", false, ["deriveBits"]);

    const keyBytes = await subtle.deriveBits(
        {
            name: "PBKDF2",
            hash: hashAlgorithm,
            iterations,
            salt: UTF8Encoder.parse(salt),
        },
        key,
        256
    );

    return HexEncoder.stringify(new Uint8Array(keyBytes));
}

function generateRandomSalt() {
    const bytes = crypto.getRandomValues(new Uint8Array(128 / 8));

    return HexEncoder.stringify(new Uint8Array(bytes));
}
exports.generateRandomSalt = generateRandomSalt;

async function signMessage(hashedPassword, message) {
    const key = await subtle.importKey(
        "raw",
        HexEncoder.parse(hashedPassword),
        {
            name: "HMAC",
            hash: "SHA-256",
        },
        false,
        ["sign"]
    );
    const signature = await subtle.sign("HMAC", key, UTF8Encoder.parse(message));

    return HexEncoder.stringify(new Uint8Array(signature));
}
exports.signMessage = signMessage;

function getRandomAlphanum() {
    const possibleCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

    let byteArray;
    let parsedInt;

    // Keep generating new random bytes until we get a value that falls
    // within a range that can be evenly divided by possibleCharacters.length
    do {
        byteArray = crypto.getRandomValues(new Uint8Array(1));
        // extract the lowest byte to get an int from 0 to 255 (probably unnecessary, since we're only generating 1 byte)
        parsedInt = byteArray[0] & 0xff;
    } while (parsedInt >= 256 - (256 % possibleCharacters.length));

    // Take the modulo of the parsed integer to get a random number between 0 and totalLength - 1
    const randomIndex = parsedInt % possibleCharacters.length;

    return possibleCharacters[randomIndex];
}

/**
 * Generate a random string of a given length.
 *
 * @param {int} length
 * @returns {string}
 */
function generateRandomString(length) {
    let randomString = "";

    for (let i = 0; i < length; i++) {
        randomString += getRandomAlphanum();
    }

    return randomString;
}
exports.generateRandomString = generateRandomString;

  return exports;
})());
const codec = ((function(){
  const exports = {};
  /**
 * Initialize the codec with the provided cryptoEngine - this return functions to encode and decode messages.
 *
 * @param cryptoEngine - the engine to use for encryption / decryption
 */
function init(cryptoEngine) {
    const exports = {};

    /**
     * Top-level function for encoding a message.
     * Includes password hashing, encryption, and signing.
     *
     * @param {string} msg
     * @param {string} password
     * @param {string} salt
     *
     * @returns {string} The encoded text
     */
    async function encode(msg, password, salt) {
        const hashedPassword = await cryptoEngine.hashPassword(password, salt);

        const encrypted = await cryptoEngine.encrypt(msg, hashedPassword);

        // we use the hashed password in the HMAC because this is effectively what will be used a password (so we can store
        // it in localStorage safely, we don't use the clear text password)
        const hmac = await cryptoEngine.signMessage(hashedPassword, encrypted);

        return hmac + encrypted;
    }
    exports.encode = encode;

    /**
     * Encode using a password that has already been hashed. This is useful to encode multiple messages in a row, that way
     * we don't need to hash the password multiple times.
     *
     * @param {string} msg
     * @param {string} hashedPassword
     *
     * @returns {string} The encoded text
     */
    async function encodeWithHashedPassword(msg, hashedPassword) {
        const encrypted = await cryptoEngine.encrypt(msg, hashedPassword);

        // we use the hashed password in the HMAC because this is effectively what will be used a password (so we can store
        // it in localStorage safely, we don't use the clear text password)
        const hmac = await cryptoEngine.signMessage(hashedPassword, encrypted);

        return hmac + encrypted;
    }
    exports.encodeWithHashedPassword = encodeWithHashedPassword;

    /**
     * Top-level function for decoding a message.
     * Includes signature check and decryption.
     *
     * @param {string} signedMsg
     * @param {string} hashedPassword
     * @param {string} salt
     * @param {int} backwardCompatibleAttempt
     * @param {string} originalPassword
     *
     * @returns {Object} {success: true, decoded: string} | {success: false, message: string}
     */
    async function decode(signedMsg, hashedPassword, salt, backwardCompatibleAttempt = 0, originalPassword = "") {
        const encryptedHMAC = signedMsg.substring(0, 64);
        const encryptedMsg = signedMsg.substring(64);
        const decryptedHMAC = await cryptoEngine.signMessage(hashedPassword, encryptedMsg);

        if (decryptedHMAC !== encryptedHMAC) {
            // we have been raising the number of iterations in the hashing algorithm multiple times, so to support the old
            // remember-me/autodecrypt links we need to try bringing the old hashes up to speed.
            originalPassword = originalPassword || hashedPassword;
            if (backwardCompatibleAttempt === 0) {
                const updatedHashedPassword = await cryptoEngine.hashThirdRound(originalPassword, salt);

                return decode(signedMsg, updatedHashedPassword, salt, backwardCompatibleAttempt + 1, originalPassword);
            }
            if (backwardCompatibleAttempt === 1) {
                let updatedHashedPassword = await cryptoEngine.hashSecondRound(originalPassword, salt);
                updatedHashedPassword = await cryptoEngine.hashThirdRound(updatedHashedPassword, salt);

                return decode(signedMsg, updatedHashedPassword, salt, backwardCompatibleAttempt + 1, originalPassword);
            }

            return { success: false, message: "Signature mismatch" };
        }

        return {
            success: true,
            decoded: await cryptoEngine.decrypt(encryptedMsg, hashedPassword),
        };
    }
    exports.decode = decode;

    return exports;
}
exports.init = init;

  return exports;
})());
const decode = codec.init(cryptoEngine).decode;

/**
 * Initialize the staticrypt module, that exposes functions callbable by the password_template.
 *
 * @param {{
 *  staticryptEncryptedMsgUniqueVariableName: string,
 *  isRememberEnabled: boolean,
 *  rememberDurationInDays: number,
 *  staticryptSaltUniqueVariableName: string,
 * }} staticryptConfig - object of data that is stored on the password_template at encryption time.
 *
 * @param {{
 *  rememberExpirationKey: string,
 *  rememberPassphraseKey: string,
 *  replaceHtmlCallback: function,
 *  clearLocalStorageCallback: function,
 * }} templateConfig - object of data that can be configured by a custom password_template.
 */
function init(staticryptConfig, templateConfig) {
    const exports = {};

    /**
     * Decrypt our encrypted page, replace the whole HTML.
     *
     * @param {string} hashedPassword
     * @returns {Promise<boolean>}
     */
    async function decryptAndReplaceHtml(hashedPassword) {
        const { staticryptEncryptedMsgUniqueVariableName, staticryptSaltUniqueVariableName } = staticryptConfig;
        const { replaceHtmlCallback } = templateConfig;

        const result = await decode(
            staticryptEncryptedMsgUniqueVariableName,
            hashedPassword,
            staticryptSaltUniqueVariableName
        );
        if (!result.success) {
            return false;
        }
        const plainHTML = result.decoded;

        // if the user configured a callback call it, otherwise just replace the whole HTML
        if (typeof replaceHtmlCallback === "function") {
            replaceHtmlCallback(plainHTML);
        } else {
            document.write(plainHTML);
            document.close();
        }

        return true;
    }

    /**
     * Attempt to decrypt the page and replace the whole HTML.
     *
     * @param {string} password
     * @param {boolean} isRememberChecked
     *
     * @returns {Promise<{isSuccessful: boolean, hashedPassword?: string}>} - we return an object, so that if we want to
     *   expose more information in the future we can do it without breaking the password_template
     */
    async function handleDecryptionOfPage(password, isRememberChecked) {
        const { isRememberEnabled, rememberDurationInDays, staticryptSaltUniqueVariableName } = staticryptConfig;
        const { rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        // decrypt and replace the whole page
        const hashedPassword = await cryptoEngine.hashPassword(password, staticryptSaltUniqueVariableName);

        const isDecryptionSuccessful = await decryptAndReplaceHtml(hashedPassword);

        if (!isDecryptionSuccessful) {
            return {
                isSuccessful: false,
                hashedPassword,
            };
        }

        // remember the hashedPassword and set its expiration if necessary
        if (isRememberEnabled && isRememberChecked) {
            window.localStorage.setItem(rememberPassphraseKey, hashedPassword);

            // set the expiration if the duration isn't 0 (meaning no expiration)
            if (rememberDurationInDays > 0) {
                window.localStorage.setItem(
                    rememberExpirationKey,
                    (new Date().getTime() + rememberDurationInDays * 24 * 60 * 60 * 1000).toString()
                );
            }
        }

        return {
            isSuccessful: true,
            hashedPassword,
        };
    }
    exports.handleDecryptionOfPage = handleDecryptionOfPage;

    /**
     * Clear localstorage from staticrypt related values
     */
    function clearLocalStorage() {
        const { clearLocalStorageCallback, rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        if (typeof clearLocalStorageCallback === "function") {
            clearLocalStorageCallback();
        } else {
            localStorage.removeItem(rememberPassphraseKey);
            localStorage.removeItem(rememberExpirationKey);
        }
    }

    async function handleDecryptOnLoad() {
        let isSuccessful = await decryptOnLoadFromUrl();

        if (!isSuccessful) {
            isSuccessful = await decryptOnLoadFromRememberMe();
        }

        return { isSuccessful };
    }
    exports.handleDecryptOnLoad = handleDecryptOnLoad;

    /**
     * Clear storage if we are logging out
     *
     * @returns {boolean} - whether we logged out
     */
    function logoutIfNeeded() {
        const logoutKey = "staticrypt_logout";

        // handle logout through query param
        const queryParams = new URLSearchParams(window.location.search);
        if (queryParams.has(logoutKey)) {
            clearLocalStorage();
            return true;
        }

        // handle logout through URL fragment
        const hash = window.location.hash.substring(1);
        if (hash.includes(logoutKey)) {
            clearLocalStorage();
            return true;
        }

        return false;
    }

    /**
     * To be called on load: check if we want to try to decrypt and replace the HTML with the decrypted content, and
     * try to do it if needed.
     *
     * @returns {Promise<boolean>} true if we derypted and replaced the whole page, false otherwise
     */
    async function decryptOnLoadFromRememberMe() {
        const { rememberDurationInDays } = staticryptConfig;
        const { rememberExpirationKey, rememberPassphraseKey } = templateConfig;

        // if we are login out, terminate
        if (logoutIfNeeded()) {
            return false;
        }

        // if there is expiration configured, check if we're not beyond the expiration
        if (rememberDurationInDays && rememberDurationInDays > 0) {
            const expiration = localStorage.getItem(rememberExpirationKey),
                isExpired = expiration && new Date().getTime() > parseInt(expiration);

            if (isExpired) {
                clearLocalStorage();
                return false;
            }
        }

        const hashedPassword = localStorage.getItem(rememberPassphraseKey);

        if (hashedPassword) {
            // try to decrypt
            const isDecryptionSuccessful = await decryptAndReplaceHtml(hashedPassword);

            // if the decryption is unsuccessful the password might be wrong - silently clear the saved data and let
            // the user fill the password form again
            if (!isDecryptionSuccessful) {
                clearLocalStorage();
                return false;
            }

            return true;
        }

        return false;
    }

    function decryptOnLoadFromUrl() {
        const passwordKey = "staticrypt_pwd";

        // get the password from the query param
        const queryParams = new URLSearchParams(window.location.search);
        const hashedPasswordQuery = queryParams.get(passwordKey);

        // get the password from the url fragment
        const hashRegexMatch = window.location.hash.substring(1).match(new RegExp(passwordKey + "=(.*)"));
        const hashedPasswordFragment = hashRegexMatch ? hashRegexMatch[1] : null;

        const hashedPassword = hashedPasswordFragment || hashedPasswordQuery;

        if (hashedPassword) {
            return decryptAndReplaceHtml(hashedPassword);
        }

        return false;
    }

    return exports;
}
exports.init = init;

  return exports;
})());
            const templateError = "Bad password!",
                isRememberEnabled = true,
                staticryptConfig = {"staticryptEncryptedMsgUniqueVariableName":"bf901b375d13bf1ab6c8bf080fbf9574973a0945aef4fb4da1a9c580e6e83f142cebd0868db04fefa9b647da8b97612d0742dab4664f92628ce1785fd8a3623c26c0a5fbfa386d298ec52a3826d6a306f3e3653ca3e4bad7b6f2bc2eb24e352bba6b3b92a014975e490413015d6ac95b6c79abac019f844e98c26572a032d5c2c2fe28dea419d5007499861fb97b63d6b53d16a52cf44857d0fc2e0627cd4bb2801ce96a89cff5fc6e95a4935bf912747dd0d04c77a4d40a35cc07cf1fa42f1076817fb3c70a613c73e934ab90a3d9b767975fd51595b6d80cec38a9496cd78ade6ca966b5ff7a10793aea1306c4912447fab8644212f9e330bb8a9113ebbd5d877fc74a22b7ae9768d0892d2ba1aadc2f6a368fd157b48894d4a66ebf475d32b67bb66d9f757b046757d36785382095a2ecc62673baec7a51d44cd5eba6cf425191d250c2c1f54657aa09cf9c53c037e252bd8ff9222bcbebb1580d7bdd75a5d2384a4eddb73ff6afa02a2c7bf4c2c11893d15e02250ded03d4a7dce21dbc666c60d28b5f5777d914deda37b60b54dcf74aca0b0a9604224ad8f3f08d638ec0c0f21488d522c55e3e100a7ba25aee5002f0b1a5e57a0b1ed1b7ff6c80c6247cfb5c359dd1fb235135f8a09716d5b2d2a066bbdbf6d9d4f3b57061652a26784112cef5a262208f71add27b4965396cd9efef4696c425e04915b915057173a2db2022e33cfa4a940648da54cb4673c0057679f5dbf18cdbd8e47a63b84956e984b963c3529a311800929a33e730567f9351286d4b684388ff4d4f9c8264993d3aebd11b8e22f47479b8dfef2ef6667ff5fb47908590e8c8d148fb5328737d16f6f76016af7270741ca61851a1a544b143661b8619e32cb2e86d3a473a3d572417d7af751974c6c52f74d05f284cf46d07309369fbe69b7bfab486b2956939bd1f635f9cc3395a006d785fbba58e910463c80506ca4f3acdacd5cede8aae5f8b7942f39a76ac4b4041851b033da340e4bf92d4ee89132b4aec85a80636c53c32c15cad182d92ba11e858c5e287a7687db19a97ae426a6f95c42624556ac525c89ab9b1e4c81cba48591723e4beb18971f5e8696d8b803f2ad8059f62ffc0f64735fde0652419680e09b7cda60bfcb9ecc82e690119a5bbfe61689653d5a07b38efb9b551fe932ba507c0118538e8354ca641575fb78ff1a4552a3843b32b3b1e7382dae4dce96c59f85a865c66af60d542857d803e8b195488f96737e77cd12d54b67dc8b352e024af8ee8247c78c4258b4d53ca19c40c469ee35a8f7b14157bbc681e3e5e5c0dfc26164226add3172da18dcc911a2ac60b7f3e5fe2a3dff61e3e4df7d49fd13985cb775ef6fb9d8558ad395b69f8be81caaa35c80ba680477d86fef9ac7bc0e672b2a16cb35d04093dcf359f731db4e80ea9b0da4a08b5f1cd3bb8720bb3580b9026cd1c357b46285ef39af134ad551bc98c19e89545d874591d9891b70a5e5b87a8aa3a3aa61c2fddcf489b1d95bd499e6777e09f16d51114eb4ddf5a153b5d9bb2c33ee02693cde791327b44f6cad6c93304b143179cca8c4f96b0867a204bf26aad6de3b989812633d4c1731a91da244ff9c379431c80087577aa455cda7b178c06b4e9a53a5d8ce1185b9c7d341f9400fce6caea5214395d8d986c5dab00422270b4a66fb11b8e1e1ccd665cfba30b342be4c5849d1832ef2d4f4cc1e1a748aa56b6362cd0cee7b26b7e2ee7667044b0371d4cce3306bd282db47e81fa917a10b041daad017826cf71df146fed9f2def082b4c84b2055531d220f7e41ed6d06fbc2701b8016e949ab7ce152c9776bea29a7eb7e3c05d7aa3a12a287a107297d75bb08daa16b5986015e6c0ef7f0b839402acb04b03c24c5e23d766e3909fbd9e9ebe79159d500e9bf19fa2b9f185ae5c85e0385025969730e7793d4c67f2dfb32895de58130a0e34636726f6dda16cfd41af7221c4bd073527c091c37ef52d25b36d0eaee8ac0d6c23ad3f9454af40cf6d69140972db2cb31b931bba0e3f39bf80c690fd110ae6c55dc470179b22d9bde9de0c12ece9669f22dca1ca8eff664f7b6672632ba200f5a6886af7d0223f7ce9c98ae082c44e4966920ea1b38f427add371f464a02bd6be1ac514dd8b415de65541891b9c5958839271cb802626499d2b5de653fd0f0fa91a0e4069fc93e2514f3d8c8ba09bd16781a75a96497e565c658e1202cee4b7388dd82da19300462bcc2c3dfc55d195f340c4d01e5bbbbe05e3cc80e25f7250ae89a2615d7423ed9d998e7d758a199ce3cfd90d152ab92b3d18fa645113f3a5b3b2ee555671c6c7480015d79dde6126c8357b68b3f380f6b3b973a5906096dc1cba98408a6cfe33921cd62c59523dad946dff4ff64840c63d4fb76eae8da3b2d0d9c93c8eeb2736a26acab40c59c276767283c5a200b29a56acbafad10dd42a774ef7c7b192fbd777196f5a25d7fa6663454d491078200823cbe0a5b32381c0f77ad2456a1b81c398925e197622e35da4840fd819ec2aa75c2f9620178eda505f497b6de59c67463c4acabffc5a96647e14f610939988d94c1ec971083f92869b7cedebb3cb37a41e82dcd8b704b5c37377a75f3eca30474b2eec4f73630c9a9408139a5d30d64cb398006e391ffbef72dfd9a0cb06f85c8a536e6361b4ba0d50d3b3b119fc2299eb9d7bd61c7e203dbcedfd0dccf925fe0698c2a47e2606bb8e9ead552bab9596a21f772e52952ee01fbc8de1a07cbb5ae3df624372d357c8db8fe00ef702255e76cdab924452d5fd39c3da0fb2e61a4dc05cbbbabe8d4fdd0814d1f12deaab862472dce4329aa7765ad55d2c4a49e306857e7a6d1550e2c30c4666b3b6540197534ee4d653f7fa9fd4411c4205fc561f1e87c7c61f7be1346185f9a9429c68edb609fe0a0367ebd58295080f0afd7984db658980628f4f249a552222374eb1b335588f14b3ac609db16d51a586ab1ef3b23d72fe9ca327742abcbbd0aefdec657e4c58c349bcedbe797c02b1126854e016b42906b7396c977d2c5faae33396a0f5f21eebe7a625dbd80fccff1336de06a14f99968722fd895908f52037828eaac4fc7a7e5b0286bb08a9162f10b3fe86b01b9cea282dbae70ef21f483827ab78402db575efa72aa645814cec77e9f114cdc4339ccb52214a264f027b992fdba71970e727e7e58914d28026469813cedcfb72ad57d874d653569d2b617c309d0736c6bf91eb3c59189aef4270763df5f4fac58c2c23e7c5c256cb050e651c18a28c8164e1c1799523617ded996358d38b1d97abdd8e5f579e3d5d9af16a0c279554b7974abc8fa5c3e9ccacc3eba425926b028a1c0396c18b15312dbf3c899920dc69db49da9d1ef800d353bfaa3f58b616af3d6ebb9cd45770f43be99f03095deb7bcac7211bfade4b7e422ac96f7421b2ed6d835ced1a65c465ffd287d5b45e8def9836a733654890524326effae6cfe097c24ea4a614794d9e437bd2c87c788226bfe0a14379acfcadc7927479f39acb55c3e82582cbdcd1dc04bfd3a23d5ade20f6398d048616e59a42482556c83edc505b0b941acd699d3fe59a2e846a0b3336bdc1094d99e1da7c0eee9f48e2627a7d5f60fce902a1641ddbdbc24659bc95874cc3d0da99d4fac9ac4c600ab9478db2599acc6192dff2519dbb8ccbe559d74837326e612c0a2ff22629fe150530e5885759451e24aef09f9aed4fdf05c439f643d4bc7ffb42e5d1eb73ced91e9fbc24717afe30c1424d663162dc8e1a3935c2fad62224653505783a63b7d90b89ffd2d3d95b52d3f7264c221c33bc6927cb92a8b89fe9b4d0c4208980fea8f1a648dc709f5849154e502b2a6128db08ec38251cc4f4e045c06ae68995693708358a7966d2384c461da3dad25dc8c1afc2a275c45403fe2313382dd3492e61528b990b165b9295ffd2378da8420742bccfd1a2bbd9d7a000245d623f7df3673908f8009c2546bfb9edc18183ab23d3e11480b85161c2a2c0e1f176681f883a232f3101ced47682cb514d6fadc5f63c225bada7c6d617c7f1713a91d5eda644453368e6d06c7d137010776eda9fca7bcf763d080dee62abeb969c94a563aa17987a1158ed7c470d6397da9bdf3c11caf3ff656e4d2e47a48f1c3a97ac80e81f48c33179e40dc7890a09a56424131454c946dba15123e5508fa0b0f8d6e4e25b214b244b8e99a5428d5ab360c0d24b8f42ef542c63ac271be29f2f807c515de36c11fb9976816177d5c2e398ae576393315c380a260a1abae62deff26c9b348d8b9532ce890469bc75d4bce79253d4cad5b5eb652d3d210291a021c578c71c64a9b4ed8498e5f0cf516ca523527f2c27e20b28c5de18514bc192f489c107eeefd883f08f85f519282b141a7b3a051118f9a3a0ab0b8d7ae2539fb10ffdd078a5cfe52160359f13b44ac4f94337f3e9501547aa821ba9f15be79e1057600b175cb6a89b01389f5ee3411b854f2776122d6c10049fd76e53d4db6c68dc49a873bfb27939d820a7e43b000fbe5eab43ac49591c0da4f5618692c69038f73a7c5e1c949f74a5e0cf7f83efbcf5488763a296bae51c72e0abac9970617e4d691e96984801a392e6c6aaf4b05d747b5bb503e68d0ca83f2082773991fbdf96ced9537dc93dacfd6a14f7313118bfb057ac09775e6cc8b95c3a5f7fcea671a31f6a3bf200610cd8a2505de61fed816af372f91b1b59f88bf1c0bdbeec9ac7515e8d2a8b4c392e4dae9988f43f3617b5cee67665adae2fed0eb61792fd1e5a888439ab58b3b9ead0f5ec7f1e27ae22a06e3726d62cfd74df14b68dec64a268fb8a0820f78b7b2982868d2fb06176d76b5b4a60150f8a5b7d00232ecf624d03ce55b779b0be21d7341f97c04784a0fe2107cee07d50e016fa9ee7f7be32c98ee6582ec244a9529442f6862dfc164d743350230f818e2b30879d2065e0181878865ab784975e38e1ae29a80ce1ff56fd7c86a33d80a6f63cc571035afe8ad3e000461246b4410e0b76b8e96cb82a3021d532296a83dc36c9f213e6eaea4ece3153165714308c16655f8ccb0b8c52cc8656c7f816471a2ef7745b80fa1dfe138adcf5f0c3f51e64d68f5857b7bf8998861a0181868ae9d9033c1cbc25d2850d82de24ac86a437ba95178c063081b247bf1dcda16570f531855f97e16079e1fd1167d6c7268099d83d22ea31feb1d4645aee89da869d9145d763e7658173e90968a5ab5e7386ddc4f1fb120ed7dc7383f00b9669a853029847551074480aaabe34b63bcf300bff50122c310217dd6bd1cdc73b2dc390666c87e29e5ffbfe3694a17cdaa4ffb22bc1d9b2bbea978597c570390d411a532685de605c49421bb9a9b33538952ce08d3c25002fceb821ddb15f44c46d4b4f676ac5dc1000725f5f25fdfe454648801dcbeb1ec67fc202efb7633e3b1f67cd3281fd80d9d022e1345aa9d2fbd7f98e7803a75f5bb5f4747c2a6af94ec7aba336799816106725a2a1ee81a6256c0aaa26638b00028976e36dfa42322ec921430b73095b70d5b53c0d2226402212760f11011a8c9d52dffee67317257132507ca9c7811da0bab4fa2b6660ef3d6042aa42006235d17c6c86873328b7f256c60dd6e23b6d42c83fcccbd11fbb395d55dff0c697716b72c471fc524289faa008343535d0d44e474b7d1d5df0e17ca145d55922f16a59c4f8a6bd6bffd2aaecf07630917ae2473f9f74c4fc4618d7bc5b792efe1eb2901dbe9d8599bce2517b6a87ae7b5bdd8f7369febc82b09c1d5fc2945c5aa6553d7388721f8ef0b7cff5ee47374aac69353140af799ced2e6479f2209cb35fdfa1477aa86dce6b6d4d32ea084e39e6be0f9eabbe2c1ed68c51ed167fd8d008c8a42911e8cb456306fd1c73e14f4ba716729f889daf2c3510284a9038ff0750bb06497cc5980c421c57ecc57046b5c5580eb88e270578fce17be7d3448d6af7903fb493fa61831af30621cfff3037603853090e9997669f0378dbbd2354040c21758ad2862309feba0298c0e8ba422805c33717898b9d0c089dbcfd87d8c7dbeb25bda160cdc86a770f86d3cfb97ce7b592953942a16a5e4defe9277aa462771d3ee28d0dd5abe36e298b70db091dadf94178bbed51d43d93a5a35cabe764fef485d086a1807403b556a3b660f2191860d6622dd2b116906ac4a3b56d955d83a430ff36a77217256d48ab000e76d2c6a8fa2d9fb18e8d2fec047d658b5f950d2667eab4a41cc3b87a9341046d3fdbd07b32ccaa608996c0a325aaaaafa7539903e73969fb1a84b21234672b1198101a377247e31063c7b3b099520ad2ee4b003bc973a486b8fcae9548045f079b11e157b1713fc900367767c842521c13f201b79d68068862fe23ca9d6ccaddbceef859ce12a65e123cfa16b4d86dcd54c72a8770f343e8ca9eee711891c09a63387d55f70f82e7ff054750711a052e65655f7ad8f1a0bd308f5d86d014848e7bb39d4affbe91df49f00e71c4a4eb83329e2ab89b1728d8ec7bc519501c5adb07b23682fe6e80eac30df4e8f5250bab34c9dc239936c120259059381df528c9d81afac3c971154fd99d119bbc38cfcf1b24f6620b4f607243e33f7dd3949928b7c43a3c88f72e267193dbbd71015d1e1abb4abecb838a1c00a145f3ce92c6960e14d0ca9a4f0499898bcb3dc0e4dd65440f5bf713f4b6ed2deb36493519114119c6876203fa89176953712dc5bf8ec8653f34ab122aea63a1ab0ff1cc73b32ad611e2a2bfd74ca5493d0a66d0b9d25816db902862ca53eb7ab5c548f80d5ef54e0979dc36cb2350e504973bd3626eef039df22101ef27d5c6441739420bfa72edcf0cddc2518d005e01e7160983d62e99c34642589a8c25ca3b59857d423f312dad3c8cdbaa2d1658b0c2dfeecb3daa163a08bbe303cb0a62f0b7f9032ab599512f4b5d75bc709aa43ea9183fe8f1c91a7fd8d08296d8df72b5111ce139e1514474972197669947476311afd0bacf0709663665fb06f84f46532f1dbd543a4409681a272efbfb5494d0e4ce2f6d786aa1b66bd4b8f0be08d55e608131b2f8a27c0bb6fcb5b6030ef40eba32a23ac6c34488f451975ff26fb5a5d4aa3696bbeab8f902a684ef018d1a3237014342befd392e01bb2200c55674ec0d0b0b95bb2f1642b18eee19e86d5595b6523bc3a1d0a4db7e741bcd2ed4064cfda0b31b40b35745843f3817e7593476e2571715359142be29ea789798dffb7791f6e75bc0a1f7406018b1d831634b9b4e24aae10e485fc484fba43236608949d583f68119047ff9f2d48ddb8549f29ad21b4cf7930da7b59e23a115de3b8b8b57090820d14332dfa00212f372c4374b133908f9f2e1717a7c2411e7c2bc2e35c340052796874266771376ed3bbe13db0790cfb60fbb009fdf66d09e6e07cccf7e1f276b1d285066553e5c9508528a595be649e2009b7d3784b03d3c366ae77a3e0bf808091e53a9d771eefa9e02d30d2fc31467f5e29b5346cc4e33d33d5efd5b7bd564384becb1fd3f6d47060aa25d00c5af57d1a662a6c8776512b35d59cd23e57f6b5f815ffb883da0eacd6dd9ff53df91b3bc1459d23c2529fc51cab6ce111011a045b797eeb6def737203e06be4b3ccb211f6075af2346e648caada591b946099e444aa5ede95048b1d4907560bbab3de07d55589bd37e4c9db7ea32cb56b675cb60d701fbf85fd5a4371c47afad6d1898a4ee3429770f40197c449314866065392e25b7e3a79ac6d7229ee7d9c5ebf028176607e60436ded447302e13adc86a7f594e5364da67a7746a6fbb257baa78d6b9f16a4b612a66fb66cd7a245a8217cf52804f3ee2869fbd97ec280dc8418a8edbf3d31490905e7b4327f9fcef59eabb73dfe7b35620725e7ad0494fc38418dcd792008f943e9d714a0f096be64e883cd970edf969277790aea23a66d1c557e87b9edcbd3fb4b39a3d0dbaafe2a219d8f336f8f1dc91632755e05d2918a7211a3481679d012177bb6584f6508c860fb4714c40f8070434757836286975ed62f7d938ef044448df68b559b7b5e8d207effbf852d478faa1e03bb380a70a0ef1e5aaf3b1f5004027b9494a0c7bcc8acd1b845a34f9165221a7dc8c1516ffc6433463549bc8ac6af3f1210089ebea06b5187ef2001ec0cadecbca7902f11a4226d193392d89e017ecb78e474c55118656899e6a6accc8b48add4f11ca7f216c2c461b53a18eda50fb4e05b1f620148202d20aeaf8c659d254bc5946d2d121ec3ed7812996c7840b39357a001f9e0c4c2c94db9249b20e4f96d0a33abd70aa2040feef6884a707ddb57e97adb82a5caca173f9b797a53a465761116216e5ef403bc241c176eefbc2ff39aebdf601d289a9c6ee75c29bf7aca4a5deb79895a7aa0a341e9afb83d1f4b0dcd1e6392ef9605aae5365957e06ddf14c4b8726a34c862fad3d0af2d56846846cdd025821028d395fc847a137ac03b53138d514d296e685d56ac2b753f17825e9d761f836ca579b2af87b7abbac8d2698aa9ef4e68d733ce6ff094379e340bcecf8bcb7291bb133214550f38b83569c1398f63eab56f49b37f30c9b4cc28615602f45d828954a5ee17b0c2001f3b42f1fd2fefd901d8c47a519ad9e73080f5b97d35a60dfc74195755c49f41d393ab6d301db41d4533a439aca376dd1c82b8aedb13e5e67c23f89c26f94c654fe9c51df83f39f7f4ed5f039e5c5b56a120aa5066eae5f4ce40508ca3eb17aa19cb7f4c4fe374c6f7c1dedbca2fee0290bdd4659312b65f94ddbb462271cf9e9505d2ba3363357ed695ddddf5ce298b880ae29a99fedc57492b3dd9c224a2956e4d58f2c3e1137e31489345ceb21fde574d9c2b25b05468bf3336229084e408ee216832bf96a5a4a5f56d4a064351e9aed0d1c10a1f3c1751306a018e0b8fff5d82396e01121337a50fed069202485f37225bade3b15f1b28bbe1722b4d6eeab8e28040a570c11a5537e3c3d7605a074206d9dfe27b7cde5a38748498d83d319b16632d69fa10439679ec91974280c2e06857f19d47974b65283ee9b0f9e2161a093385a2142517dff3c22228ddf6612eb358c432543a874b22208edd186a31ebea509a752963a51d1e39ed5078140ffe7adaecbe96f206c82ab11c6c628c2a12cb049eae4a761dabca87f739e8d801f81cb2b258b98fe0b9b463e45e6cf9790112fb36aa378a0769742769967fa04d29e4eaa7727a08d0c6ee3421f73ba420f0e92078c00e98ce046c125eeab7e8b772e85452ccdea425657e21b14dda8d8100e7cc33f2b11d5bab4f837f385bf46ff716e2471ab9c46de27fb625af72f15c32d1fa5358df2f7a9197eb20fd2d74c08c8d2dd79ad9acb7af4cff1dc52175cd69f44ef4f1c310e76a0d8d142aef50072fb8df2c47aadae17cdd9079108eef1fc111dc2040e04faf4e2749374dff8598cf75dee8c59f1488a3c1fd51329c596192774877590406b938575731d0474d5bc2249324eeb693245b1e0022227c99ed02e36c5bf75469b92ad8c7127617a03f9334658a5ec1f790e5ae4e8685e5a785d0e6d3133e4bb573a2fc8ed9f43cb874e79b21d9a0fd4f95e6265e83dcce875f18696552ff80096861c02f82fc9084c3fdc1a9ba27d370f63a14c13bdee165a4bed89e3836100c49b9499561a5336c1004775edf3fd53ef65c7172e71dd274063e5320169043af4b9fd7da2359e9a267e77c45bd50f37d93ec07cae7d094021497916c618465326425bd08dc8f0d17a2318f8a23af59897110f5b1541852e8ef41cc32b391dbe049980146dafdc93cd85a2f1bf70c747fd3984d350ad03eba6bd1411408bec20a972047faba302be3308f1064e95ed62c85c90a9a472f2a7788c1ada3d79b3edd8e1f1fb8d676863b6d21ba7a4c54ec5dc576cf181c4adba0c5c94d148f55eba3e6db5c97dc27f0e952369a25e718ee19fe7489fb9517da8d1c8d81c4789dea3ae2fac256a79e7d2d98afdaff42f1a8acd67c781ad201f1db32e123d9e7222b0497ef088c2eb60f35adc7e52d9102a675acdb659baa2179c48141f0d209c4e0b99bb296dbf6751dbcb91806768b7be23810be984d92388bf4a0a08d445910993ffd697ffc24e0c4692b931a0e3f6ae5c00d946d7ef4ba719e1bd1be3547ed10c006a357f3406dc5cfeca05b0bdde7a676dac91e49cf0c8b8ec74e8b79a8e7d74c25987bc6944888727a89cb53e4b07e306467313c095798453c6cd415f7b649e62c39d1f1ae0330accf877f3c8f38bdb7f449c6d03b10e405e8ba61a5fc42e2a2134e555b3e363e36427a1d532da37cf872cf79c94603a0af5411c7f1c494f0c8fd41b5c98122cddc61b2f2864aa9f0c7fbdfccec07b8f9bd66f6f9de38a56b1dc9c3d7da0f5a1bbf81c389e3ffd613f637f4ff12565d3b1d9dc260872365a7a72d6120890fd471abf8d0f213ffb97a9192d7ed0278cc1e8a248389e40d89773527d85f4943cf641334770e9e4d498d2f0952c130079aff044e33a7445c1e2411e0e766f03049896a4ef7f52b22e8cec1ae5af2e2d48a324fba774c597d61fcc34cab36387b10d3cd16a6308943bb4aa46889ed03fb1d0253ac1b28871db48f688f332ce170ab5362f32c3ddfc737cfb2de394de99c1049eb6644ef35d9d6490afaaddedfed2da7c0720240d16bf0333b42138c62364d8650e503bdee3f7b7fda9c0ca540520559ac5f652bc21b3c387785b7af7ca75f12cc1aec835c314e47fcf962b8145a1eb6d9d38bb469aa1a3f1c2f7e91bc577cd875b3c7498d604b96971800539ce3f60e98759dbc5a7069057a0a7c670dfaf13b25019b42cbd5293247d57a57e9c12c4a4e21283b26e305e9a214ca8827e1e22fd6850a33f997aab4b1b915e4dea312743b9902f4e4f35c80826e1c4ea75161eef5b6607c15f382782e5d6f3006f7590c25eb9cd62b21cca503a78694f73703033fe309470c5a1a281576925cbc46cac7c344489ab856953efa699ccc88e6df28377893445c1b105007d78cb0197fe6d3260130edb31a237c2858d337e52d5f96cc10e2c6a7056a9abb8b6cb53af564ed6010ed6d36938c14f2ad8522770da7a50094ba41f19f43fd4668e4a18dc6a99a40aee93b84b95e25dfecd4ebfbad7ccffa6ce177a11dd596691141fa486f52c530e75a1bbf790191cbb16a79aba366f671eefa9622fde480d82f11d78b4f8718e67249ffe16a85d6a3b5c7f06fd69c5c0d8f3c1495fb0a639faf6ff0a649d5b005129afa2a483885af3cec4ba9249904519e9967b122155b46ac5206be8fbc3f3be40af545cb7a32a697915679b8ca3dd9df45eb0327c96cc08bace66b73de4d07141e8c04e443169e54af9ffecf466becfa4a854abf179d6f097c2655194b66f6d61ea52f88ae454096b1962fe7badca3bb82109c14f4fd3691c1c533ce2d58abec794ad530f22861bcc2a48756b30a9211958535d8f1e5eb87d7de472ea3caa82f4742925de9047b7eead6c7f2e03534ec9c0ed7b381bb581aed7f6c2c17fd2b6f06a3735664c2397a6c7b134637ca9dc8db35f03ee9dcbcf881785b615972e4daf634dc98bb20e065456a959f51451ba37e90834cd7cc42a1b6bff0dcf936318832c0caaac912b9bac3b91ec5664b76713af2bff5afa1f3800b76b970771ab2a35a46c4684f362215ba1f8b7d9a651648938a3653f67bd346f3b1e154102631216e5dacc9466013b889b071d5d01e3e34a56ab6c350670f50d8bcdcd0d917b151c5d22415083719fda1213e1b736e61c8e10e6e2c81e1309e4750bfd194294cc9a6fda5fb9725bbd92d279e8d63c95b5da84bcfe91a9b9eb582a46a3f8083134084b8281f1e1c41e127145692b8eee631fdaefad76154c6229c568ae88705b7aed6e8973ff8b6608874b61b4fea0945c292052cf1845cde826b4821c3297901106221e423741250e2a27ee864b5e0a71985050dd669d754c6fadc6334627784adb714e5873e045a2a05ad8c4802841451ecc916ca080b13a102b17010ed2f0836691df8d9f5bdf666bd851b0df04007bc76f7014d087bae194d082a0fb2268592f6d06827f4344db3060f1ef212878053bf597813fe6d2a12ea280fd19bfa9281b8ed7cd63e814b414492da6ec3ea99a521a93dd4d6e756279dc1c1bf60e0bc8dcc5417964339d0d29437b8d7b672a967e6fe72528e5b4348fe7cdf67a0eceadb410fef702db72ddf9d2b4d5bab87f41862397b33b0dac7de61cce55e7ae07eff26ddbe38019c4a601632a8fb40116edf1eca64eee8e344eb8d672fc65636a07d3c4f84654dcedd14d50d853a7b5e743432ca8d876a0f2e297e57bedb66f040a19e0d1092258b7171dcba58e7278928fa5cb51a5505213701fdf9697f29f527e5c85daa303fcb70d495985460687c0fcd1e82ee406caebd161acbc79a09207195af04ecf8046e5ca033ce1ec288971b938fd54cfe4b06b8405d394d004676696962d1fd37f840deb6d41679a5f9dce6fa99b51e65d3b669f900739bb77b17777a3af81dd91ded4ed2b8149a900a0aa4aca48febabe90f37d943173978345b830cbe9ee7aab8fa573464326192ef7d13140e745232ff215d6e09331f6f26584e29ad17a3996c5577212094130f62ad57e799b933592e645a34c3c7d50240e6bc6e9d5fccb0c3b5d2e1cabb5f80044e63fed4ff103f934fd7aac76186fbeac1726a9bec05e5d594823c958b375dfed25e9bee4c0913695d9db72b16f1dd6943da22faae512a26b53bad286328962ca9ecb444853da9ab48219c6c17d3f036cfecc5965fe6e74c11153e7972f5a449f3b8edd5413deab3e673a35e470bd797666d2ae145d6a2be6c9bbe52a5be7bd72f7aeb7d17e35d76c95b7a28bfc99454f81b124fbc8e0a697cbdfddb20b98026122c4c805d44d1898a729f6083714ddcdad647976d11916cd0d0b7c796a3f334da94d36d4a22ee29b469755bbedd465ccdfeca2340ca0c268e1a8e1fb63e0a40d23133ed80a9d65707547ac33ee81dbfd8563dffb5426be2417c19e404c6ec51096b902cdb4456d4a875aedfb263ce796d98c38a32d589afe7491bf5ba844032cf21119ce3a56dd50a73e3dccdffc77095113a225e65f506f0c58e262b529dd218f86f0a2691ee4a86ceb3c4e817753e283df0e33d5d71dc5f46be6a01c746c155ec78f87d01b89725afd01a1b7fe6014760d9a6204bafd71c96cb1f78339f2476297ea49f8f3cbf2e3889078e3be6e13f863c2c1bbe90b995743fcf1411ba6b1bd3ae79263b2e6ef529f379d96421351e9450d50ad7b49f27d5a561facba96f4bfd5041a27e3a7a25f60fcbfdf2ed34a8c00e678f8e735832f8002706b52756206a504c711f0943ddb41b611e8f3415fc372f8cd76fbc21aafeff737232b47202316cb813ae67006bbd034e070adb3a2d914f0607ff218002040060cd71edcc8ddea11d860ce73b2b4e6150216e6365d384912c0c0c6db2f45559574d2fdcf1f8b02618e370e0c25c02eba9891cfc9453d59f24d2f3afb0b59c308c06df36a9a5e711580988dca0ebb05abb2271164ecc6768586c7ed052ed0e903ef81a7b8716e32e5d7eb8210b14fead6e177d8514ad253333499b01dfcccf010d69e953c603def67136efbb9029290673612220d92828d5b8eb4d062d9183364f9e75a2a3a846f268969c19c01df6c2a2c88310451f4673dca52836e0e8be1e03b16421edbf972a75dc38ab1c09839261f4af519949078f98479d45c9e25fb9733987472cd36de1bae80e54062b869d23be20aff7ebb4207f27fdb09c1c33ce7d275f1e356b73a66d5966ceca34ec45dc3d0031581c7ecd240bf962b202e7c452024d5af39ed999a5f7d42d938ab96ee31ad1528fd7ea8e82e82fc3a88d77cd4b1bf42ff4f33d8826d675b22c8fb3ff24d3ca0a5f33c8a338f26057032fc538392fa7f47d38d1a0a3b72cba0e52d3395892679f01c26ddc7c06bdc09f7b13b5980362586650e4f3e0bdf7f1d362b3ae67633537c46465f3574e97adcc631aadbfa166464a3559eeec4763bd1f01c0d490347b4863ea95d11b0a30f580e7be8568e575c9941825fca20438acdff88f545fda526dffa6ca3f6e5173b1da8899f48e5ebedae22c26b2e8ffe81e9ba038e4cde7a3c83b64fb044f3e89af63728284640fdcd89176c2625c377afe6b830365904d4c64f78f0809872e5179c6748709ff701e189f0f464da323452b26281e2277aa39c08c645b571732c28f4f9e59b9206bf742c075f5f8e0260d2bf4071d139f97464293e8cbabc82021e798f3bbeabe352a5b7680ec8053176f9e1dea541155732d75ec2c609a49ee811d94dac8a68983e212ab278ecbf3a4a5d3ef34bd12544f36381916c17854d6568433159f6442a17afb97f486c9e5341b2d0946bc74e9b129d487a21f8e867d03422f139b8176c0bb6aaf95df87043525ef73b8d29509164ab2528bb291402c2ee7e98c82868bafe4e60cf85df81cdbce4ea7a4377bfd286fa5e7f4f458176b5b709af1f32cf34f5f0bb67ec57c46d216c33bbd68a2e7059792f4a468aa5b76082276dd0597605c1a754d0be872270070c212157a5814d322196423ecf040bd1d44c96ffbe7be2dadb8bb718bbe29bf3d5144e5ae0c328b4532799fa033ef1cb665f06d1e2f1a2ca60bb48e444cd335f6d791f4f57e1843ae99910b8f7e82a0bc1dad94c3c2eda655ddcf44a849b45990bf6d99e78a6e35bf2cd05ab4680c25534527ce54afa9415565e833df8029439258d7260807fe1a0e8d693ad3d57cdd1856fd6b270f6a2e1714da6638e364de6df08f4518cb48085f47752b638cebfeb7d92ecf67beae5b8dbd56139b226d5f3c03961c59d6fbbe88a47218c97e6ae52ba03714fdc60e53ef65ca0a308c2d24c934b2e6247a68d358644924be07692756353a2623a99a86308a8aabefc4bf51cb98842f24d25bcd1b788796363d7291af8097a2bf64f57d176cf7ea2cf3f523b1cda7c42b999fa4a9a8342933206b25667b08418fdd739e2c783d5546eb37e9a7ebe38101e795fad1ade26120c9aa93d0f6dd1668cf9518f02e38d539103bbaa86999cef3f83aaa181a9cf956efb3d0d950ac1367e2c3f6a86c75e29e92336e516d8935438da51924535eb0e22933ddca028f4947f710f564ab3db95a1b5276296e5d76837565873ea513c63469b45bc59a33ec5eb924718969ff3efbdd89f32d59f59c70b5e21c99b192d22a6f1910ae6572261f7114dff8cb8477e410e356f64b9b8260196710541dce9398f654d13113e0ded1875da14ed162f6994696a911a5c43f1c58aed417503ea21ba73d3870408e7ad7f09d8f4f8e187bab1220870ddfe8be1b022dfaaa39353ff806c95b29f529cbc4ff359345fd6ab1c9ec75f248660caf67a6ff224d12344b087e3d331cbc989cafdbf68c0543f4d78bea665613ef92d29a67ec2c81d8728ff9e5388176eb4e5d84c7fee63a7ff356553bf26a9be162bcc39c8f8efc7d314acf98c8d1ff02e35683d5d2d4f6b2fed49b3f9a85e48b48bd44ba37acfb3d883d66fc1cb2d16ba3d5a5897a8cd7025b9a67271882e649de5952b3e4e9828346507d774d1b6361d463811b5a7a3b32f9b127fb01350047828762a0f5587fe6424aa4cd2abb600f10eb05ba6fc2ec0315c9dd9f6e696f597f834d13424d61d691bbb3a5cd5aa6499d73d6f04c48ce89dc5da44ce77a8cbba275614d789816afaa0f8939a30bd7a618cdc7873b85443079f202c3fd1daff3f032bd84f58c5c1af632072ef5d10d2604917b44bd8c4e0003b625d9ead23139ee43dce4b61ec8b29c2962f99173286fc4d9cdef06909dd4fa5a1527c84081dc4ad621be5fa450fe0decf623cca252b8724cad69c459fce770496f5fc68e250b706c52ab09b8ef6af55033804b9fceac2e00891d291edf044f212f0199debcc016eec1627fe491bda79e27da39a274c5f8b08f08b976059ed4e70d5e165fe08e7797c4b5ccab4cb29d0034d156f8d591f4725d0c6148a60606102490bd4d8a8d90ad2e4bdb4504ab95d837c49da77eb5ea976da811d3e927f052d02e7c2234544e0f553b487dfde74839a0b311f352c3e153b9d941caca5d599e63516c07fce134a2786b324438815eb60a63853b8c7604ced47aa373452a26663074d3d8122b21e276a495dad05ee884c8b4d4566bb868c8180fc94e6c61172d79b9706982df970fa65521f8785f3a01acb0ebdc9caef1af3698510cbffea5b2f401357e7c1e8d5a73b7552d1aef52f1ea935868339c6940a4fc55b942a158378c7dfc94b0042b95414a9fbcb338fc60e05e64daf900f695d8f7a1094defbc8d4e958f15ca109892f3de839cb7d69c9c72a1fb3602a1e6b909f68065ffff071091c248d0b01f4465b7d61e67903e53e80cb445676278ab02e16ecc79e9ca43dea332dacd6caa318852204ff8f88899454149448fd966fd2fba8f4b9ae3e8adc9858b7490f9b6c31df6a0e434cd32581f10c81de77a0e04e33014517e214e39dd380491c3bb599a06a78243727f398ec884f0c5c0d675c4afbe98ad702410cef8d9048fa177cd82f8f71a842f48cd548695cdee3cdbd48125482fa694f9948bc4a7755d9cb7b1a2aa961022b1b69284a843a09f45d67f245dfaa8472189988d94258ba1a55282d40326fcceb3363d6ce443efe164522165da58901e20307607a6791555537a634f90ffdbc3c042209e9b5180897f4bb4764df4abe77e083b625bb4f4d97108779ee773f6ab3fa42c64d020208cd6ed0e3bd4ecac674de9fbadc4a3f66911fbab68476b4238091478198324ec106995676aebd8a41d4c7ec29d1fe039ca93ab95a197f2efaae56533a1967b3080c533ecf659476d2e51c5f3cdb3399d4f43c8acf8823f42916275d70f3e30a161f74d8aadfea8ada9200a6471f8fba9a1171c24a4f486d984ea82c3facc2ce42fe9735a86f78e1f1c1f64d01006d7bb35485b0f9da473187bdb0db2fafeb5525447b8035c66654e53032489a81720668d5efbef2e99889434d309d4ee14f2dd03ad7f00ba2a2c21ef61003e6a797ebf57571b4039eae892487f6e130eb41c6c0a26689ea4daaf90e597da484e5a696cd42b11e8f3d6c06a15fffcdfe47745bcc6eef6588dbf3379cb75b79f5a5ae484d083c3d5a6ff6a5e3dda15c333ba4d4d5c78c259afc4838460b0cfdadf2d35becd703113bbe92c34db774dc0acdfb22940886d4106e9827cedbe7100b40242e4be33e9751e541dea44485bccbc1a6b6b9fc22a53c56e45fdf6688b64b7231845d851773bf4e20720bfa76eb996a246ab5f199ed321701a9eb278543ff2ad075e2112697f71b73b3ff4d8df8c00528dc4d9954f37878b1bb80d3d4306a2809b6489da8cad1997961f6f29e1e7bc5f86443decd55522d0acae22137fb80ff8210c231230e9e6aa312a8d3c269484b80e38e40164d84c6977b7b4fc9654a84a6c1a439d2db9f534499e5afec00a897f3359055d4dfadbc5b874d34e2e118a08a31cffc303345cdb073961e54eb2caaa9f307cfda6d21ff17c6fecef579e1b25531bdd890ad543251f002694df013c96290a95d09fa1e2943353d2bfc8cc55184843696a4ce3796103819749a3b8c372cac4ec79f4bb3f85a0fca41c765f30e08540a46331c3efe7e90c7672770572d7114f8fe8a42e0502ea6ad9db05ebd201eabf20e524c5981c21a59b6c4b9f09f96654f22b5da483f5638b45e340f6fcebd54526e734c31201bad266b73741d776641d04f2660d0f1332c9d5f61bb3b51f1167bb5e00243dc9315f8e295c1132f5dcb0152aa76b0fdc16427043470ae65f0445c238fc59ff928a5e1cb99fcdc71c1299016891e3ec90810bb8f024da24d5c563239381d1caffcdea0affa2b8824f51da23acc69b187c23e132deca96ba7e66a9ba4c4c4cdbaa7743caf3b376ab1f31dc71097c8bf3bf91a8be2e166abad145df9d3f73973c40feb5c41f13e36d9918398cdf0aacc34993ee1d7c25dce1a11a6905c334079e5ef2041c61c43b2339b5d68b0594b58832f258d423d49f4957d0f40cf6c6f4a107fecaa8c65a2f7b23c978dfd6feaa85d6c532d09983998a9d41565b0e17fa71dbc39106424506d85ed0f344ed5d69fe572333f8a6b54d5cccfc2c701b44b0a4247f6789d13068be667dc90d3025ecb9a448d49b55498b8fdae17b19fd02a7bddf4d627a00bf62ae70cb0585917a13cefdfeed5c8eb1a6ec9072b4b58ef58523690ba48eca605c5d9317319dfe8c07dab72456dbf9f0d27162611087a5825c7bd8304827e06dd0f3700c863a5fd05b6b96a85af9c0db01be3cc124626282fbec2f1aefe3df5c65df79f709bf6758495f7c5e5378e820b3b76b8f119cfa94f1c46e4aa63b29434224a3869946b054384857173748deb9b62f6f1dbad8e0662d31058fdf41222c5abc2ee30b86b87c5b0f847f057956575068478906efe2e6b2f24f95038fd97afd19536ecd1c4124abd991d17fcceff60195d05c6ab88ea4b682d88761e3409cacea0d9c9c0dff641abe7fcc231b27faad20e16500b8c9c38e1c82c81d5279d53aefb17d5c81cc816e8d9b55d035b768006384a246e1496b3d1f4aa3e2a165fc8744d5b6a288e321c26f9b087c599d55df1f1b9c2caef34adbacbdc4ef13b9a912cdca64f239f05b8561900eebc89a0a021299c9d059493ebb64f625c6fb66d9dd17eb5f05c13c71126fc46e4973b60ed966c8a92a0c6769a65ef63296e97595eb0f74b0faff7327edcec97578851611721733222c6d545aaaa87553f3af23d54cd94148b7c5649863c0109f09887b09ae41f6c709b39c61e6ba72be6018617a66c7bc6e46e675e74cbe00fba1427f9fc297e7c1941680492d73ae4dcee9df131f73b4d8c038d224a0a7f75faacdf9a3e8b414444faa88b270db7ff5addbef053595b20b6fa524abd1cebe5842df814d6dc0687cfdcbb71cd458aab77f1278912bee0667e8032455a50ce66d0b4ae8b95f5b13e16f192511d0d067cb4087f810331f1c51899dc5b87e6c2a2af39e6a5c271a9841327cdf0fd54dfc4ae2a14732d8abe9677e1f0555afab3da157d0b549242c533d8285866245f34fd21bd8ee0ab71d81af0a163f732e8b813c032cb9478bee17821d9dab819d8179a94f63100bbafb22fdc111876b051da84e0bbedfe17f5515e2630c905d8dd397247b9668f25cfeef150edc66c4c5a1a64fafc103d0413a00bc9171d4562e57627a4d9c3277bbd99c90a3b21dafe90bddcc3f8fbb181db5e94a2ed92379a883a6576a9fa96151fe077a1a35351f51a63ca3cae5225871de7c0b603e5a3a4eb7e13325ed396e80b90cb5590b885dd7ac5cc9ea17db951530c0a0086861a25c0f5e8bd1ebfb0fad5221fa451e8fcd2d374af696d0d2444b27632da70dfcf78d8bd0103412874a08bf9c344b34075f0384ff627716eeca8eb591362405253bd718dbdfa3395fa3bea3fe24ce918f10b198df1a4190caf70d9bb1303a350d2dc57da8daad2ebf3cd4ffaa9d33409c594714c7c8eeb82bed40538e9915909b96dbf0939f8155a0beb06aa64aa91854a998275dc1dce0e274376273c6e4f5afae80201d27e9bd09e4e9bb715d995361472bdb98eb6af8c1a7679c9fe43da56edc98d6ead05355aad9b341d8e38a24d7a3788479207f75bad6322ad2a13990a9341640978c08282ded7769613a627e601f6142e43329faa735c14e2395d51b5122c87ce8e9cd49b4e7c6187677cd24df4d3d00d2030eb761cd1ace4e1b06c46b29c76e2e07c0f9f7133694890394fab65e195c787ffda0bb9a99cccaebe1c2e6e6779603c9cce9e413df61f7299f250c0de1f573c2effe170559829a89efb08b1569de1c203063f25fb554380a6c3fcc4377f651ad2c27447db2dee292144216165b596dd710e7995e2198b0f6c2123b52f497c6dc773be2072abf46a68630edaca023e33ff6fabc7b82df2759f3f9c78ad8d4c54cdcf872632b87d405c1051f9a2af3fbae6c345fbeb3be8916ab74d22a795a5c66e3cdfe7dc8c8301a0b2459c77ee9d8bbdebc8a8d258833a3d3a325c01c672d2ec32f3548c94f2ad8fc0ed03212d39e2e1cdf31bf8a491956d4aea6df629873c5156585771e88e888191d33ce3248f617a9d700785ed7208f31c090e737b2bbb1d4a23d24b45d9bdf971d131ddf8722729b15da8334d5d2845ea4d94b76357c75e8f1cd69cac728c91f9f7053aab6c8f710c2103ef4ec7bee51db9a64ff0c93e0b933044a006078669d93b9149d3cd1296693f8f23dbb5b48bd009688cda13c9a885cdc34ff855e45b6d81fd95c9c9687456d736574fd1bd6597f4a97517e4d8959eea45b19d0134af16187a4480ec11f4cc3e6f1e9c047e6f46889561622df40352c3e023999f2273eb76d6d438bb1b3a8cfdcf38b67832a39346d7517e0f72a7dbf93206ed38dfcec2e74df259f0effcc6bca471ba9aeaf49e91a9fe0e76215d685815fb230bea8da60d7cb805004881fe008abbd3c053b0395f5fd85d8e44935d56079f88b6b9bc452cad76cc33854a7d9d94f632e406548a0a06bbbca7691ee1b074fbde3ef04bbce0e451816c82324e3ece12434cf91214e3c4ec9a74f904cfca48a760e8518dcb4d2448688fa963332fad648bdc2085b38182c3eaf1269d60ecab07bc5f85b1352213450c200bc35ffc779fa48c02dbe74b737f0db5ae09bcc2c797d10700fa3b017bad969ba32c9cbbe115ff98bada8a0e41190f69a81f4e02a66d7b6f20ff2bf8e6a0020b64a3bb309d0cbed5c75c4bcf83de4435196ee429d37b2590df7e021b8390f54cf7ca184163e240451ef1530c3ea5319be2b1ac6eab617d97d7d64b3ebb074d34407503d461916bb289a6a41395ce5ee05f33bfb7734571747ca478284667866bb5638d3535d3c61fafbff993dc55f2d3708941e2c9f20e2eede9d0346f482550312b0cdb99fcff418367eb84a57a330afb3c1837f36bf6fc4dec8478acc2e86b03cda8ac132d9d32b81a543d93f9ffba9bcaa998839868a1150a9b3639738fbece50f62233668b59d7fb4b034a705b15ab58d207d4987fc3c5af7eabf0bc364af16c089fea7462c52cf62fda1db95d061fedc6809244e7749fd464a4ee84ad4c634a1884a4a847625c1cb01260894ae4337e64446517b63cbe3b416f56398252208274a756ca3b23d2c2b40550f4ff5ce68f681b84ef34042683b31ad4d129a5be848cf57cddc909e2e4c1b52f6b6023da00fd69b0c62de66bc4e3c7a7b45e45a7ee5b20ee8034cd616aeefd28ef44b1c648c8132da15c18446c11eba192999fcae160a7a5c8c59a89ef49c5e6655d1bf0c7b25e8b07f4b3b9699203536a0a2ad2d24bcf17eccb250fb590645237b5198e4f465f1d342fbd171dc4a9d38ea1c580575846c6cc995ad34d3e2275d915b6e416dc769d59ef281805192b36b8b8a8b840fd3c79d36bcfb5e04ab4f4b004945080d914429b010b8580d71adecd2cf45a55e9b3fe9fa7ccaf0b3104989fb15d136d6e29ed002b39f3b6c35df7c0a2dbc2511b09adca2a431713817e60144b34bdb0355721f55cf0fcdc70b52fc319b8d2390f363b0d777ed7699fe3f60ec213bdeb333891af0686ce4cf2f4fa72d0ea2aaaf74ff1e595fe1dff72b323c4e93c1a28c6f0647ee45e83e1d1effe10082587f82b3ce5e80642f7768d6d0e9fea09170e438684cb1e79675a3fa364bc504d7d5abe7b28a86beb7009b21ccfa274f2121e70d036c34435d3e02f3f8766929bb9ddb8e24eb8b4edb7052422fe21be4cec0a2e60c66c4e2a36ec0629c849def11d6be04cad60ee4e5c02d5a6227b6b6deb92d70baf696f9ac3bab6ea969bae64b112754c67831ad076d29fd1f14267e95020554a528ccf3e7a0480252f8c550c7f857d17c9ee6094d5538e331586c571b94d3c574ef0a21a6acc0cdf08e24f31e7e3eed577cf39580e3429a8ecafc30862468f680c1ef338343d7de403f8c0ce201582f7a9eca2274c49acfda90ab23d72670e7654923ef56f252f98c990e406b008d54933d5027ac3e5050d4434921039d3b75dade374f2e81512be0f2af9639670fd483fa0bf3fe7d10037c6bdd18966cad122de333c64f104245c354ca8d445aadbf8c3572771c6dfd502880af746109c328c00589720903aebf2b036aef9fd935af7bdeecd850b8f7c8d1e021762f13378ecd2b250476a308d3396269479417182323c935e02b750e053340a9ecfd31f3b7b80ae18196ccebcf906b28e6fcbda44df7ef0aa38c5d466459fd746b92c01444826104ac0ff69fb48aac76dda121215a72c1a9f590b6f5ac89397a5b6642cf9bca39b733c06ce54954e9bc1a6c1007e35a907608e247c5d462a7c2f0f9caa7cdafcb93d436f285f1ea76a0bb93c13016bf86fbec429df1acc60830e23d9c6ee0d75d4aab16083b330dbc566c603aba87b839f273ee32110209fa28050ee8a04cca3adff5ae60fbdc1c77357661788ec77dc54b4a44f5e59464377009581239ee32e72355e9c5429777e42e040b77e2b33f50bbe772e1db29fdda57db209ecf68d4904f8a1c6b8064e300fa860f9129d27bc573681b604731afe0b4f8b7cf5b64a8d771eb41a53d4deabf7421a1906576d6c42f9224adc3aabb057fdad548e75354919050e310e7c3248cd22855f5aa14560849eb7ac851ed06d047420c9e1db630f994bba28abce6b19ab8de44645790ff20951a5ce47aa2d15fe394318c352d4b353d0c52b75292f41ec82379398a64a6229360bb31af3434d3f90b071ea9850fcb9db6cef89529d461765cf15daaa63fb32949f6d924573a3edc942d105e7180c954727cb75a45ebc393aab569e2994764d41c89c38cbec730116551d9e25fc9f860721d083c275cd816ef0f547b0940fd5f59bd80b619580690c65866220d7da5de969df2b79422e14a320fadc127771572fa0443edcdcf416461425f4762a0a9ada270f8f6804bfc8196cb4b9ffed9930c4400d646617be3381ef7583738f7c42119557778ce28c9633f46277bab09982dfa4c81e3a14433cc51e4c1374142916cba9911e7929aed0a1c466e8bfe00f9a04818ab5bd909b73432cc10a53df96b9cd1d4d27e40f1f73f2f0d42d24d7eca6d201edb07aac3dd2ba76e7967b45d5ca2a05f8a5b89258fb659d4e1a1632c94bf2d912195f27579d18b946c3ba0da2df8804308458bf1977f0e04a234e352975bfefd24f8236fd0bad0c9352c23aa1a7fe3c28c96fbadd094e72f8a5e1158fa9510345de2a15e2defecd461f61de0ac77b8af1915c594cb4641dcf5021d4566f15e438e109c99e38128537d70a2c9ac5923b69770c7a3644108b4a6784bca7cc3cbb845558a6e408de5a17da2882ecd116efce6e1f87fb8fb18365caf9f15ec02f95a1f7f94e26a69f12cfbcda72de3aba258d5393f69a689078fec8decae9517d700b963908475f7ed6b6e5aa33d69d1f1a73b937c32d50bc93a7075d86f46b2483b8c10f9702578e0ed0d4a8efee97a745dcfdfa7a0bc92c92fcec32fbdbc2fc58a0361211792aa919a57ddfb128be089c356e9ee39da2f8d905f6e16f4292f216b0e25d623c3427f787bcd95ecac4725b44324f09b940c5f06b6dd388a970746468e3664d47e12c7de82094121465918ac7d497e9758beb0a0d9203f719cf054c0d8464fb28188dc3fabb943b07e4e53720c3812d00b43f1b4a8d1551478551b89ea0ee680b0fbd207af95d98ebf12b4213732df6933d2434ccaea22cc04f10a0650d5e4f93f24f8ed1b934c2255182a67867becf0d92a012e1dee431b00c32c520483362e9ce4f032781da0af94939270d0e7edb300e69e46096771c97faf61fd294cc04e487a42f9c6a50276ddf60a368f15c6bdcd648427664f07b14a1ded6c1754a49ce05a994c7184b9598756a1e0277f4ad54698a850c66e4e849095abd9e1812b9be63d5be07e917d9dcbb3ab1c28fbd56d733593f2e1c29e2828accec2b3d983b6d74bf789a4796ad174f34a4d8b947c2d792d1fa0705e19865f3225a23c326ac4cb9f8cdad74e384dd219bc91b67849ec8a7ae9da7d133c966a312e2e8f2d3c46cdc8bd44501bece3caf5b28a1a7b837cf296447ff096a243450273c3be85a53d79bb0fb6b4121cf69c2bd3cb86508743909b6a7e32f50aaff81b8527328b3956856edcf1310702c936d7e72cb2724fedbc7818cc6a0d57f691479b934c50f62c1d4fee8e055d0a88e114ea1c1f3248721922a12ad25861b739b8e0f4c1209a9552bf9ca6e5cbf7aa410a38b550168699774c67570b771e1d8230d5d04e1f8b631b9bf43477040038caeff604b2162e760e91b33905f0111e91efbf256c80cb12d29340de4f62ff7229f1fd9066daed75e67479170fd609f07b29029dd2985af71bd264438d93382c09989512ec35d9c03bf8f7c750ce4f3cee050b77649265e36a47f686c67d42f8e72b1c02816fd88ed197ce592a6fcc5f928f13d32ec5319983e83aecd431740bb129c5eabed8af637bd52abfd220fc1c7dca9e822f027debb34a6e3e91888f45198c265a0757ea61ca79f15b55bf52134d9e20c7a371c33bf7ff508d41551c7e2a2c8c455fb1a07f7d5eb0cbf136681161f2e34e4ab3a1f4b4b0d57cb245bba27dd3b95330916c3fa3b61b3c499b0438c711b3d9d11621af9d9179279ce5bc435d4daae0c7eee716466d483bb2b56ade6aa77e74e3102d0970398a065340823b1812269fbed499509c41f7d5429045a5ae94126bcef9a00d8d61cd4e6465a4dd0658be05e262d09072e27107de171f61cf7bff83aaa4829f4b3f99175ac0d470df3ad68e785974be2d9c34431ea99017f1fd595ec2b7d87423bba66741777b3413e99c5434babeb9aa50bf108994c41aae65de5c5a4c575afa4f09e2b0b090d8a453d1ae7869a988adbb118e61ea2934bacc8dddaf9189f8f9d7677d7fa705949f4d84be5c05fbff949a7fbb673af244bc002ec4ec2802597272032e76efb977d208dfba281cab2702bb4f5223c31b10d91a653a7afdeefaff0100787b295a951c223d698e1072d3b67754284eefaae8eb570fe05e4fb46c08527bf19daf76155c80d1309d79106535cd619cb691429c84149b1f284b3a24edacff6d659fe4dcb18b0fd837b52a0224e26e0e86e4f87806bd973390b6338c3c25128079ef4a717de1049a49c0dcdfd2b50144425780c0421e76af13f4c081f862b24cdd87aa7f24868344120c068b6151777107c6f67d5938e50e620f68995be7ebfd601a5421afd434dfeed61a0e266d08db2ad6f57fba3ea9cf746412abaf2db3ac00754153ec2ccbfd268c263ffe9f802eff04fbf3a3275852383381df9f1df36dd30185072f3ed72c4d1ec83707c68d53e93c13748af634fe76975fd96f2fc6e3cb4c08d1f33e23c9663b8a02d4cd19d18a59d5c23779adcb5ec79b067781f30f2e706ee883c6adfec08a616dd1c30770fcd92d7a4bcdc152aa6b8601680387cd47794d1b73cae30cf050cbdc724f1d8508b7fd1333d6b96aa79343a72b30fced04f1146b45504d563d0aeb8fbb52ba2d29ee8d8bfb838a01958447099c2cb66aa08f7169a68f262ef6629165adb7e801b4163976ca4f662ece3300b305eabaadbe806d303c53098208c9741cb54ea8987605de47647f981eb570e09969e086679a9fd954e1e7ca0331d85d978e25f409684ad4655eaaf415ce5dad2e32c5a72cc428ff1be6188b634d4d4abd330ca62c61d4759324c9d83ba1965e3ef87f791ddd95e42309df80d50380216f4d3f709068840c537394adae630facd338d0cb227c014453fe5a7c72359979d288aac07fe2dcb0b492ce7ca8fad079305c92cba51d778588acf563ec1d19d20d5c49ee6db72334acc7eb903ef22bcefe0bac4a26caa350f225be79941fc22cb3064b9988e1c05a460a629a50d379c5df3dcf8911e2e1e11c0707b0549efe174715484035451d42e4f23ce36d61425fa2d38470dce25704d3bbcda247c454f78466570b360feb6d105c726b62356d9919186aab1d8be7a7801e013ab79370977bb3b0dcbc72c9871ce68c4f4b125c0672c344fe73de757aad466c6e42d14d411a8cf783f2e397aa586ee212b8feadd6b8d073e1897b5d024b02945be4bdbba35042551a0943bed0956dd57447ab4b8601fa820590c625d3090173bf9478d74b0ad1cf95015568a10a509f7f6a05a1c1a53ca7ad01eae12fed85320fdee4a735cfb1d24ff2dd279395116c1dd310ec013f7cec255d5b41c29840b1c1d16cdd7b93820b5b610dadaaa0c4d7f682a3fba1950b2fef4e404a4375f2f68a7e56e691c84181952e6a7cf5f2641b0d68f6198fa526912cd8b694acd67b8100cdd284cd2b85af7b346cf0dffac16fd9c9cc6504fb695e00dc9eefaffaaa1f3748017b0a9bfbd8b2e4ed5c378ac6258e3c697d5885f30349d0a0b41aa670bef44264ed57b542b3f2b9c9cc743d411448cbca8b642b7d683b19bfd47df73fbeeb9b2d708b6abb5517041a4514ba0394d00b553e281e47f4c245e6b98140c47a7c0759c721f0860039f2c9cb20f1dd8378a8572e1e5de10e1bcb2e368bf4e57eb40a6d13f68978c64084d651147120db24080d01d330ebae6b02599e34a18831d7a8be1c833667500d086f297e788fc7e7b0d7ac5a4ddaaf380b09b21acc6a7b8494c7ec2a7ef1c947944d7d4b51dd6d6512d4145eaa34a3813c0aae5837df5adeff1d10ee2e3374eb883ffdd7963b23a4daeaada265c8a2475f61dc29312bf0189a864e82755f5d869ae2ca6bc32692bbc085ee2c02c755e174ae62eb685ace9e1fedb48f272b44793921a3e808f4f64d7a6924aa018dd140047ad8a42530d02e80ca58ad8167fd3e56adbe41c30f4d6bfa6072ff13c8a68f40f938a1baf08359ba5749b4166b1af9a8591f08f154ccbecf7a73eb4b1ac7e081d0cf01987238b01126ae6ef910bd93070bef3eb111b88465b2113780aebd1e1fee9bfcce948708ed2ecb5653ce19cc6b60e70072880677accc3059823ef5db179ff95a57f9331e0e33e969e9063a942de17b78b2639899d48f3ef117262c030f2897ea2cb1a2ec5611126855c76b4dcd8dcf701ce90117abf37fabbe84ea26dad3a6b80bd5cb42bc3bdc5e29d6a8484a19cb070e26a7378f50ee81118a3fc12b79deda7a8ec847ee29fb1296449cabb2ebfd5920943dfe8c6d2c0bffee10ac3ad3ff114bbc03727c434d95183150b9180a40890cb797791a87afddd27536ed727738495a3d6b6f7f81b0784f9c0bf7362d3f7debeb00a548d955d86c211a0b84a0a4793d56b3307f2bb579403d131975c3aab4dfca90c20963ec48117bb03a96b202c9df6a34e4b3f76d2df22e20fd0aa501747dc5c4f2dd118db0ac7f87577c394c818d12f212c31522fe458a267d5192eea02384350ac6f94f3e9c322df29b0c319b8c36f6a1ce9b55b4c64fa0f61daad574c9cf2a21044ed32ee7f33e34c4e4ea1efc9f22b3fbf8e22129f8f5f8cec26a3e37fdd56880feedbae60351052d794b76d2bc41327a37287ce72d279140ae98e83f820bda76fca8b95a5293a02f24a6bfa0a2aab48bbbc295609b4f62c84395281276d1df78ae7299db6d51ddf77fcb5576ea69e0c64a51ff5dde37fc65582874a93e8adf99056cb33e720ba927123e051c7d0a9559cd6e3a6471f79753871cd09b1c69f55a5071c51cdca813634413645fac8d6e11a9cd3cdffbb175913f74ee8221d925ca9a27efede01a4d463749a9d859bb5b944338a243b2b07eae3d831a3a5e31b7a4ee62a51cb6a262754b688b7bf4398957f750461b22cffa80798d92687c4f64e8b1f7ead44e8c93a3860b55d3cb095f17e35a3966c935aeeb7ace26b0fc47a7949d4a42ac91950a84e45db9ed62267b50c5b74e869c8c1022c6fb462b93bbef2f63afbb12166a464562effb8281e039c62f6bfed0f7e0a81f5fa11ea1575410c98fd8e0f83d5dad9f78935b39e93715feca170fce8975cc7a50af3db354f2fed64ec8b8aee6060b90eaf76660a1be5d40692a92fd358bb65154c1ddc1cd85d53188ca5df306f58162c3b4fe3f05a82a591d04f510c2d54602f69b66ff631a239d4c9fadd004c0c7415c79575250d60b01b064dce2a81286583b3582afca51a6fda77d37fd32031ffedb7fd32271e3e5b17f540812d758f870aaae2dcec9e24e70c05cca02534cf3ce3531f554f0f8fec81ee82c0cc2f3b9e82b8e1d457a85aceb45ffbfaef4f0e233da3bf226e05e037b2c6505c2aae2c17bde0254cf4bc0c7c3cf26354bff3f79f381447d9656c151d18fe59e393e6ecf617254a60c865ed3dfcfd3428f6780350b012a308edee74dad77c664066e02af2086cf4ff121abe7062dc27c1c972eb8966d51fcceba9dacca4c36373a17cf0593f6841f4188f2c5409ce8940cde1e4dddcacdb5f8384780262a06eadbe391627692d2de9eb186d53b4e65384001db0506ecb88763b41680a8ca7a04a80b2284fd81a93b5e3f59d436f40b125a9f70beb9cbe431b3063a953812ab6d23aabe2724d0527f204ae06750404a5dba73bd8bb9f42028377680e5bf6867c1dc797672eaf59494ea54a37f8147041c346a4d73a28b96b35af0f0bd07180187a801b7f9d3ac13e17264e0f9dc1f137f8002e6756c3dafc2f6c673c91dd8d8ffa3fcb7e298cfd8d00ddfdff422116c0f05289ab12dfd43f8ec1b968517a51c2806479e00b4831838ac36a8f97761d0fef8b1918539b3f8dfb0283601d51ec80a133f18452bc8e6b0d4d42e71c2e1082e6d58716eb967428817abb5f4a86155b4e77e5ba355f2fe261cb175a8768060aa8c3daad7b21584f604497ac265950a2f9607a9a96b03c953592eb1ae6a3fe1ba19c3574ac19b046997223e4155a1a719207325e80281a0b38420f406b0af96035356b1a5c11332906666c9d6cedb03734eff4f4e8c2613134f37e7027050228c5e548505194027063de14d896541c541c73e96882bcc7ed10193fbc47b4f69e1a7aedabd3a40b8a9a8c20182a421edca3f143903a2aa4459419aa064a8ed11c035422ef801f5ee328380868b10c89e0be0616ab76c41240cb3ce266d63921fe82db1761fc87322fdbea51a4f61cf55c29572dea85d60a9fa8a956c285500152092a000a46f951fc924513d867417c051290616483484e9070c75e27df6dadeffebf00f048dcbd0ba8b2687f14c82cf58fd1e6df826e0f17f358c062fc97c41d60628d40d8fcebb27b2d660908d094cad02fcd942da65080d77392124c6cf7fe4ba1ec0f3a6f7f55bd8bb9b4ab03a83916d55da6621e1adabe3fb4f9fdc9c357bcee791cdab273520f4714749e06fe84281ec1b2879e5cb54292f19b27e7ad05ce9abbc94d0f5ee99cb75c83a3d55ba43cd675e563661497af0b9ffe4bfe649ac77bb310abe20c9379c617a28140fc04cb2db0687ced870eedd88f1808e2a8763270a40911858ef61fe8b63811deea763a49bdad719ba19ca2c32a503e28a812e864ac9e7a3223adc08e2b1d528dde15f6a2a7dde3962f7b3ec758c2c6098cf75c079df04be538b6dc1245868cf5ba0bcf93f7640854fea0efc9a42d7d7ea74b33c2ddf2b534290d8e52996524d44ada8321d64556077d7e2a7ffb58f47f2bee42874021c62bca9a52495cf6a1f1884594c335cf94368752d6d846c507c482062fb140ab853a70eec3f610237781a37e1434ea58072c812251d9165717df98b59ab79f1e3d7d94133d2e513b9755f660f39bc6ca5524f3979b3aa465022641b3ca33f6e909314334b70b443b1a5359a61a03060c62475da7f6ba5329bcc0b307e56ab643f97f501f2e9d5b6e4b87a4e430934bba6e9d887bf5fd29ddc3beea0ff5243f21358d58082bb8f34ef3e9f8ea4d385ad8090539695a1aac725a202ed15af34b3c81817ddbc35159059becef341b35ee7825a2d72e8eba097dd2295c4b3e58f63bfd6d1520dae5b3f082475c8361495e9f2a7bc4f5305a4e5b1f1622a6cc72edcba3479f05f237fc7a0154456ddc19f83e582b01e13f51fe03d891764c9e44617adbe8a33066a9a1335c0c91df19989c6b4662be5c8984d2e83cd15df77d94611b28f0c3921aff2964c88d84004f2b67ca0a4b53f0cb22e54d1d145566deb6931459cd91673ac8ab32162111433891a970216a7dc7fe136a4310586e5dbf41312788309c282e4c8b90c798585a5073470aa6c704a6ee7547c1cda9aeb9bd11ac99c581ab686c1720a737fb011efa68600f2aa514fd432cfda5e6f4a98702879ae91033056af1e10dc3a6ccd9a1d158340f60a4c1c0ded1d14b7a90b4afeb9f9c67d9cbe7eeadb1cf51e342e923ed6fa17861f33c51f7995a7180f83fbb55aa6f961d0c930656806f22f2a73635d6d323595503cbda30c5a7cfbe7dbbf288677ce1c394cdcd9b27a93967a06c66c4926e0dee7c80688c0a8aa0edd31406ce1515e3258e86885ea70c5002ccc9526838e3db4c41688ef9a4768935fe0163f7a793826afcfb3cf3eb48da37e0c38c12c0e0173cd1d55303156fb71e2989bb6563dced807a54fa72a6a2f358db1c6ebaa7130f7427f918074f787c954d1e7d460d5a1da3e0ad4b90f91f5c661368888e13e95a05abcbed38df85f622484979dee7d1720e380458924b3a880d242e0030db73546bd771840ef5cb93e92a9a27eb91e9fcfca2026519e918f839b255e164c0cee8f0ea0fbb9e3c5045b50895b8d8bc70970c145d59f25faff7004f399938d7c7119a11b9273620aac79db05c16e63d229de4ced823649f4c9aea0642f26be0a0c9bf1033136d18295aa083b23144195c9a9d98d4ceb85b14c0dda571cff9e382950e8ee4e1311df216cc25868279603dc2fd1871df78d1ac8e8b7133467e7739e367a0dd42524d1ebf4248cd20bafefe4c0b7918003bd89ebfe7901f38ad21771ca56ccd10482e95b24191cef4cf4a543541d256999a518d646e9b9f93fa00b8db50ef0414ba5324d9296f95f15042acb17a6aa63895888cd21e473f0a7e08eb8836fc4f9e0fb855732dd99d19d29a75c2ed5df16d4b54c4bfb607f045f347bc31f6ba71acb807721948031df710f379e76ceac9f599d728c4512a90a7fed32109104c1b1b38739f1af5b35dd5a4f5e2072623af40906edbe1a05a3f7337e42e4a016858cd671767da94129544fcd4bfa874362a84f92ce385798196fc48fdd9be6e2b4983c9f95bf7bf9640b26a37ab4a7f3008d1f528f378eb116c97ec25aa7baecf368e1aeb670e9d48c64ee79122aac67ff2feb5206e0071a9269868248762cf96c717518f55f0aaa3d52759e488e76b9a4046a5b967372b696b35069eb240b5d368e06cbbf7711d52bead7f4e7553c096067d47944bf7b1ed75e4ad67a148b68f2fb07da09bea63443604bcd712309ea9e80a9f0943d06963b9f56d2dc5fa940335ec08617c5503fd57f67a0a6a84e14e86695fb2edd7dc45e654d99bb424292d0044ce2b0016b4daf7c80f26d246b5527d0b3f3d2ad1b4da2fc8d78f9b59b65f94fcc62b26ced2876b483680acb2dcf35bcdd44aea3ccf2c83196f9920de565fc77ba07166ce9df458463dfa36389a9d31027c794a991c4944a275b5672ad107e5cfc4700cb142743e318bc49424cf4651b1d987bdfa179786f306fe227525ec4f6eecfde0c7c1eedbcdfccfdee41f34ef29926e4323796284e8ef3d98e6e23a01730106184924ac6376f33f9c4eb2c264cd7f7d4c1c42e34a204db5e2e8e814e6a9cd81fe5b888a5301f3bd60e7414f2a4a5ada3826833b02717239ce26212ad19071e2cc973ff7107d776c0776df26861cb85b1d5989bd2233974be5ac1c88ad5da498872345eee4b37cde8cdad04e9b961eb73bd7685d38df936be468477d47be19b07c43030ad11e6f70b7e7857fb3ee7a639dc83bd35ce5db3e3185f8da326e3aec3c4665da4459c298425ba7cbf46b5c9ecdb608806a680cd7d0a2e7616f73c32cc6687d5c0c0bb18e9efcd9d0a243c003c8b283239de56faffa7025ebace769415be5fb59a47c9aeffa322c395bd53f3c77647d43778096c9fe5e51ea30e577fca81a2e522083277af71e19f6a5d37294a7e279361f25acb66719807ed1216ff72a5f5078d3e5edd7b3a053a46e38d745ce9a3cb272aa4cfbb43c6c68e02f45cfe716da2000eae9a36a3a3a65f80642044eb597406d95546c2802a576c662878df56ca9da7a673e41d2e63382a8ecbda701368c528fdcb070b723f836612f1bceb5714a7d14ec539717fdd0a1ecfec8bec38ce8dc862bb8c6a682adc5e7d491f60a5c8d755362273d881c294be118066b192078d08f23e27f6b3e4f965ad47c93cb09ab8491b0b039b8aae0aa9a6c95df394fd91a2be813a33350953c8e281f0779a508ce2852142d7009120beb3f3e63a6383126e55f4acfb11c8acba8f6f775b05188448c523bbd300e6457310a869e257e355d880d1709a3ae2773bb112b3a47e0cd49d0cbde04b0e7358a3459e5f8fcc4a81fc75aaf7cd3861063a80ad3f8f46968fd04d6e2cc7bb13e1218337079fc6b3c4f30f2bb5649e9d0cbfc814bb2d3cf2b730811619e1953c58ce45ff8cd3547d2c42da8376b7da58c8f38a053507cdea9fefc327341ce53766a9b5084ba71e8618259cf877d20b68f45a0da0d41799b9a03a70b3b2f6a14a0ddc29809cc009f03fa0370300cd5623cd9052a4a51e3adeec3b6a14024aa66b5efb5dd92099d8c7994b13f8ad517aacfb101146ffaaf9cc09718ab6bb7bdf90142ab5be8192cc8b2fb20a5395923a509a91d7a0e157fae74b6a43d1236c75bc24c184b6b7635cb8875c1e3c009a12f1771db773b1770f0e9375d41bb36f7178c7b1e9d5f521e47cfe037ea5df77fde7bbc33e42ee3536ec68d6e5eb8aba6c6a60a13db8cb08b3dc5530c556be869c29be4b715392922d93dd9c258d65b010570fceeb089e56a14390aa91719f48f5e9c0cb27841d8bde0641e24519b95b55602adb5dce7480e8b4177748b48f2d58e5e4581a5887bce286c72621ecaeab64ed54421e091f5db08af1b824645733fcee470c6475f891cf7db25bd2e2ed0c4c9aec657e7a2072cff8ef27a651c526e8a581fe05c8814e1700bb590f3bf97414eec03df67c867cc60e89c312dafa315d3a3beea77def791ab8af898ba7a493882b6bd09b3d99cfadc2cc6a56a3d673a2b217029ab6428a12ef06bea2acc2ca4faf80e73a1e76f3f353a9a7160e72b117bf2e651492a33217927bd1168280cdb77cb58cad935659aa93ac1d63dea1b0f7c7676c8e0c25035a54427dc5a6dfee477352497352a0e497d08c484dd648b70bc3bef5d6f5459490f7c9c276a2688edaa2c7eaf8c6385572a32509145c01cb53af34a52f8a460cf91a775b74d680fbba3768248ffea79cad4757c626cd250affbcbcd0660e6826761534e3e9eea567b3740f6a57aac07faabb9b9027312cc21691f89fc05a5e51d8e8304126780cb6d8ecd5a92c82776c57b2ee2f05809f7cad8d96d6dbe93490a7f833e7487c349d66aee2cd6bf150f896706e057104be399bcdd02c02bf047206f9949c203aff480d79796561115a0e61b62abbc46fc87b06a16e2e2ddfa7dfd57fa8eb6b10a0c7392052ca2fe042fc1781687575eb0f56c09be0f104e8e898978ca9ab30359de4efd7e207c7ac8128524d974fee5d94f4981db1af7cf8b70e3665a08ca6488adb265fef9700a890d74e73e9796db5ef25f3e834a3170aadace4a36a80db4b6e3c4648c985ca14fa344b02f3caeba55eb9d04c0e886b3456cdaacd1b896ddcf54a1c78b9fa9ccd672cf7eb753354c9aa2551cecb7dbc1db4581e555247577985c783de56dc616b783edb7b2ea9099c81aaabc891b78cdbfc4f07bc23658a680ee4ca26d86106dade3d33a6b16012f2ea9e6e1740fda8991ad3a87c93dab84d81896a467c5165f192f148530930d6e735f5f3fe54415837e447187c3b6302364bd82b9a77bbd2afcfe66d8703006fa8d2a623b1e74b246e39ab1aea7910996924534d7855dc4eb8b5a8c80d13ce851e3bcfe08fc77ff747d9bf472331645c644fe93ebe10a78e5f7ed13e32f472f6f62bfd58ad01102452c56e0f2a7457eae74410896ea3bab3f514ee7749b7bd1e0878b59e8921a768c646c518b53a37263e921fa3299a0ec0bc2160552e55e6b91a1d868b9690f68275170c1c7d9c895f4985aa984aae39d9c14758d9596258d661b12ae89de1a9cce7d6c31b0fcc25049808ec9c169272d500eab2a3ffb444843ea8e15bc748cdc930a6095c2612abd3448c7f3329d2e6536ad848ab8f3c2a9cf1f131d27845165571ae76aca1490198f029be4fa14f1d84373e39c9cd835791a3f365c616cbe604e798807c924333dce03db0bc59c15e70467597705f3dcd9d271b8c866fd790ae824846ee74f4ff0f636634e0781bf2dfb2f9149af62f70499bf65c0d5fb9f313dc8cb4ca26478281e98bc49d6d867dd5e80285dca726f2f166c9f7bfe497fb4097178d256f3b5c30ec40b7581ff5cd0c5a8d73bf7d56458a30728170fd94953e855f73658a48095faa81e31009934bbdcb99f6b399cf9e1d839d512882a5f766d56819ee8ec676e0238a274cc096329ee70900635218a1947a2de35c4b055fb82742e34c904ed43d3c84ce454a2fa0d8bebbab1cb45456277c0280d072eaac67be626e60f04088eacf347c61e13c9e77e01d9b67f8819df1d51a32a06c2b3cb914bd9194a7956724a18543dd40eaa2f819ebba1e9755c94ad61923cc4b082b0ec057027d283c2eb35f3855b7b6be552c0941849d7d1dc6f3e5ab36d0acaa0b520d557cb361e055810af2ed7092745e0e7e8b3e2a7f62700fd3c8a81d92774b011d8a204b391b5482d48f385be2e7b479ef12b22ccfd14f52b60a6d5f9f8e4f5e87d5a477bd004945b4a48f8524bfa96b148d7628a1097ab68af13c2e437604e9b1f1ea4414959e99f75ead1f53ea994d2b35f4bfa293a3b2438048863bb3560596532e77d60373d53177ae86222492652267f3cb1585ee57353c3c3c937ea351e3db9189d40986c2a74151190bf85c3dc9b5d593232441bf4a9d525bc34e91f23611c59d041b10a8aadb6cac979cc842cbeead70c16b6dbb253a9a2c311fdaccce93398114c454c84ca01649a1e70451d1ddaa082f3eb8c5b2b0e0d085dd1630e990ca045103b946a45b392151676bf64bdc45141484683e48b3be01b31b73343e90e560f7809fcb638a56f60a7bcaf77dac1680a655ec2bade4cdb8211d8d48f5732752746ae70fa1347c6c372faaf6d18a9a14fd394c6cd8cd7a64113662611c6c62f644e1a7e7dde96e495e3719243e59ce4ce7f64bd4293749301f445b2278db980dbd06ac704efeeac2af666e0b5b0d1a7fc8242e0b52432fdc455fee5e736d19b20c7016eebed602f1f602b5b92f790e9054e21723653767e60199aa1c7441e4b63372c5ca9dc3e962eb0efe14122de0b1d9f38927f14c242dd5a4fea94058045963d33b3ec7c1b694f005404174e5d0c59139450182d611961c2f309c1ff368d7b7ed6e4151ab7ff771a16d1df4e324098882eec58d04eaac34de663794f98ca397d7a6499a785ed84bdcea79de36935adddcf1ccfa24f6cb8669759e94f46207376e6cc871606b5c4aa385977b57d27416b44351ddfcb8854c72eeef4680a4107993d8f68a80570c947825b064fd78a9476736c778e38c2aa8d49604eb9e9fc3b7d15e75c5f73d57c22bc179fcf5f18e9e7ed0f25eb72360d58d55e82e06e783ebe9b42466be616cae8e59d21e97ba376846bd6c4f5aa702d7fbc91b3e3eb54e52cacc9c0ab5ce053d639f6e276b9361c428fd395936c9acb3a6f84cc678dac7f2bae3b29cbf6a52ccf2138a4d2e6f8b1fcd18b617a7b4e713bfb72d96327c672d7a30a082a43b0a19a8b31b04a5ce888bac92365c10678e56c7344cfca1d2e9b7404a769339963e14bb691a3c05e087594011dcd31eb7395267e44949427611c20455f98eeb4d729f9eb80a85a22b4dc1d1327a15594d3fbf4cff6c981d7e803907059d59cdc2cb4cfb28757e2fdcb4845767add496e8823d316f70fbc1d6d704a99448282719a7045ada0d37b6fa3c4c590d9571ddda0cbc5a8d6704f11196d6c14b88026fa591a5560546ab296f3b8e4eeb36c06cb9ff59aed67a7a0b5722b42f6b4df1b61f9037351727374bb028a1303ee2f90b792312f4bfeb0bfbaefe305bdbfca7c62c1d493a2cbedc0b6fb5f93f18b2df4be2e261c29938182c6ef1197372074051906fd07780153ec0bbffe0c606e369bc090095fec9bfbec71a6cefe5b9e94ddfcec25f23657c8529dcdf23b6a8ea4abbb7a9ddaec237e884fb8f3b2bfc6c9f1dd700a0a840e8ea1a326807cf2741a90c6aab66e77ec5997b6fc6486e980f020ce0165ee5eb04a97ae7fd632a117e5678ceaa406e93bc9f2d0689bab8865e6d4e600d6822a21eec0b9bd2130b9bf301ff15fea160473088c19d557a228dc5ec39a001bd5b304e33dca80bacaa68098d6e446b748c283d4758e66b1307f93c05f8238f122ea53e39a8db78804f0b20fe46c4491925907f71ab516d15b53b69ae685a4bc4b3d121e8991e87ee0779e1816da3a8bb44ddab3e4ce8f6d66008a0cdba2a6ac0df9cc5f4eb9b731b61b676d4664aae4bcb777d49078a7b608859499c2f7d4bffead838966c38242db38c14a5670f2869fefd6dfe81787d4a4cd0b79b32b73f0d57d663cde5632579f5804a2655fde8a28c25a3cee4f65728a4d0a7c327b75d8040c1a28d059f1c6a8c26ae80172d4a7ca95fa2067529f9ead9b2b68ffbb3ee5ef17d8e9d2b0b6f3af7ec4b92e4e89cdd69ed590a47c2c11d57d459b90fe66de2aebd6eca9ae93035f23557e860d9fe43abf8468323d86fb35ae529a3171f3b8ef929eb3ab12c0c12df9036d20afdb6eef8be1157babb632a191283728eefb4e4752294ad124ca365ca7a431cae276e1805c7f41b3abd35e01385144e3cc06a8c4165c343c856cee6e5a920b26b0b242172b22dff8773e2142bb1998ec0bd2d8d9422e9eff3065c9d0c394c77a5fecfa2f880d7edfbbb06cf58d3e643f08a5b9f7590fd3fa13a3b6577ece4169d005cd72dbac22c8b671adcf37496c8ecf8766ed41c3d7fa5b231cb906013c539f6cb69be2d6a9fc178e53f73314cf7d18f39b55ac9db6f3fd1ff686515a33825546610720e2df05fa3240116fb38825303ff840d97c79834067b769a9eb589023f4bb69381172e078a485ef9e844e11346f33d8924ca7b99e4f17e7ac3ee9ab0347a3c058a48e8d04b4f5ee6c2f45ab90ba1f212aa2a8900fba14ac8c0fc23a116d2bdf748578d6f2371a44ee141cf407fc153f31a46acb44c07facd57116cee8f5a0022028649e88fc982dfa36a39d3e10778610377c2b912f7d6de0c35e8d4da24d37ed09223c3b31ab553b84b8eadfdfe4404267d1589d4ea320d027efe67f483668487c0659fd03a17100c38af9bcb2ff0283367619a76204c3616167398a50d5d6e034148e92a08f0d01c7bc33897f23fc946fd6243186a53d2921aa8d0d52b05881b74901dad18b36c2b746b13970aa9469419dd222b035a132d068f05c05360ada0b7bc36b412b6fb6ea802896d139afcf9c9732e046f7ea3bab767e5e1358f7020ca9cbec574e799e2c90a4d5a1f67b18cbf7187da43c68428d703f6ccf999851a2ddb0ed6cebbc870d0ee8bbc0712e872116a60730ad7dfbf563ec085b778fb26ab9cae97c1fb432945eb88fdfba9626c9bee33548c4ebf526512bec74d0bc28633277ff62dda9e97d4efdc2b591a16c1594fa9bbd64a1841f229a8208d4033d539e1b81f63ce632364d72f07fb6d3a66b2924dfff42918f9ef2171dbef0d065b329ff43707779d8422e095a3adeb25db0165b6d5b8c6da688d1a2cfddb340226f8d812586bc0732dc16058a810828e3b6746d83cff4a7b17054b321b82d95b984f3cf95565768a04ce8b87ec4061348abd96090f4a6c0a77b3eefcfcea0c45302b649e5f90398b7c4c5112636bf57c3a8daa05f6e42d6c165b8486badd8d3a707a81cca7da5e8aa4e5cebecb5ebbf05ef8ef984ff6c5f9bb8eea8984d17d374a0022e08b2a863e53b7244b8631f294f681d7f65436f2a265d5aa77a18fcd990190b061046b02483d646600b97aa2a9b8e5a58e87145b4fd4e38c07265c08e2aa1e1f6588ca363b16875274bb04db370a2ec00075140671e726c1173de930a7dcd350d9090f4c254b230b9ad00a05d10785b7becc95bf3f52fb4ae8cf7b9851a57149ba1bf48945743cb9981b2342fc22727f7f78ac65cd711187f853b91ae12e1f516d53eebb78634a03d196f4b096a41472623c8ff45e77a2c08aa904733b25c83a06132fbbd00d26de643ed40c0e448d1ddb726ac6343aea9cc5d0b4a26728560bda3788a91ff8b9cf08ced1e78867f30780ddda4e1ca85870ac23c9701a17ee06241984ac2309d92fa4f842baa482314e8aa0a9bdb6f299a358a06c3444ddb670ac8f75dd0b79ea00db5a755169036c9ede1c08930aa8a2c2adbc0079942d37ea60cd3e0768586cdb5d71231176dd98ffe3418c7ddc768f519f4f611edcd88eb50c98e826918646ba54b28f703187b8f4f160f651b8b4c092cf0fa1388ac3827d888e0d4b9f279843f83c7b3ec49f33588caff1ea4533482561ddbff03d71ba65b3d2ddaf2480d163683e9d6a09c2b3f7d88b8b97b63899d9317a19c14bedfa635d034318dbe6a008fd4070e7513ded899d195c146605f17247d17d48eb7cf57e8f1a412596b933a6ab5c351bd97e9d2305433a355603b4a59c24ea0118840d22069ac60ac731418dd1967e1f6da2c4534d17e08d67016551ced82d5fc40944e4158473e8dcaeb810d0bcf972c5395cf06ddbf27de48d001f181bab7829d0b15fc5822f6412fded6be027d6e9ce66461e60a5592d1e182fa47ca9b1d14308b9bccf962b99b3dfe74916f4a0e4eb08624f67d3a8a59ed0f6d70b991a41269758fd9393f84b98146034963ef8a90afd0320af75e8912d0655d0082eb85ab575477e71d356e86f7c5ffb140c289e61dca16bb0514be3bca71b616422969cf29729ea6ccab03d9cc40012a0fb02e1c1ccb0e146d45d3bfd4176618f2cd824e7a3ec55a6ada7ba7a2e017b2ed87d4655eb8ad8e7c5fc6fb2e52808b7f32f72458b4daf1216af1dd73c0a37ee29bcd193f59f545dc49aa24789b661ea26f2f46c9977b597dbc8af7bb4ecb3e994f04643e20f47b06ac15dfbc166938f8f7e107e89ba134dc582d27e18840b6b1e17a58690a34d1da353d5609e399653c707aa06c54a1a3ba8977dc6ec9956e39b035d696e2d5144a145d1c527abe256adf86154a21ff626bc87ec28bbb6be8091a3c4fbab9448eecbb41e8fcd97447d93f6f0015b48be8c9a2cd57509d5e808963554e1f8011caa03d9c003c18becc5441bc1934ce4f2e97d3274ca503327b02963f971d476a1730c07d5e5d3d0ddf11aa09141dc7c1389c694102084ed162287418051c666e461ab783abab226899642ede9437b2d2f1827cda975293a8a44216a86de5fe84d6c762bcb03443a6c7e26f48d32390a5bff8596e192c12f08de05100ff4f5b830f8fbc0afd155d2238ad1605abd46a5cc8d852162f3ffd65cdbd2df86a381de8956a702527c0b9dfa1674cc845814bec58fbdd9e1f23d327b369ecfb9f5c36b4484c10179acbc78e797bdcdc51eec520ad1d7474ff82014bd5742811efca2e6c0294fd6234c68f09905c2e2e181215673b419ceada5b6be0b56fbb6187d7acea11b884244b2e193f75711bba85bcc30a412d249c3a764f0b28d413e56ed0a2d407ae7ccd6ce0bfcf30df99e99b8de19f3b9324c03bfccde6f7ef9defbdfbdf86abb2c4f8dd21132940993de673af2e62618716f8e1924aa7148bbccb3794c9e37cfda33fe851330daae855a8d2775870280771593a597c34374bf48dcbb19c51324de98b3e39c0a472da92655269ea160b05be5c54189da9c12127f1b131b592e569ad1f27967490e7722bac44e75b2b64683b5648ea672c8f631d0829fd7ee9a4307d303f0ecd4b8142a6a358b10430650599d497ff84efb33fd36da63ebe3980522ec7205ddfb448e6f6ca5080c3f73dd376c4796408916c4af6a36e822eb0dd71f70071001b20d7dc0fdb4d63b127e211f99ccc1ff101f9fd80f5d5576b39372ff7afccdf325813f8c8af2eaa70774a57ffe85d93406af6343248e2403d6d8b755597fddd5ffb8816458b1fd6d35877554ac3191511422fa71eb34f17ab39182eb756727f34ee865bf20cf24ab39f386c7e484be129fba23fcc523758c2c240370b4059f2ec95b81bc9d5c6b9f539f84935adfd92f48eca8a80468862497adaf8b38e6cce12da640b0611d3da11ab445210a292c4295d33b1dfccc265bb00e8758b4e5d85534c52fce18d92ab1a59c656900defa8bd68157b9451d9e56b7f59b78c2543cd6d82d6bacea2a19262bc99708e9f9704dfd5720cf2f762db272f7c8b28a03cac4d1f8c9957036a6c3620e861e3547c8a1f496ac34555cb10a6e4f56ab82117f3f5606580b124018f6a2da073d4a60908c07cc1c8a71b18619a9e6eea1123a0baabea49f6f3a26987fb56990413bb6d9cfb38642940fbc5d7a64652a3227162f091da6616616c42195e5226b3c661d48ca6d2b9b1b3a2eff1131c2dcbd279c96718d30fb1738fa19f52850e734e0768528b72834aad0ba5a0418e96d0cf4b93d6e6f19b4e496999a4e48db5b5c09d99bd7e5d8fd5ea7b3f6625a6caac0e5ba317842c051b2a33f6783073e84bc3bdab530e2d7b9f0d0c47bfbbcb702fca07d59881f076b3eba98bced373ee215ef3094ad6667329c136806462644a37f892db2dd9c13dce3f822c5bd85ea3dc9fbc9b31ffc0f4fcd12d5b3c372dfb88dd8cb3aa5999a85285661ba5d9f302dee4d1953ce74d875ea3347d76ae7510928880980e1ce016161fb46c0a5129940c3a08bb3d877e0d0d5a29cbf772f245964bdddaa9d7376f1e5dbc8ebf93fd87b98e6daea8ecbf87be6edac596208134e5937689a96901a51b4939338189d888971bb63a13ddbe7963a6546d60144712cdcab40a2ecfede5c41f3badcaddacbfb168edfd1d55af95c0e43fc163bd2039ae1d4b38d1fdf99cb1dc5b6673eca4d356caff3a0cd23bc8f5583b6b6d77edfc6fa5f06e9f1431022672305209f3279de53ee86e4fe979996588eaf895f92bbdc275919439bb6ee210984baf0c792c2af6e96ff696f731af79fa5210f4ada8becce254bfc85236c3a3b2baf5ef7d2fefe956d9e8ed97062eec50266c69a3e29c6b3be697464743e45d418b900402be9d54fd3bfa777d90f3fccbbf435251ba3eba9e1f6a1d1a1b960aa6dba67eefbf0a8b10d8116cbe43ace2df90c4c246cd0d0b2a87740b2a47b497ecdc2e8ffc11230d6e5b889232cde02dc8bf341c3a5400f3e0f4289f7878f49d89e3f4b5b1ba88df082a7cb1f0b993d61377afcae3cf555a4ec05a41e5aecf6d407e4340e62f40f34a4c9aadcf775ddc251549eb69112cbfbc6b2f7b797b6807bb0df101a57a8ddb74400aa1ef6e2a2715b47f6e70c68f807ddc2676f4664f62a0d8ff2177ef142cc9418ff672cf131983ab7c41121afaf1b6e5029f6fa9dd0b2beef07795ebd52c06f8cc84b322d8f2d6b519e18ff508bd3c2b90891baa0555536d284121fbe0ed0d4e7777ee2877a1c1841a381f17e1a1a62d9a669147df35b5150cdeb33f13aa4134f5f2147647400acde864c74c824e9dffdea6f66373dd7de0d10420d04a3abd6f4215b5ead288ff0f1a219c8fbb375bb10eace798a7959055d4c80ad5b1c1a992a5876ede20c7324a4bc2feca2f07723cd77a81e246ecd4d11c102db2f637ceb9c589a20637b72b686db624ece9519e28c36ac2bdd406dea3b24a84dcf532a1a16927a1a6deeb192770e11d41898ee7aaa1ba0b9f88c7c20c7530157ac12fa90063e9a027048d07d444e8b318a1b983e03b3d119bf82bb187384d7b37e8d13ff0758146e03a654b972e0847c4510cfd2f89d6228ef52eb2232c005236d868867f7c3ca2ccf80ca8c8cb89f5fca2204a35e0860218b8179dd6bdf17bd99e50f604eb5c17fd8bd2268282c91b2123310e99621a73613b8116c390c7925e081c001f298ebaa9b90616d82e432fbcd7cb62e797bf18feb6ade9a775c9650788f00d63925135abaec25339f5457558fc69d36c28a054476a296f664c6db412eb42e700fe5a2c1d5cfa419fa2a3f149cc97466e4dedd82c4d25f1b9cf85e99aa864e8e61d8068951b3f8f2ab7ae5b33050fb6e9fb1af804a3bfbf3508efb821a0f488b580e34ef5c47cafb5352f0b922a3e8f1c847b52e0d72065454cfdef22b5b0a535f644d7786f5df995ee84e25fd6858a4959ea20f6d182e9b0f7bd59afbea78b894b96eb3db0da047c67278d19cd995eff6235ba6e85efba7793da5764f95580279dad315386a5fd58f9845b01af428c7f254e7cd48170d80699b49ad7e914b96b376c14fb1f2da8e72dc94f9a4cb5a411af34691132218848195cf823d2e5cf363ddffdcfb1a8da5a0fc2e291df6b002c5f0ea3965626a48112cf509a0d8eb001c39f0da0dbfbf226787a488f26c66df3622695803e0a0e9c20d4b5c13631aaa48e8b1f0130a96bfe826733eb72bb61690f2b3d843d4312a175a34b3fe77f54df2615daaae831bd14feefaf458b9f010fa439e13c671ad26f77c578fe2f50d9461a451d47a043bc588b32dc7f98a48ec067299265bd84fc004144545642e75b77c55433ad260732b9834d2e2a8b8b8cec12d473b2dae6e49b45d6712e740bb7b7386272d2ece261f8140f202a22e66fd11394441ad1170107fd4eac1f8bd1bd96bc486f45d4a4704de06caa3e797ac4c6fa8f249fea82fbd4ebff7f6d12c673e387d43bc88466ba491c6000bf2711fbccc409926e2a23a99c6c3483602052e185d0e92207f26c3a37ef0df7a561261a840fc7d72fce64627a626551b824e3afabff48d21f30acc7b3368e9052fba4bd25f199688236b06fdd91bd922bd923f95aba590b27bf6d482fbf213320077dee07610d0f6a930737734ff762c4ac11bcd2e88adad8cf6e6c0947246f2b2b59e7436c7f81255c4ecbea7e41751eff1e528e849c5e096b121900fe778441cf7f989e2c7b872a716af25094a84f625e1b375ee5e6654b69cf69d4627d6956302ffe5d7b72314de3878f8a4292d227e394ee4510e90fb819049897034635a61dffc5c54ca6e8279322608116489f0c7083df51cf794d06d3f1d756408854918406b2fb9cebd146427dfbdcad3ee93612816d23bd4943ffe6344905af10838149cc767b7d725b1931bdaff9943be448e52de3e3df5f6946f41484f7c514e42049533eeaf53e768c8a8fb0d016b47705e3063aa38084ff9454d5aa0d647532f4f897fdee09e194bf729599b3529a8a71fb18ed751c9c652e5175131a42b608731051460b95dbd9b236e0c73909c599e7c95053330f12768056efff8cd883cb8f3fb3baf2e4d0fa9b52c45e594d86f39eb193bc21f024ef48a320de92850741999e5e1ea713fe7e607ed4152af886c7ee33790db20725c9bab08c2c6be0c937cf0af48b4ba4319757a6a90af0e7ac5308087fd52592bfd54427757a35811de83fdecdf4b9650b26026e56f41fcbcb7d1ff77de76229e0ad6ec0ecccb3673eaf591a23492aa32a3c77c98c1ca2adedbd3edc20c679392f360a8c7d0ad2fc9e2a845667c89af5fff609b8280d1e5d928a79c56347d686f7ad83c6adf63a8f625c8fe74e62f13f516f68b85cbcce41ad063ca77348f000965564c97dd03a36f183c819471254743f91c7c35dd9e4fe740c7c54c8caf735111ac4eb45f810e2253c8b78f529dc60c75945b502b1fa1cd2bcf55ce79f0243d00f1fa6a5ebcabdea6a0c3c165495fa90663d8773b169daed6586167c42f76c2e664ae86504afb21dce48203cf34764b3211ed893a4a2ec3c9056e984ec7cdfed0f96785dd11aff8563a0a272e5308eef92e1526db6f22f5d3e6ef84055202ca3881559ea3d76adc6bfc883403c20881b88bc55c3f7d9510c8cb97ff9545b12d14b06d50cebd019ec9cdb748f900c9b46c3b908bfbbd899245e23d5f335fe9d2a2a0323730f98b569045ce5aa5cecb6c0200e3fd4dc5980b493f4c1fcb74c1b0eac48be514e94568f3df6af0a9ee65c7d7a063e43fa7ca86cbb1c6dc70f8e89d3eec95beeb98f409cbebc39ffb3ff3513c824ce35a2a62267cabbd06124e93647c16e756cdd9363a0fd70f8d9ac01b50efe1167ead44c09bdf74e383cd8b974e8c2fbc8d50627c13592b3bc7b5c6a0e0e6b92db8f69e25083a61166e754699400443ce6dcdd4b5bb0cb9146685f4955e79ae56c717be3c81df295a6de11984d2d79d28f8e75c588ff3136b3ea870bb266f5b9a5386398bfcb6a4d6e1a03aa98dea630fbedd608a1162f00108128a1da10ed54793107556bc99d924af361ca14842080a0ca842a5b611cdc6591a6e4668c1ee4745c8bb459dce667498b63b03aefba2b04449cd16b921a12e9dea850d53ec97176120de8b3232884ad5500855611d83edddabf4e2b9a0ce330de824f39e9ec0a58767e80739bcf45fa06ccc0a7e54eb4f0269e89b89222f21c474a3f11ec862ad416c954d853c0639d5f665abfe027b75b7055400c740759769dd57f959e6d5f28b2fa3289c298db5f4776895516fb2bc5a7095496c83c520b486b723bfb6b9f020a12c042a1e104a4417fa81e6975f27d5585ebe98d77acb26e815b74e3231c0de3b465fed4599fed4f51fbe72d356f06bd11c9fa6ee128a1995a75aad2f61b54aa4bed2a241c3f3b78e4a9d9a6c8454a57ce6b0e3b84c9d282bd9d278de98a5116883cd4a54ccf5c61db8e2c75a24daaf1b545349d2296d673228602373fdbd38d32f14053e5925148da0522a117048fed6381ab6c63b9e1bdfb9af8b8067324f1e5d51dc76bd26598f061f006429656f5ab6e3c8ca008ea7a46151f9cd4a512ba6fdc0d8c8953ab46a13ef9ec99c3843ee3febe684e80ea12681e3162bfa5fdbee0d49099a34fb2e0ecb0441d973cff107cc3c1d0b96c0c5573498fad1aee5606f25321706f8eb6dafc428a4e1c60b0d84069e09560e6caa40c5345d73c5e9bdb467fa8f0eed8f42cb5b3ddd5d72438658f47da80ef72491bfeb985cb27bd8587f1b30fa20eff751a34dfd9ff8934ae59fa57e5b361f291cd25f94a0bf2ee3170eac0e4136f8b7e350f843e3779f0a16d203fcd91014c48eaf8f006c6928162f5859cbb6420832eac3b7ddfd07811b366676e6636b70c76419f019e1fb9378db89ec556cca9bd8494ec057b1f79885e1662463cf6de879fa63c9f9cbe0dcb0afab43aa4c99985db4d46462d7279c0e4b17b86b11d7f163948fbe1be1f3fcc2bd421119add266a6098f70cc2b65c504464a626f4a946b2f8a0a19d22a96ecc7d76ec402eb7cf1dbe85ceade8a831ccc55e3bed645696497ce6dc986c7a0aaa0345e401fe5f721a918b2d39c9025a9d330407ea74094a65741d7089179cd12d17e4e89012673362a824fa86cc4fa970d325e8d87b38747f4ab0d05891d68e25affdf6c5e18640355ccf58b376d092b24db56634931e843432467007c259f009d3ddd93066a6e50bd841303be64bc25172be816cd259c4994460b748a643d96bf5efb5a1b79d9e18ed14daa62c05c203f1c5ee088938afc87838216af4696d25345b07a560fe0be200f4628629dd11c9efac6c57e1a9cab77b40901d150d29deb8999c24217585c4d47baab67d87d4767818b15131080e238da4774c3c925e1d74540c4768b4fab0a12dab561ba3e4bddd6b625c6af014a33a32740313173134171bf82d988d860e66e3d2ee09316b7a02c0890767671ca7996183da99370c547dfc68e5763e978befbd34c192f077919cbd4e24f9ff5a504ea8254297a9d41a2169721c1f4890a84b91f8e2d1d6c3580ea370a230c5c1ab1bb9b167c6bb638835ec94a4b69cb5b89627756f3e98ae0022034a43836f7501090d946f822be358888235ab31e4f816f9f359bf3c282904df3755ad0f6414f440c6d8d2e71265a5f7435032ec1fb86d4d878a524512911eeb4f88f7bfa52009450c836acbe8f67b219c9bdd6f7a36c4ceeaa313e579a5d6ae631e463c72374d3627d260ff0dc78a4ee0b1cd8f226f21f014317cbb26a86fbea8ce49e17a275d36434cbc83caedd45f6e30090b0e2f7db1cf21e12669dd84ebc90b7a3cfcb94579272a1c75e0fe0ce1b15861aba77194f74c7eccd65dfca4b971499ec17fe33aa35e68d0739a5fc6d314fd0ecba1cd23f97a7d8a5570ed82f0fb9ed92bdbda4fd96bc2ab9decaca7ff2bd436ed83944bd6895786cb923de0e0071b3dbd0d0bec510031808e66c255706dc52bccb33a2d885bbc161adfba518ae172545633a4acaa0daf31de01a2031df1e8b964ce7e53e83ab1667f790019ffad615c54d1c2d6a9173b7e8dc8ffaab57f8bea367b3046e8efcec1cdc12e58e9401d2e05e7cd2a5fd16883e10b055f11e5ce7ee86a560daeb29052afeb062fe2e9f340ef8081dbed32bb2377aa3ac1f277a0aff84ef4625f2db12f3a4d5fca15783bc0fb5d4bade08fc0da6f4d43b8ab379e84c4a4bce02392e76c5f891dbdd2d924792386ab2f9cb69d1e9504eba57a60442959ec6d244c1acb3aba5054cb91a1137e86140479850825df1ef785963abc7cb96bfb4f4a0b5b612d183eec289f6730b89d6ddb85171a50633a93fe233ca89f6ab727e1399b3192e3eb7b3c09909f954ff58b2b6f7b9fc9215bf056668b7d3ea0224e0fd8e5a8aa4ee61ef6389b51eb23c01ff6e1e1cd6b20cfc9668eabfda37033c8aef241f050129d9a443abdb0bd00f9df627224817acdadd6df17ada9d530b1259a1be3b287e5e9fe091b5f0e89dafae33892593c4652bf11b2cd47f9497b1330f9164402c6810162bd7bf3315e84b87a22da9fea2c2dd83da4adbe0e022f56f675ce17510c52a4d656d646f193055bca29d1de1a5554f7b208c2f4a0f47649a9bdcbcbbd113c3066ab88659947dcbcf2352dd694fa0b12d8d7b1a4b2249af9a611a9b921de8402f337c86d6b712c797f0ab3cfd11ee96542c975a4a07c677e33f4143ffc401b9945cc855bcc0a283839159c2b45f08814984790b49a0323ecccd71e433bcd0fb5c1cf4f92db363e2c8ad8f1fcab75eff8dafc22bba5fbf59bd8a59d4b5b2ea65d317e0c1f20f5aed49962133e1c773cb39a1bd72dc78c10474ba80b5536910f829fe0f772cf906ee5d9840dbf42e8118ec48e7b71dd80f9cb1a55203094a96e0836ccfa66f7938cb14066e577c4bcbabe8a79cf6fe1b47f65d16022e74c21736faa3293cd84ff10d8969fa498328dc00c0d2f0e55ef28be9a58e397e69b8dc76230eded88c5a19201a1b32e991995e97fec574b05a3494006987848f989e17b867fbdf2cfcf28238a2ace3fedefa13809c427ed16bd817f01af194bb927ca93939d456f536e0ebf99aeb0a7bd336a4cf99d7803ab7f5d0bec6dcaeedc1f0fd3aa2abc7435b1858fce000c9d1ce6a723fd85a7706c3b9539c4940a670ee3153545620f2d59e57dfffb20f95c7d233b2f6ea03a95808c52af16ca77742d8342ba0a6b571334c9cf7076688f13b1b7dafe743a1d42b9a2a87902a039ed068297bc13c3995e4196050d748fd25e8022f8d0d7883f2aefdfed26643579c7348d5fb707b29435e9be640f8ea02240829669d537dd1f3ad6156e004bf2b2ca3484b32acdc779b7b694bbff196d499954533e5f9a4ad3a39804c67f99d0c9ce84e7cec3d30b50d47fa91fa5377eb534620466e2b34717b383299e4ee90d5e9dd8b62278d351786c793612dc64201da00fa1b15c91d3c4a427a52d3e3b55e63f64215203943ac22d91361dbf1218cc2c71c5632fafabf41017f4a3c424b7a85571dbf867281260a054e15334a4b917fc6f96251b2e876a6f313c3a5273b7b0d9e97a3d3d8fac018d23fae00ccb17701d6cd4c438ec4e84b13a215ea38833d5a714027d5d659dc8438750391f87e22dcc9908f2323a0d40a9b425b210d4ebb4834eec1500512f0425f5893f7723840fe9e22f34071948590d005a7c9105d1b0e098a8cc8a090fec10ec137bac547f2514c1d68fecb0dc3dd1a46027a1bee293a8bf53e4c8b4cb2112071139ef2ad5d6a6be50f58f434e0c6b9185f60a92115e0ab1bfb4dcf256e3cff8070d9c973d889511dac8988b8a9991ddd1a9a9b738628ef0c337e2a4a4aba714a6f8dc7e24a310d29f4f6b32798773ee9f79ffa48eb7a4fd28158a91724485f06f408810c2c54d62ddf670cb6caf1be8326ef529595157426887debb10a3865d0c1858764708826dd74eb6ca9d7a1b9eacb20609199ca7261d847f2a8b6cb10f23a5b181a9393e8edf606bfab780d4050daae813528c5af86731d199a5f8c3dc8b7a951ea2d007184310fe12c477659648bbebcd98074de898841b4e241d34d45dbfdc4e5e372805165473cf7895aa1cbc255b131ac503e52a9294329f85e97052886fcd3bc24a00594c59b454d0220e0f51a7767cabfb2ffb967e919a446fe1cbd462800309f361c46fba6c6b12810ff5182b8379a094652f441ddd8628f74f7ff2ce40384db4ba156915e46ff85381a4e3550cff44fc38ae39ed010c8300bb2f037f4193cb1e2932e18c3527b9a62b9e0744600ee975eb684e0b0fa137141398765b1a0e03db49a93b3ffadc43560ffa9057564b4a17256778d76b3041f1286fca96f369295fcdde6347d6d0900b794d6f00ab979d846fbabd9562aa686dc375492ffad4113fe6fe9787fff0d68b202dec001e11f398031169862405fc59e4e0ed620c6ba5d724f748e69dfb9c4e5632039686a44d46fd9f9e6375176a95f6b231cad3c316e134887019b43c7cc5d52cba436d31bb0fd8a03647c3d1e8af9567d34204ab622c831d32c9480479359342fd98d8224b539bf4979b0ca12c6e8672618d6599e9026341bc3740038e59b102e7550f40aa9445058a2322ea4106a36411dbb9d94e578f6f8de625dde8c693f35af497efd9029d4c91693975ff7d0b50824137604b66314db6c9f199ab2f20f88d891e9b6dae052bbd7a1f50986af3eba1b7abde103e14079c6ecdaf8cdfc65725bfa516c8fa3ba6fc8e57bb1e9afa8b048cdae2cb9dd2b69aeb386c38b4e264cfce98cb47f0731df6b46c76f85ac2ab64f9e9fb70f6b8a79201f98e449f55e5517c455df6622cb70f29ee094b4d62c708d63b18c3bb7ae7c92dd4b759a1ddb232bead5bf2c2026c975865a5da77ead5e25bf7fdef2b893f963e0a0fa128d81ecb20f9d4d92ea838bff33cac50305178ecc68f04494482bfcfc1135b41393eb2f94159c890c7cc6075767880bd9f9eb57cd961f76c6704f05fbe8c371d12300c9b11f5e8548dd0e426c20fd820f25c5a81795a05f02834eba77b7799e0bece8a00d0bfa70f39ef79be6bf94860c6340581d4466ee7b66635d1f098f6c3a489ff12cc53673c1ca9894388c3bc7f8ad675dd4d34103b8f744ff944f36dd6c90cd14d6ee14c8145ba6a06c6e71df1a05dc9a9d6c1f47b118a3bccee112924d82460e22bdbd8ff92f6439397856097c7e95b8d618acad2c0e3b2990fb685db197e662a9ccd6fe61e7025805719a6b7952538b20061160f0dc675bfb5998a7b032f8405353406715e9a5a3390ace4ff9196dd6a3a6f9f2841390d06196d343f274d891fdb4005c8b81078aa2566470b6e12b92f3166bc05b1d29ccb348e5c08aa8e16bc13a07200622a14eb206792b6eda271e9c7fa0c606024e13df4260421875e9577ef8459576c7be46a91dab657b4502a0f50c5584195d8d64bac9a357acc04162866bf84ac1417fac6d4eb5d514541f58f290f220c2a44f2abeefc124a7b01156d0daa5d6e391b462543ac3be9337f30dbff2765eff3dac2a222d90eaadbcefadf9cd77d1e3edac827261f76d1f4881f7c03fe0cbb7eea9104fa625be0bf182432fa246a923ad0460a103f37c40ffab9b6f4ef41e1b4848a49d83ca7f18e44a47463d0e216a6a4c3cbc3e8651b1c92a322f46afbb0395ba39215f011a5993d623cc0ab1c1cd83adf69bba80284019448877a0c06f709b8a8838fb42760d2fc3b252e809658050b265104e661dbc9b81ebd1d38c8b49a388cbd684f86913935ee63936a78b5cfbf7d0ab66298febc29806ba21f3252c992db88ac5bd57eb9bec1494192c0844c2b597b5f6c9d388097938d1e107421e26cb77178b63f0ee296cd3577f2705aa93aa6f62e3c132890a6986093c8dc5bbb8261201cd1159c2592085e0d779f3691928c42cf79ff3a62f736c86bb41ed218fe47b21b8e8926a1bf45790db72d44b11dbdc741d9d5ef678c8e1771153a0e504aeb0a040fc2e4b165f8a0e9e38d7ef5a72200551a7125ec32aa283ab73525f39caeadc62deaeabf5dd596e6c652cc0e22cd7dcf58e1d932fd9c45ff801aa78ada7d0faa40091aa63d68c008641c9d8f9f0208e5aefc9f356b6caa0b5ff42e15286b22ab31b2c48fc56b5211b0b29298b92e6e4e5b62f0a1aa4d3296345024ecd16bf85575302f1064454cf2abe5d5803f0f8a1cce1e7025c42d23e11aeffd4b62d6aed2840519340f43637c45bf0685660a0a0117b64619732bc751e541d45c159870be8ddeaf493bbe4ed9c1fbdc3e0201ce930ff829cba4b0ec0e826948c47eb49c08412fbf6e4a3d462325301480182ddbccb62f8f0197a3fe6748888c006bc54e270eb2af40482d56cc5a08b56fe6f981256088bd36803d9b28f197c5d94c9ca42b4e1476fe8556e15d69fe44b68c91f77133546af19b34980477dba944981421053d65218fd6bc9dde6fe82aae6e12a4923d49b375fa2230cc2d216436ca08f7ea644d3659a2742a12dbf28abba0c064b24e99d1be656001f257a8652c7493dd04f653fd2f52ba111802cd3d9ae35fac55363ca783722d73e1fd08676817c255c68ad0ceb84213249ff3c0144d6ed6bfe3ce0197e0394303bd9d218d2ef14af47aaa07d156b8d9c6df09fd22c567d2f60015a15357748450f957c155a2cf215c51b853e14e0af9f9770c451109f0d7db2d3b4f73af2154325f9cc052efdfc13b02108ff8116ccca9129d0430b659a3e57d95239fe280425a7a56bd8f7a19513a5a4a760f1673086b02c8e64c0992db7219ff89a55e994f705d73fb0ed4781c01ea19b4b45d9e6decb0986ca33cdd94a9e66298f8618c90fce63eb56cfa14e1237e03a0b0580151aaf455c6b4bb514a5fb2b1028919b8f8b35921066182fda22bba8b801e2f9225cbb767e560212044cc2664b8e0cc4e90052e0eca365b1c3fa5589628dfcf1ccab73c1a2fb831a75691131efd02495d4e670ad02c62330ce716e95cbdb819a8848970f52a5a912f9169ede1213718536305f302c292cc0e1308d62e515fd119dec2d903239818d96d490b8c37abe32471b674606c04dbc4bc1330dbe6db52f8af73d693b7ca91b7f0eb4589f2bac2cd5c902cbaf1c7ba145e3dac3c9f67f214fcb2ae010026f539037ebe94cbd83ddf6b212309cd2895ffb0c7ed33fc5651219121aab622d5f2502be79e77ae783dcba9bec61d0a0dbf36f55ea32159eb8b1a89569aaa931ffcdadd4bf8c4183975515ff8f7b5d3a40cebe0e519a2cf019394e2cf5624360af8a37a3384b72c81151120d17594b238cdc59e667a3d06fb532ed55eb2a783afd35caf2d1b292d31adea34b632c8654df7ad86b9451a5328c01ee18a907a27f38611b99aad3b6a18d0173bc2148b7bcfb553c2e2e3a99dd06623bc3d754d72f41bb8aecdd42570ab54e43767a4047ab27d6e66f11c0d3fcd3443fa14641fc2a1219cf59cc6846e0c590bc4c515e7602ee731cfab8d0afa66929bfa100e85f98bf36e970ad20f6785831762e440701dbd202922ded5c749713bed20a9f06fb605a2f984fd4b01467bfa83ffd568776a18ea73bde040e17d6ef7c31c7a0db1a54a913f24a8b6b5cd1ae0d15be0bdf7687b362f1be8d2eae8be4af589e645341d38a72ce2ea532554d66d9fe7cd4bf56003d02790680c7b35b5047f4e48e5245e7a66d7f56e3059d060ff0b7e4490cff28d37828b462df42cfd549aa3c9108f72051177b9354f8728960b504c126fc69277a326ebceff459ae77c90bfd6e388e6f53091fb92ac0cbadf55148cdc5eef8003c8965b9b261aa021bab04e863336ce769095cabaef68dd805965fd995242fee2f44f50cfc6c1699ffbc1769f4ae15e63c0ac511eed667a065f4fefeffb9eddf2715661fb7c14a0b933f967c569eddd9288e9daab00bf9bd64c2bddbb7dae24ee384576969222f2d2ba17858c30291e15aa0afe8ecb7de5169ab944197922fa4bf8d1876db77946ac354c53c5459e3d135715c17b344ec16c93672022b4dced2e8ab41597e9019b4689ad4e175514b6ede4f6039976161246e80faf48cf50f80d5011fdfac862d7b68a12a3366bfc7f817bc6edaa8a216b60a20bdbadfdd74dd0d16083ef13a8a90687f2fbd334b0bac1342215d44ac5a8c4ef9fefb4a8fc57afd781e41598468db0ed09a44c1889dca8452589e01d97d206ee297ce705399b1938a66632f357067504398a46dd4ce9425a4ad435a2ce0f4ffdf015c10b522de5f6f22b596aacd50cb12322baa7e1e98a388d644b546b143998076afbca450216fd86e24596e03b310e095ceb8d8180f84b47de98ffd98d2806780b508a5f282cba92e3e5af5987b828bb833e4d95d53fc5f05a2adc87638772ab610a29ac4167117488c03fb434489b13a644335ef457ead170d0c74e7cb77c6e92463ccc6b9d1a599e9cbffa7e6cb4b570a76438e566c2ff9e7b553bb8d78dfb7b382d0c77e324ee68700b3218dc4c9d8fd66e7ceeb2fcde83ee621caa6107c470841146e05f96cbaa242d659eee6b52458f5e947629db595659b7cbc4a398a4898faa2fb05fa729b3239dfdb9468b8ee9caeff6edbb6e0826d00f3168db05fb8d93addadea277b4ad0cf8cb6e1c56a12908702c0937670598b7237ec1062404eb5fb3b9b3bd889582979c9648bb97276876330337b2febe92f5ad88d17fafedc9d0e79c6d2cba7200d94a33cc6a378a730479eaed1c504857dc38d5032d46f2cc850908f2f7270a772566ef4ef6d4081bcbef0c2841f041b2057c7f0cb9241d11d3c17b4cd3cc21e0cd52e1a9150179c6c884ac2da11a76cea32aba688379d56c9abe1efee94f685cecdce827aa1735c80292e80320e0e1e76ff6aa7fcd853d0264223c8a739873412ae8e719c46bbd25c0a899c04db434a626bbd8e064a0f9f78b7c7314628f03d1a5ffb7dd40d1400817bd9b36890db7c32dd32623438864932a25e43ebbdb35bfd4c82c190094d888c6e0011b2b4f6cf8dbed742f5bfffcab571bb55ee4c4523ccee2ffeb5c3b45565ce5e4f19cacc30c3cc1bb66d05102eb97a779fb2cea4a874f6a1e1f6b607f950901aead86b85dc7b6f1194322e4a65f1547b14fe3fce588f431cadc0e6b598ba89ebf97be4efbe102c88ee204fa85d63b4be09a3d5ebb0cbae4da911e62ced8c1c97dc9d1f6158db83d4dc9e62ee0545de3f1313ded1d51ac548bb0133c8a78392f49634586a4dd204c13102b10af16fae438d3ff0cc07dc947df2e6accffe6b647f87307d005edc245e85501fa765900f6d9297c44c4205f2ea5937eb12f6950ed6d080fa5336c72026472f231b96300439bd23bbae268f85f150acb6e4641103d020914ba1008702fef299717903b319a5ea8beb4b13ae55de5fc0de22eae882467861194422e9e0b80fb77c0000b4123903e09bd33bb8f0587f10d08d46cfea3b63b52eb0097684a37398d760b9d7f34331abd23925c25f3a70b73d597acbce2b7962d520d794b417a909139d5d51c7efb3e3a2665e2032c706bf63279e98165dc57ca9b298a3a25c3ac6c36206e7b5331762a54262ed7973c9bc506361a9d2ab35a1a9eccb0c422b6bf54c11d0aa2c173c55484abb78a75f1d8aec5a3d6d4906504b9f28e53dfb6783cf05e6ec7122e9751a8df559e89cc0e0819d2e747b376d8571116357ddaaccba86333d766be8450507511ef829c968f98ad6e861ebb13eaec4b6603b67908db04db2f7529d41340d0a31c44f2a16e4d7953c9d266c7401387e75610bae26e263b1e2cf07e34de119161b1a","isRememberEnabled":true,"rememberDurationInDays":0,"staticryptSaltUniqueVariableName":"8a01c5d3519b99bb5af51a466587a22b"};

            // you can edit these values to customize some of the behavior of StatiCrypt
            const templateConfig = {
                rememberExpirationKey: "staticrypt_expiration",
                rememberPassphraseKey: "staticrypt_passphrase",
                replaceHtmlCallback: null,
                clearLocalStorageCallback: null,
            };

            // init the staticrypt engine
            const staticrypt = staticryptInitiator.init(staticryptConfig, templateConfig);

            // try to automatically decrypt on load if there is a saved password
            window.onload = async function () {
                const { isSuccessful } = await staticrypt.handleDecryptOnLoad();

                // if we didn't decrypt anything on load, show the password prompt. Otherwise the content has already been
                // replaced, no need to do anything
                if (!isSuccessful) {
                    // hide loading screen
                    document.getElementById("staticrypt_loading").classList.add("hidden");
                    document.getElementById("staticrypt_content").classList.remove("hidden");
                    document.getElementById("staticrypt-password").focus();

                    // show the remember me checkbox
                    if (isRememberEnabled) {
                        document.getElementById("staticrypt-remember-label").classList.remove("hidden");
                    }
                }
            };

            // handle password form submission
            document.getElementById("staticrypt-form").addEventListener("submit", async function (e) {
                e.preventDefault();

                const password = document.getElementById("staticrypt-password").value,
                    isRememberChecked = document.getElementById("staticrypt-remember").checked;

                const { isSuccessful } = await staticrypt.handleDecryptionOfPage(password, isRememberChecked);

                if (!isSuccessful) {
                    alert(templateError);
                }
            });
        </script>
    </body>
</html>
